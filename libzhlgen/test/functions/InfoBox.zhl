"578d7c240883e4f0ff77fc5589e557565389cf81ec????????8b018b91c8000000":
void InfoBox::OnRender(InfoBox *this<ecx>);
"578d7c240883e4f0ff77fc5589e55756538d45cc8d75d489cb83c10c":
int InfoBox::Clear(InfoBox *this<ecx>);
"578d7c240883e4f0ff77fc5589e557565389cb83c10c83ec2c8b378b5708":
int InfoBox::SetDescription(InfoBox *this<ecx>, Description *desc, int width, int height, InfoBox::ExpandDir dir); 
".578d7c240883e4f0ff77fc5589e557565389cb81ec????????8b47048b37c78550ffffff00000000c68554ffffff00c68564ffffff01c7856cffffff00000000":
void InfoBox::SetText(InfoBox *this<ecx>, const std::string& title, const std::string& text, int width, int height, InfoBox::ExpandDir dir); 
"578d7c240883e4f0ff77fc5589e557565389cb8d4d9c81ec????????8b47048b378945948b470cc744240400000000893424894588e8????????8d461c":
void InfoBox::SetBlueprintWeapon(InfoBox *this<ecx>, const WeaponBlueprint* bp, int status, bool hasWeaponSystem, int yShift); 
".578d7c240883e4f0ff77fc5589f889e557565389cf83c10c81ec????????8b50048b30899558fdffff8b50088b400c89b544fdffff899548fdffff898554fdffff8d461c":
void InfoBox::SetBlueprintDrone(InfoBox *this<ecx>, const DroneBlueprint* bp, int status, bool hasDroneSystem, int yShift); 
"578d7c240883e4f0ff77fc5589e557565389cb83c10c83ec1c8b378d461c890424":
void InfoBox::SetBlueprint(InfoBox *this<ecx>, const ItemBlueprint* bp);
".5789ca8d7c240883e4f0ff77fc5589e55756538d720c81ec????????8b078b5f08898d78fdffffc782c000000031010000c782c4000000b6000000c7821c0100004300000089c1":
void InfoBox::SetBlueprintCrew(InfoBox *this<ecx>, const CrewBlueprint* bp, int yShift, bool detailedCrew);
".578d7c240883e4f0ff77fc5589e557565389cb83c10c83ec1c8b378d461c890424":
void InfoBox::SetBlueprintAugment(InfoBox *this<ecx>, const AugmentBlueprint* bp);

"578d7c240883e4f0ff77fc5589e557565389cf81ec????????83b9ac000000010f84????????8b8fd000000085c90f85????????c78500ffffff30000000807f5c00":
int InfoBox::CalcBoxHeight(InfoBox *this<ecx>);
"83b9b4000000ff74??31c0c38d742600578d7c240883e4f0ff77fc5589e557565389cb83ec4c80792400":
bool InfoBox::IsEmpty(InfoBox *this<ecx>);
"578d7c240883e4f0ff77fc5589e5575389cb83ec10c744240400000000c70424????????e8????????8d43148d8bc0000000":
void InfoBox::constructor(InfoBox *this<ecx>);

struct InfoBox 
{{
	InfoBox()
	{
		this->constructor();
	}

	enum ExpandDir
	{
	  EXPAND_UP = -1,
	  EXPAND_NONE = 0,
	  EXPAND_DOWN = 1,
	};

}};