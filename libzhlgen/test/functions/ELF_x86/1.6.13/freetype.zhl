"5589e5565383ec208b5d088d45f289442408":
static cleanup double freetype::easy_measurePrintLines(int fontData, float x, float y, int width, const std::string& text);
"5589e5565383ec308d45f289442408":
static cleanup int freetype::easy_measureWidth(int fontData, const std::string& text);
".5589e5565383ec308b5d088d45f289442408":
static cleanup int freetype::easy_print(int fontData, float x, float y, const std::string& text);
".5589e5565383ec308b5d088d45f289442408":
static cleanup int freetype::easy_printRightAlign(int fontData, float x, float y, const std::string& text);
".5589e5565383ec308b5d088d45f289442408":
static cleanup int freetype::easy_printNewlinesCentered(int fontData, float x, float y, int width, const std::string& text);
".5589e5565383ec308b5d088d45f289442408":
static cleanup int freetype::easy_printAutoNewlines(int fontData, float x, float y, int width, const std::string& text);
".5589e5565383ec308b5d088d45f289442408":
static cleanup double freetype::easy_printCenter(int fontData, float x, float y, const std::string& text);
"5589e557565383ec6c8b7d088b75188b4514":
static cleanup int freetype::easy_printAutoShrink(int fontData, float x, float y, int width, char unk, const std::string& text);


struct freetype
{{
	//struct font_data;
	
	//static Pointf easy_measurePrintLines(int fontType, float x, float y, int width, const std::string& text);
	//static Pointf measurePrintLines(font_data &fontData, const std::string& str);
}};
