"578d7c240883e4f0ff77fc5589e557565389ce83c17083ec6c8b1fc7419c00000000":
int ShipManager::constructor(ShipManager *this<ecx>, int shipId);
"578d7c240883e4f0ff77fc5589f889e557565389cf8d8d90feffff81ec????????":
void ShipManager::AddInitialCrew(ShipManager *this<ecx>, std::vector<CrewBlueprint>& blueprints);
"578d7c240883e4f0ff77fc5589e557565383ec2c8bb1c8040000837e04ff74??c70424????????89cb":
int ShipManager::GetDodgeFactor(ShipManager *this<ecx>);
"578d7c240883e4f0ff77fc5589f889e557565389cf81ec????????803d??????????8b188b4004889d44ffffff898530ffffff0f84????????":
void ShipManager::OnRender(ShipManager *this<ecx>, bool unk1, bool unk2);
"5589e557565383e4f083ec100fb645088b51648844240f8b416829d0c1f80285c00f84????????":
int ShipManager::CountCrew(ShipManager *this<ecx>, bool boarders);
"578d7c240883e4f0ff77fc5589f889e557565383ec3c8b3f8b70040fb64008":
int ShipManager::TeleportCrew(ShipManager *this<ecx>, ShipManager* other, int room, bool comingBack);
"578d7c240883e4f0ff77fc5589fa89e55756538d99e0040000":
int ShipManager::OnInit(ShipManager *this<ecx>, ShipBlueprint *bp, int shipLevel);
"8b44240483f81174??8b91c8040000833c82ff0f95c0c204008db42600000000b8????????":
bool ShipManager::HasSystem(ShipManager *this<ecx>, int systemId);
"8b51188b411c29d0c1f80285c074??5589e557565389ce31db83e4f0eb??66908b41383b450874??8b461c83c301":
ShipSystem *ShipManager::GetSystemInRoom(ShipManager *this<ecx>, int roomId);
"578d7c240883e4f0ff77fc5589e557565389ce8d8d1cffffff81ec????????":
void ShipManager::OnLoop(ShipManager* this<ecx>);
"578d7c240883e4f0ff77fc5589e55783ec148b078b7f0483f81174??83f8ff74??8b91c8040000":
void ShipManager::SetSystemPowerLoss(ShipManager *this<ecx>, int systemId, int powerLoss);
"578d7c240883e4f0ff77fc5589e557565389cb83ec4c8b810807000085c0":
int ShipManager::CreateSystems(ShipManager *this<ecx>);
"8b810807000085c00f84????????578d7c240883e4f0ff77fc5589e557568db104070000":
int ShipManager::AddSystem(ShipManager *this<ecx>, int systemId);

struct ShipManager {{
	ShipManager(int shipId) 
	{
		this->constructor(shipId);
	}
	
	Pointf GetRandomRoomCenter()
	{
		auto rng = rand();
		auto graph = ShipGraph::GetShipInfo(this->iShipId);
		auto rooms = graph->rooms.size();
		return this->ship.GetRoomCenter(rng % rooms);
	}

}};