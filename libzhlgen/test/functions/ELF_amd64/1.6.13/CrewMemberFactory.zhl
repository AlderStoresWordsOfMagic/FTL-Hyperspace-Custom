"554889fd534883ec08488b7718488b57104889f04829d048c1f8034885c0":
cleanup void CrewMemberFactory::destructor(CrewMemberFactory *this<rdi>);
".53488b4f184889fb488b47104889ca4829c248c1fa034885d2":
cleanup void CrewMemberFactory::Restart(CrewMemberFactory *this<rdi>);
".41564989fe415541545553488b4710488b57184829c2":
cleanup int CrewMemberFactory::CountCloneReadyCrew(CrewMemberFactory *this<rdi>, bool player<rsi>);
".415731c94989ff4156415549bdffffffffffffff1f41544989f45589d55331db4883ec18":
cleanup void CrewMemberFactory::GetCrewPortraitList(CrewMemberFactory *this<rdi>, std::vector<CrewMember*>* vec<rsi>, int teamId<rdx>);
".41574531c04531ff415641554989fd41544989f45589cd5389d34883ec18":
cleanup void CrewMemberFactory::GetCrewList(CrewMemberFactory *this<rdi>, std::vector<CrewMember*>* vec<rsi>, int unk<rdx>, bool unk2<rcx>);
"!.8b07c3906666662e0f1f840000000000":
cleanup int CrewMemberFactory::GetPlayerCrewCount(CrewMemberFactory *this<rdi>);
"!.8b4708c36666662e0f1f840000000000":
cleanup int CrewMemberFactory::GetEnemyCloneCount(CrewMemberFactory *this<rdi>);
".8b47044084f6":
cleanup int CrewMemberFactory::GetCrewCount(CrewMemberFactory *this<rdi>, bool enemy<rsi>);
"!.8b4704c36666662e0f1f840000000000":
cleanup int CrewMemberFactory::GetEnemyCrewCount(CrewMemberFactory *this<rdi>);
".53be????????":
static cleanup bool CrewMemberFactory::IsRace(const std::string& species<rdi>);
".415641554189f5":
cleanup BoarderDrone* CrewMemberFactory::CreateBoarderDrone(CrewMemberFactory *this<rdi>, int shipId<rsi>, const DroneBlueprint* bp<rdx>);
".415641554989d541544189f4554889fdbf20090000534883ec40":
cleanup BattleDrone* CrewMemberFactory::CreateBattleDrone(CrewMemberFactory *this<rdi>, int shipId<rsi>, const DroneBlueprint* bp<rdx>);
".4157415641554989fd41544189d431d2554889f55331db4883ec18":
cleanup void CrewMemberFactory::GetCloneReadyList(CrewMemberFactory *this<rdi>, std::vector<CrewMember*>& vec<rsi>, bool player<rdx>);
".41570f57c94989d741564989fe0f28c1415541545589f5534883ec68":
cleanup RepairDrone* CrewMemberFactory::CreateRepairDrone(CrewMemberFactory *this<rdi>, int shipId<rsi>, const DroneBlueprint* bp<rdx>);
".4157415641554989f54154554889fd534889d34883ec68":
cleanup std::pair<std::string, bool> CrewMemberFactory::GetRandomFriendlyName(CrewMemberFactory *this<rdi>, const std::string& race<rsi>);
".415631d241554989fd41544989f4555331db4883ec20":
cleanup std::vector<std::string> CrewMemberFactory::GetCrewNames<rdi>(CrewMemberFactory *this<rsi>);
".415741564155415455534889fb4881ecb8000000488b5710":
cleanup void CrewMemberFactory::OnLoop(CrewMemberFactory *this<rdi>);
"!.415431c0554889fd53488b4f1031db488b57184829ca":
cleanup void CrewMemberFactory::RemoveExcessCrew(CrewMemberFactory *this<rdi>);
".415741564189ce41554189d541544989f455488d6e08":
cleanup CrewMember* CrewMemberFactory::CreateCrewMember(CrewMemberFactory *this<rdi>, CrewBlueprint* bp<rsi>, int shipId<rdx>, bool intruder<rcx>);

"!f30f11834802000031c9bf(???????\?)ba020000004889e6":
CrewMemberFactory* Global_CrewMemberFactory_Factory;


struct CrewMemberFactory
{{
	void SwapCrewMembers(CrewMember *_first, CrewMember *_second);
	void MoveCrewMemberToEnd(CrewMember *crew);
	void MoveCrewMemberBefore(CrewMember *crew, CrewMember *other);
	void MoveCrewMemberAfter(CrewMember *crew, CrewMember *other);
	void MoveCrewMemberToSpot(CrewMember *crew, CrewMember *other);
}};
