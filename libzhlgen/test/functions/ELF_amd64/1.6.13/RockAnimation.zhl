"f3c3660f1f44000053be????????4889fb4883ec10488d54240fe8????????4883c4104889d85bc353be????????4889fb4883ec10":
static void RockAnimation::__DO_NOT_HOOK_1();
".53be????????4889fb4883ec10488d54240f":
cleanup std::string RockAnimation::GetDeathSound<rdi>(RockAnimation *this<rsi>);
".534889fb4883ec30803d????????007577e8????????89c1":
static void RockAnimation::__DO_NOT_HOOK_2();
".534889fb4883ec30803d????????007577e8????????89c1":
static void RockAnimation::__DO_NOT_HOOK_3();
".534889fb4883ec30803d????????007577e8????????89c1":
cleanup std::string RockAnimation::GetShootingSound<rdi>(RockAnimation *this<rsi>);
".41544189cc5589d5534889fb4883ec50":
cleanup void RockAnimation::constructor(RockAnimation *this<rdi>, const std::string& subRace<rsi>, int iShipId<rdx>, Pointf position<rcx>, bool enemy<r8>);


struct RockAnimation depends (Pointf)
{{
    RockAnimation(const std::string& subRace, int shipId, Pointf position, bool enemy) : CrewAnimation(shipId, subRace, position, enemy)
	{
		this->constructor(subRace, shipId, position, enemy);
	}
}};
