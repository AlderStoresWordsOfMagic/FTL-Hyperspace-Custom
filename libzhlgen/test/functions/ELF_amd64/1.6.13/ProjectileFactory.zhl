"415741564989fe488d7f284d8dbec8000000415541544d8da680000000554889f553498d9e880000004881ec08010000":
cleanup __amd64 void ProjectileFactory::constructor(ProjectileFactory *this<rdi>, const WeaponBlueprint* bp<rsi>, int shipId<rdx>);
".803d????????00534889fb":
cleanup __amd64 void ProjectileFactory::SelectChargeGoal(ProjectileFactory *this<rdi>);
".488b47208b808401000085c0":
cleanup __amd64 bool ProjectileFactory::IsChargedGoal(ProjectileFactory *this<rdi>);
"!.89b7240600004881c758010000":
cleanup __amd64 void ProjectileFactory::SetHacked(ProjectileFactory *this<rdi>, int hacked<rsi>);
".4839b74801000074274885f6":
cleanup __amd64 void ProjectileFactory::SetCurrentShip(ProjectileFactory *this<rdi>, Targetable *ship<rsi>);
".f30f104f0cf30f5e4f10":
cleanup __amd64 void ProjectileFactory::SetCooldownModifier(ProjectileFactory *this<rdi>, float mod<xmm0>);
".5380bff2000000004889fb":
cleanup __amd64 void ProjectileFactory::ForceCoolup(ProjectileFactory *this<rdi>);
"!.4881c758010000":
cleanup __amd64 void ProjectileFactory::RenderChargeBar(ProjectileFactory *this<rdi>, float unk<xmm0>);
"!.530f28c8488d9f580100004883ec10":
cleanup __amd64 void ProjectileFactory::OnRender(ProjectileFactory *this<rdi>, float alpha<xmm0>, bool forceVisual<rsi>);
".8b972006000031c085d2":
cleanup __amd64 bool ProjectileFactory::FireNextShot(ProjectileFactory *this<rdi>);
".53be????????4889fbe8????????85c0":
static cleanup __amd64 int ProjectileFactory::StringToWeapon(const std::string& str<rdi>);
".4157415641554154554889fd488dbf58010000534883ec58":
cleanup __amd64 Projectile* ProjectileFactory::GetProjectile(ProjectileFactory *this<rdi>);
".55534889fb4883ec288b8708060000":
cleanup __amd64 int ProjectileFactory::SpendMissiles(ProjectileFactory *this<rdi>);
".488b472083b88401000001":
cleanup __amd64 int ProjectileFactory::NumTargetsRequired(ProjectileFactory *this<rdi>);
".5589f5534889fb4883ec08488b07":
static cleanup __amd64 void ProjectileFactory::SaveProjectile(Projectile *p<rdi>, int fd<rsi>);
".5589fd534883ec58":
static cleanup __amd64 Projectile* ProjectileFactory::LoadProjectile(int fd<rdi>);
".41544189d4554889f553488b87000100004889fb482b87f800000048c1f80385c0":
cleanup __amd64 void ProjectileFactory::Fire(ProjectileFactory *this<rdi>, std::vector<Pointf>& points<rsi>, int target<rdx>);
".4157415641554989fd415455534881ec88010000":
cleanup __amd64 void ProjectileFactory::Update(ProjectileFactory *this<rdi>);
