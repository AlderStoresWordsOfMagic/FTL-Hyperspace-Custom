All defined variables:

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/crtexe.c:
HINSTANCE __mingw_winmain_hInstance;
_TCHAR *__mingw_winmain_lpCmdLine;
DWORD __mingw_winmain_nShowCmd;
_PIFV mingw_pcinit;
_PVFV mingw_pcppinit;
static int argc;
static int argret;
static char **argv;
static char **envp;
static int has_cctor;
static int mainret;
static int managedapp;
static _startupinfo startinfo;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
const int SpaceDrone::TYPE_COMBAT;
const int SpaceDrone::TYPE_DEFENSE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
static const float SHIELD_ANIM_LENGTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
static const float SUPER_SHIELD_TIME[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
static const float BEAM_SPEED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
static const int SMOKE_DISTANCE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
const int Projectile::DIR_ALL;
const int Projectile::DIR_BOTTOM;
const int Projectile::DIR_HORIZONTAL;
const int Projectile::DIR_LEFT;
const int Projectile::DIR_NUMBER_OF_DIRECTIONS;
const int Projectile::DIR_RIGHT;
const int Projectile::DIR_TOP;
const int Projectile::DIR_VERTICAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.cpp:
static const float DRONE_REBUILD_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.cpp:
std::vector<ShipGraph, std::allocator<ShipGraph> > ShipGraph::ship_graphs;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.cpp:
CrewMemberFactory CrewMemberFactory::Factory;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipObject.cpp:
std::vector<ShipInfo, std::allocator<ShipInfo> > ShipObject::shipInfoList;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int BLAST_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int DOOR_HEALTH_1[3];
static const int DOOR_HEALTH_2[3];
static const int DOOR_HEALTH_3[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int LOCKDOWN_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int SUPER_BLAST_HEALTH;
static const int SUPER_DUPER_BLAST_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Room.h:
const float Room::lightTime;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int CrewAnimation::ANIM_DYING;
const int CrewAnimation::ANIM_FIRING;
const int CrewAnimation::ANIM_PORTRAIT;
const int CrewAnimation::ANIM_PUNCHING;
const int CrewAnimation::ANIM_REPAIRING;
const int CrewAnimation::ANIM_RUNNING;
const int CrewAnimation::ANIM_SHOOTING;
const int CrewAnimation::ANIM_TELE;
const int CrewAnimation::ANIM_TYPING;
const int CrewAnimation::ANIM_WALKING;
const int CrewMember::FIRE_REPAIR;
const int CrewMember::HULL_BREACH_REPAIR;
const int CrewMember::MOVE_AIRLOCK;
const int CrewMember::MOVE_CLOSE_DOOR;
const int CrewMember::MOVE_NORMAL;
const int CrewMember::MOVE_OPEN_DOOR;
const int CrewMember::MOVE_REPAIR;
const int CrewMember::NOT_SELECTED;
const int CrewMember::OXYGEN_REPAIR;
const int CrewMember::POTENTIAL;
const int CrewMember::SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.cpp:
int CrewMember::iDeathCount;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ParticleEmitter.h:
const int ParticleEmitter::MAX_PARTICLES;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.cpp:
static const float METAL_MOVE_NO_O2;
static const float METAL_MOVE_O2;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Ship.cpp:
GL_Texture *Ship::doorSheet;
GL_Texture *Ship::doorSheetLarge;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Ship.cpp:
static const bool PERMANENT_EXPLOSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ParticleEmitter.h:
const int ParticleEmitter::MAX_PARTICLES;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/iostream:
static std::ios_base::Init std::__ioinit;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Store.h:
const int Store::STORE_AUGMENTS;
const int Store::STORE_CREW;
const int Store::STORE_DRONES;
const int Store::STORE_ITEMS;
const int Store::STORE_NONE;
const int Store::STORE_SYSTEMS;
const int Store::STORE_TOTAL;
const int Store::STORE_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
Point SystemControl::drone_position;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
Point SystemControl::weapon_position;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
static PowerBarCache powerBarCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemBox.h:
const int CooldownSystemBox::COOLDOWN_LEVELS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemBox.h:
const float SystemBox::DRAG_SCALE;
const int SystemBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point achievementsTitleLoc;
static const Point advancedOffButtonLoc;
static const Point advancedOnButtonLoc;
static const Point advancedTitleLoc;
static const Point augmentsTitleLoc;
static const Point crewTitleLoc;
static const Point dronesTitleLoc;
static const Point easyButtonLoc;
static const Point enableAdvancedLoc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point hardButtonLoc;
static const Point infoBoxLoc;
static const Point layoutTitleLoc;
static const Point listButtonLoc;
static const Point nameButtonLoc;
static const Point noDronesLoc;
static const Point noWeaponsLoc;
static const Point normalButtonLoc;
static const Point randomLoc;
static const Point repairingLoc1;
static const Point repairingLoc2;
static const Point selectBoxLoc;
static const Point shipNameLoc;
static const Point shipTitleLoc;
static const Point showButtonLoc;
static const Point startButtonLoc;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point typingLoc;
static const Point walkingManLoc;
static const Point weaponsTitleLoc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewBox.h:
const int CrewBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.h:
const int WeaponBox::COOLDOWN_WIDTH;
const int WeaponBox::NAME_OFFSET_X;
const int WeaponBox::NAME_OFFSET_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.cpp:
GL_Texture *WeaponBox::arrow_off;
GL_Texture *WeaponBox::arrow_on;
GL_Texture *WeaponBox::charge_off;
GL_Texture *WeaponBox::charge_on;
GL_Texture *WeaponBox::charge_use;
GL_Texture *WeaponBox::clock_off;
GL_Texture *WeaponBox::clock_on;
GL_Primitive *WeaponBox::missileIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.cpp:
static const int NAME_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ArmamentBox.h:
const int ArmamentBox::BOX_FULL_HEIGHT;
const int ArmamentBox::BOX_HEIGHT;
const int ArmamentBox::BOX_WIDTH;
const int ArmamentBox::HOTKEY_WIDTH;
const int ArmamentBox::ICON_HEIGHT;
const int ArmamentBox::ICON_WIDTH;
const int ArmamentBox::MAX_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewBox.h:
const int CrewBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipSelect.cpp:
GL_Texture *ShipButton::achievementBox;
GL_Texture *ShipButton::achievementBoxSelected;
GL_Texture *ShipButton::achievementImages[5][2];
bool UnlockArrow::arrowImagesLoaded;
GL_Texture *UnlockArrow::arrows[2][2];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/FTLButton.h:
const float FTLButton::blink_speed;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/InfoBox.cpp:
const GL_Color InfoBox::detailsBarOff;
const GL_Color InfoBox::detailsBarOn;
GL_Texture *InfoBox::detailsBoxCenter;
GL_Texture *InfoBox::detailsBoxLeft;
GL_Texture *InfoBox::detailsBoxRight;
GL_Texture *InfoBox::scrapIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/InfoBox.cpp:
static const int descriptionFont;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponControl.cpp:
GL_Texture *WeaponControl::beam_piece_red;
GL_Texture *WeaponControl::beam_piece_yellow;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/DroneBox.h:
const int DroneBox::NAME_OFFSET_X;
const int DroneBox::NAME_OFFSET_Y;
const int DroneBox::NAME_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/DroneBox.cpp:
GL_Primitive *DroneBox::droneIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ArmamentControl.h:
const int ArmamentControl::BOX_SPACING_X;
const int ArmamentControl::BOX_SPACING_Y;
const int ArmamentControl::SMALL_BOX_OFFSET_X;
const int ArmamentControl::SMALL_BOX_POSITION_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CreditScreen.cpp:
static const float SKIP_MESSAGE_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType-SIL.cpp:
static freetype::TextCache freetype::textCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ParticleEmitter.h:
const int ParticleEmitter::MAX_PARTICLES;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/AnimationControl.cpp:
AnimationControl AnimationControl::Animations;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static std::vector<GL_Color, std::allocator<GL_Color> > colorTints;
static GL_Color currentColor;
static bool forceAntialias;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static Matrix4f matrix_stack[16];
static unsigned int matrix_stack_top;
static Matrix4f modelview_matrix;
static int primTypeForRender;
static std::vector<ScissorRegion, std::allocator<ScissorRegion> > scissorStack;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static std::vector<StencilState, std::allocator<StencilState> > stencilStack;
static StencilState stencilState;
static std::vector<GL_Vert, std::allocator<GL_Vert> > verticesForRender;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Animation.cpp:
static PCache primitiveCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ResourceControl.cpp:
ResourceControl ResourceControl::GlobalResources;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.cpp:
TextLibrary Globals::Library;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.cpp:
RandomNumberGenerator Globals::RNG;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.cpp:
EventGenerator EventGenerator::Generator;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
string itemStrings[abi:cxx11][3];
string resourceStrings[abi:cxx11][3];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int LOW;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int MEDIUM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/GeneratorConstants.h:
static const int baseScrapReward;
static const int droneValues[3][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/GeneratorConstants.h:
static const int fuelValues[3][2];
static const float itemDropRates[3];
static const int missileValues[3][2];
static const int scrapPerSector;
static const float scrapVariance[3][2];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventsParser.cpp:
EventsParser EventsParser::Parser;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_upcase[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml_print.hpp:
static const int rapidxml::print_no_indenting;
static const int rapidxml::print_no_indenting;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventsParser.cpp:
static string text_data;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.h:
const int Sector::SECTOR_CIVILIAN;
const int Sector::SECTOR_HOSTILE;
const int Sector::SECTOR_NEBULA;
const int Sector::SECTOR_TYPES;
const int Sector::SECTOR_UNKNOWN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int BASED_DESTROYED_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int DANGER_ZONE_END;
static const int DANGER_ZONE_MOVE;
static const int DANGER_ZONE_RADIUS;
static const int DANGER_ZONE_START;
static const int DANGER_ZONE_TEX_CENTER;
static const int DANGER_ZONE_TEX_EDGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int START_SIZE_X;
static const int START_SIZE_Y;
static const int STAR_GRID_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
BlueprintManager BlueprintManager::Blueprints;
GL_Texture *BlueprintManager::skillIcons[6][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
const int WeaponBlueprint::BOOST_COOLDOWN;
const int WeaponBlueprint::BOOST_DAMAGE;
const int WeaponBlueprint::BOOST_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
static const int RANDOM_SKILLS[8][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
static string text_data;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int DAMAGE_HULL;
static const int DAMAGE_SHIELD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int NO_MISSILE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int UPGRADE_DEFENSIVE;
static const int UPGRADE_NONE;
static const int UPGRADE_OFFENSIVE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/OxygenSystem.h:
const int OxygenSystem::MOD_EMPTY_ROOM;
const int OxygenSystem::MOD_LEAKING_OXYGEN;
const int OxygenSystem::MOD_MAX_OXYGEN;
const int OxygenSystem::MOD_REFILL;
const int OxygenSystem::MOD_SHUTDOWN;
const int OxygenSystem::MOD_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/HackingSystem.cpp:
static const float HACKING_EFFECT_TIMER[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/CloakingSystem.h:
const int CloakingSystem::TELE_ARRIVE;
const int CloakingSystem::TELE_LEAVE;
const int CloakingSystem::TELE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.h:
const int MindSystem::MIND_CONTROL;
const int MindSystem::MIND_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const float DAMAGE_BOOST[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const float HEALTH_BOOST[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const int MIND_CONTROL_COUNT[4];
static const int MIND_CONTROL_LOCK[4];
static const float MIND_CONTROL_TIMER[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.h:
const int Shields::ACTIVE_NO_POWER;
const int Shields::ACTIVE_SHIELD;
const int Shields::CHARGING_SHIELD;
const int Shields::UNACTIVE_SHIELD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.cpp:
GL_Primitive *Shields::shieldsDownPrimitive;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.cpp:
static const float barrierCharge;
static const float barrierTimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/ShipSystem.h:
const int ShipSystem::STATUS_ACTIVE;
const int ShipSystem::STATUS_DAMAGED;
const int ShipSystem::STATUS_DESTROYED;
const int ShipSystem::STATUS_INACTIVE;
const int ShipSystem::STATUS_IONED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/ShipSystem.cpp:
GL_Primitive *ShipSystem::fireImage;
GL_Primitive *ShipSystem::glowBlue;
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ShipSystem::ComputerGlowInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ShipSystem::ComputerGlowInfo> > > ShipSystem::glowInfo[abi:cxx11];
GL_Primitive *ShipSystem::glowRed;
GL_Primitive *ShipSystem::glowWhite;
GL_Primitive *ShipSystem::lockBlue;
GL_Primitive *ShipSystem::lockHack;
GL_Primitive *ShipSystem::lockWhite;
GL_Primitive *ShipSystem::manningBarIon;
GL_Primitive *ShipSystem::manningBarLargeIon;
GL_Primitive *ShipSystem::manningBarLargeOff;
GL_Primitive *ShipSystem::manningBarLargeOn;
GL_Primitive *ShipSystem::manningBarOff;
GL_Primitive *ShipSystem::manningBarOn;
GL_Primitive *ShipSystem::manningGreen;
GL_Primitive *ShipSystem::manningOutline;
GL_Primitive *ShipSystem::manningWhite;
GL_Primitive *ShipSystem::manningYellow;
GL_Primitive *ShipSystem::sabotageImage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/CloneSystem.cpp:
static const int CLONE_HEALTH[4];
static const float CLONE_TIME[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.cpp:
std::vector<PowerManager, std::allocator<PowerManager> > PowerManager::powerManagers;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/TeleportSystem.h:
const int TeleportSystem::TELE_ARRIVE;
const int TeleportSystem::TELE_LEAVE;
const int TeleportSystem::TELE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/font/core.c:
static IDArray fonts;
static IDArray texts;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/font/freetype.c:
uint8_t sil_freetype_antialias;
float sil_freetype_outline;
static struct FT_MemoryRec_ freetype_allocator;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/base.c:
static int display_height;
static GraphicsDisplayModeList *display_mode_list;
static GraphicsDisplayModeList *display_mode_list_no_refresh;
static int display_width;
static uint8_t has_windowed_mode;
static uint8_t initted;
static int num_display_devices;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/framebuffer.c:
static IDArray framebuffers;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/primitive.c:
static uint8_t in_primitive;
static int primitive_count;
static float *primitive_data;
static int primitive_data_bufsize;
static float primitive_data_static_buffer[256];
static uint8_t primitive_error;
static uint32_t primitive_format[4];
static uint8_t primitive_has_color;
static uint8_t primitive_has_texcoord;
static int primitive_size;
static GraphicsPrimitiveType primitive_type;
static IDArray primitives;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/shader.c:
static IDArray shader_pipelines;
static IDArray shaders;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/state.c:
static int viewport_height;
static int viewport_width;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/texture.c:
static IDArray textures;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/input.c:
static InputEvent coalesce_event;
static uint8_t coalesce_movement;
static int coalesce_mutex;
static struct {
    int next_in;
    int next_out;
    InputEvent buffer[1024];
} event_buffer;
static InputEventCallback event_callback;
static SysInputInfo info;
static uint8_t initted;
static JoystickInfo joystick_state[10];
static int key_modifier_state;
static uint8_t key_state[146];
static int last_key_pressed;
static int mouse_hscroll;
static uint8_t mouse_left;
static uint8_t mouse_middle;
static uint8_t mouse_right;
static int mouse_vscroll;
static float mouse_x;
static float mouse_y;
static int num_touches;
static int32_t text_buffer[1000];
static int text_buffer_len;
static int text_buffer_pos;
static uint8_t text_input_on;
static TouchState touches[32];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/main.c:
static int (* const p_sil_main)(int, const char **);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/math/dtrig.c:
static const float dsinf_table[24];
static const float dtanf_table[12];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/math/matrix.c:
const Matrix4f mat4_identity;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/memory.c:
static const uint8_t TEST_fail_sys_alloc;
static const int64_t sys_main_avail;
static const int64_t sys_main_contig;
static const int64_t sys_temp_avail;
static const int64_t sys_temp_contig;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/movie/core.c:
static IDArray movies;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/random.c:
static uint64_t random_state;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/resource/core.c:
int bgdecomp_workqueue;
static const uint8_t TEST_block_load;
static const char * const TEST_override_path_prefix;
static const uint8_t TEST_silent_sync;
static const int8_t TEST_sync_order;
static int bgdecomp_buffer_size;
static int bgdecomp_on;
static int bgdecomp_threshold;
static PackageModuleInfo *packages;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/core.c:
static int allocate_channel_mutex;
static Channel *channels;
static uint8_t device_opened;
static uint8_t enable_headphone_disconnect;
static uint8_t enable_interpolation;
static uint8_t global_pause;
static uint8_t initted;
static int num_channels;
static int playback_rate;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/decode.c:
static struct {
    const SoundFormat format;
    SoundDecodeOpenFunc *open;
} decode_handlers[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/mixer.c:
static float base_volume;
static MixerChannelInfo *copy_channels;
static int mix_rate;
static MixerChannelInfo *mixer_channels;
static int mixer_initted;
static int mixer_mutex;
static int num_channels;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/thread.c:
const uint8_t TEST_fail_create_semaphore;
SysMutexID threads_mutex;
static const uint8_t TEST_fail_create_condvar;
static const uint8_t TEST_fail_create_thread;
static IDArray condvars;
static IDArray mutexes;
static IDArray semaphores;
static IDArray threads;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/time.c:
static uint64_t sys_epoch;
static uint32_t sys_unit;
static double sys_unit_in_sec;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/userdata.c:
static uint8_t flip_image_for_save;
static char *game_title;
static char *next_override_path;
static int num_stats;
static IDArray param_blocks;
static char *program_name;
static struct {
    UserStatInfo info;
    double value;
    uint8_t updated;
} *stats;
static int stats_mutex;
static char *userdata_path;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/utility/strformat.c:
static uint8_t fullwidth_enabled;
static uint8_t plus_as_fullwidth;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/utility/tinflate.c:
static const unsigned long crc32_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/workqueue.c:
static IDArray workqueues;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dsa.c:
GLuint opengl_current_texture_unit;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl.c:
static uint8_t has_debug_output;
static uint8_t has_dsa;
static uint8_t has_framebuffers;
static uint8_t has_separate_shaders;
static uint8_t has_shader_binaries;
static uint8_t has_texture_storage;
static uint8_t has_vertex_attrib_int;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl-funcs.h:
static void (*pglActiveTexture)(GLenum);
static void (*pglAttachShader)(GLuint, GLuint);
static void (*pglBindAttribLocation)(GLuint, GLuint, const GLchar *);
static void (*pglBindBuffer)(GLenum, GLuint);
static void (*pglBindFragDataLocation)(GLuint, GLuint, const GLchar *);
static void (*pglBindFramebuffer)(GLenum, GLuint);
static void (*pglBindProgramPipeline)(GLuint);
static void (*pglBindRenderbuffer)(GLenum, GLuint);
static void (*pglBindTexture)(GLenum, GLuint);
static void (*pglBindTextureUnit)(GLuint, GLuint);
static void (*pglBindVertexArray)(GLuint);
static void (*pglBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
static void (*pglBlendEquation)(GLenum);
static void (*pglBlendFunc)(GLenum, GLenum);
static void (*pglBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
static void (*pglBufferData)(GLenum, GLsizeiptr, const GLvoid *, GLenum);
static void (*pglBufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid *);
static GLenum (*pglCheckFramebufferStatus)(GLenum);
static GLenum (*pglCheckNamedFramebufferStatus)(GLuint, GLenum);
static void (*pglClear)(GLbitfield);
static void (*pglClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
static void (*pglClearDepth)(GLclampd);
static void (*pglClearStencil)(GLint);
static void (*pglColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
static void (*pglCompileShader)(GLuint);
static void (*pglCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
static void (*pglCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const GLvoid *);
static void (*pglCompressedTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const void *);
static void (*pglCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
static void (*pglCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*pglCopyTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*pglCreateFramebuffers)(GLsizei, GLuint *);
static GLuint (*pglCreateProgram)(void);
static void (*pglCreateProgramPipelines)(GLsizei, GLuint *);
static void (*pglCreateRenderbuffers)(GLsizei, GLuint *);
static GLuint (*pglCreateShader)(GLenum);
static void (*pglCreateTextures)(GLenum, GLsizei, GLuint *);
static void (*pglCullFace)(GLenum);
static void (*pglDebugMessageCallback)(GLDEBUGPROC, const void *);
static void (*pglDebugMessageControl)(GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean);
static void (*pglDebugMessageInsert)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *);
static void (*pglDeleteBuffers)(GLsizei, const GLuint *);
static void (*pglDeleteFramebuffers)(GLsizei, const GLuint *);
static void (*pglDeleteProgram)(GLuint);
static void (*pglDeleteProgramPipelines)(GLsizei, const GLuint *);
static void (*pglDeleteRenderbuffers)(GLsizei, const GLuint *);
static void (*pglDeleteShader)(GLuint);
static void (*pglDeleteTextures)(GLsizei, const GLuint *);
static void (*pglDeleteVertexArrays)(GLsizei, const GLuint *);
static void (*pglDepthFunc)(GLenum);
static void (*pglDepthMask)(GLboolean);
static void (*pglDepthRange)(GLclampd, GLclampd);
static void (*pglDetachShader)(GLuint, GLuint);
static void (*pglDisable)(GLenum);
static void (*pglDisableVertexAttribArray)(GLuint);
static void (*pglDrawArrays)(GLenum, GLint, GLsizei);
static void (*pglDrawElements)(GLenum, GLsizei, GLenum, const GLvoid *);
static void (*pglEnable)(GLenum);
static void (*pglEnableVertexAttribArray)(GLuint);
static void (*pglFinish)(void);
static void (*pglFlush)(void);
static void (*pglFramebufferRenderbuffer)(GLenum, GLenum, GLenum, GLuint);
static void (*pglFramebufferTexture2D)(GLenum, GLenum, GLenum, GLuint, GLint);
static void (*pglFrontFace)(GLenum);
static void (*pglGenBuffers)(GLsizei, GLuint *);
static void (*pglGenFramebuffers)(GLsizei, GLuint *);
static void (*pglGenProgramPipelines)(GLsizei, GLuint *);
static void (*pglGenRenderbuffers)(GLsizei, GLuint *);
static void (*pglGenTextures)(GLsizei, GLuint *);
static void (*pglGenVertexArrays)(GLsizei, GLuint *);
static void (*pglGenerateMipmap)(GLenum);
static void (*pglGenerateTextureMipmap)(GLuint);
static GLenum (*pglGetError)(void);
static void (*pglGetFloatv)(GLenum, GLfloat *);
static void (*pglGetFramebufferAttachmentParameteriv)(GLenum, GLenum, GLenum, GLint *);
static void (*pglGetIntegerv)(GLenum, GLint *);
static void (*pglGetNamedBufferSubData)(GLuint, GLintptr, GLsizeiptr, void *);
static void (*pglGetProgramBinary)(GLuint, GLsizei, GLsizei *, GLenum *, void *);
static void (*pglGetProgramInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetProgramPipelineInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetProgramPipelineiv)(GLuint, GLenum, GLint *);
static void (*pglGetProgramiv)(GLuint, GLenum, GLint *);
static void (*pglGetShaderInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetShaderSource)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetShaderiv)(GLuint, GLenum, GLint *);
static const GLubyte *(*pglGetString)(GLenum);
static const GLubyte *(*pglGetStringi)(GLenum, GLuint);
static void (*pglGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid *);
static void (*pglGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat *);
static void (*pglGetTextureImage)(GLuint, GLint, GLenum, GLenum, GLsizei, void *);
static GLint (*pglGetUniformLocation)(GLuint, const GLchar *);
static void (*pglInvalidateFramebuffer)(GLenum, GLsizei, const GLenum *);
static void (*pglInvalidateNamedFramebufferData)(GLuint, GLsizei, const GLenum *);
static GLboolean (*pglIsEnabled)(GLenum);
static GLboolean (*pglIsProgram)(GLuint);
static GLboolean (*pglIsShader)(GLuint);
static void (*pglLinkProgram)(GLuint);
static void (*pglNamedFramebufferRenderbuffer)(GLuint, GLenum, GLenum, GLuint);
static void (*pglNamedFramebufferTexture)(GLuint, GLenum, GLuint, GLint);
static void (*pglNamedRenderbufferStorage)(GLuint, GLenum, GLsizei, GLsizei);
static void (*pglPixelStorei)(GLenum, GLint);
static void (*pglProgramBinary)(GLuint, GLenum, const void *, GLsizei);
static void (*pglProgramParameteri)(GLuint, GLenum, GLint);
static void (*pglProgramUniform1f)(GLuint, GLint, GLfloat);
static void (*pglProgramUniform1i)(GLuint, GLint, GLint);
static void (*pglProgramUniform2fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniform3fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniform4fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniformMatrix4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglRasterPos2i)(GLint, GLint);
static void (*pglReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *);
static void (*pglRenderbufferStorage)(GLenum, GLenum, GLsizei, GLsizei);
static void (*pglScissor)(GLint, GLint, GLsizei, GLsizei);
static void (*pglShaderSource)(GLuint, GLsizei, const GLchar * const *, const GLint *);
static void (*pglStencilFunc)(GLenum, GLint, GLuint);
static void (*pglStencilOp)(GLenum, GLenum, GLenum);
static void (*pglTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
static void (*pglTexParameteri)(GLenum, GLenum, GLint);
static void (*pglTexStorage2D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
static void (*pglTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
static void (*pglTextureParameteri)(GLuint, GLenum, GLint);
static void (*pglTextureStorage2D)(GLuint, GLsizei, GLenum, GLsizei, GLsizei);
static void (*pglTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);
static void (*pglUniform1f)(GLint, GLfloat);
static void (*pglUniform1fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform1i)(GLint, GLint);
static void (*pglUniform1iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform2f)(GLint, GLfloat, GLfloat);
static void (*pglUniform2fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform2i)(GLint, GLint, GLint);
static void (*pglUniform2iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
static void (*pglUniform3fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform3i)(GLint, GLint, GLint, GLint);
static void (*pglUniform3iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
static void (*pglUniform4fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform4i)(GLint, GLint, GLint, GLint, GLint);
static void (*pglUniform4iv)(GLint, GLsizei, const GLint *);
static void (*pglUniformMatrix2fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUseProgram)(GLuint);
static void (*pglUseProgramStages)(GLuint, GLbitfield, GLuint);
static void (*pglValidateProgram)(GLuint);
static void (*pglValidateProgramPipeline)(GLuint);
static void (*pglVertexAttribIPointer)(GLuint, GLint, GLenum, GLsizei, const GLvoid *);
static void (*pglVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid *);
static void (*pglViewport)(GLint, GLint, GLsizei, GLsizei);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl.c:
static void (*saved_glBindTextureUnit)(GLuint, GLuint);
static GLenum (*saved_glCheckNamedFramebufferStatus)(GLuint, GLenum);
static void (*saved_glCompressedTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const void *);
static void (*saved_glCopyTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*saved_glCreateFramebuffers)(GLsizei, GLuint *);
static void (*saved_glCreateProgramPipelines)(GLsizei, GLuint *);
static void (*saved_glCreateRenderbuffers)(GLsizei, GLuint *);
static void (*saved_glCreateTextures)(GLenum, GLsizei, GLuint *);
static void (*saved_glGenerateTextureMipmap)(GLuint);
static void (*saved_glGetTextureImage)(GLuint, GLint, GLenum, GLenum, GLsizei, void *);
static void (*saved_glInvalidateNamedFramebufferData)(GLuint, GLsizei, const GLenum *);
static void (*saved_glNamedFramebufferRenderbuffer)(GLuint, GLenum, GLenum, GLuint);
static void (*saved_glNamedFramebufferTexture)(GLuint, GLenum, GLuint, GLint);
static void (*saved_glNamedRenderbufferStorage)(GLuint, GLenum, GLsizei, GLsizei);
static void (*saved_glTextureParameteri)(GLuint, GLenum, GLint);
static void (*saved_glTextureStorage2D)(GLuint, GLsizei, GLenum, GLsizei, GLsizei);
static void (*saved_glTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/framebuffer.c:
static OpenGLSysFramebuffer *current_framebuffer;
static GLuint default_framebuffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/graphics.c:
unsigned int opengl_device_generation;
int opengl_window_height;
int opengl_window_width;
int (*shader_compile_context_callback)(void);
static DeleteInfo *delete_info;
static uint8_t delete_info_fixed_size;
static int delete_info_len;
static int delete_info_size;
static uint32_t features_avail;
static uint32_t formats_supported;
static int glsl_major_version;
static int glsl_minor_version;
static int major_version;
static int minor_version;
static int opengl_thread;
static uint8_t wrapped_dsa;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/primitive.c:
static GLuint current_index_buffer;
static GLuint current_vertex_buffer;
static int immediate_vbo_sizes[128];
static GLuint immediate_vertex_buffers[128];
static int next_immediate_vbo;
static GLuint single_quad_index_buffer;
static const uint16_t single_quad_indices[6];
static uint8_t vertex_attrib_enabled[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader.c:
static char *attribute_bindings[256];
static uint8_t binary_retrievable_hint;
static OpenGLSysShaderPipeline *current_pipeline;
static int num_attribute_bindings;
static int standard_attribute_bindings[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader-gen.c:
static ShaderInfo *current_shader;
static ShaderSourceCallback *fragment_shader_source_callback;
static int num_user_attribs;
static int num_user_uniforms;
static ShaderKeyCallback *shader_key_callback;
static char **user_attrib_names;
static int8_t *user_attrib_sizes;
static UserUniformInfo *user_uniforms;
static ShaderSourceCallback *vertex_shader_source_callback;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader-table.c:
static uint8_t allow_dynamic_resize;
static uint64_t last_used_counter;
static TableEntry *shader_table;
static int shader_table_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/state.c:
OpenGLSysTexture *opengl_current_texture;
GLuint opengl_current_texture_id;
uint8_t opengl_framebuffer_changed;
Vector4f opengl_primitive_color;
uint8_t opengl_primitive_color_used;
uint8_t opengl_shader_objects_enabled;
static uint8_t alpha_reference_changed;
static GraphicsComparisonType alpha_test_comparison;
static uint8_t alpha_test_enabled;
static float alpha_test_reference;
static GLenum blend_alpha_dest;
static uint8_t blend_alpha_enabled;
static GLenum blend_alpha_src;
static Vector4f blend_color;
static GLenum blend_dest;
static uint8_t blend_enabled;
static GLenum blend_op;
static GLenum blend_src;
static int clip_bottom;
static uint8_t clip_enabled;
static int clip_height;
static int clip_left;
static int clip_width;
static uint8_t color_write_alpha;
static uint8_t color_write_blue;
static uint8_t color_write_green;
static uint8_t color_write_red;
static float depth_far;
static float depth_near;
static GLenum depth_test_comparison;
static uint8_t depth_test_enabled;
static uint8_t depth_write_enabled;
static uint8_t face_cull_cw;
static uint8_t face_cull_enabled;
static uint8_t fog_changed;
static Vector4f fog_color;
static uint8_t fog_enabled;
static float fog_end;
static Vector2f fog_params;
static float fog_start;
static Vector4f fog_transform;
static uint8_t fog_transform_changed;
static Matrix4f model_matrix;
static uint8_t model_matrix_changed;
static uint8_t model_matrix_is_identity;
static float point_size;
static uint8_t point_size_changed;
static uint8_t primitive_color_changed;
static Matrix4f projection_matrix;
static uint8_t projection_matrix_changed;
static GLenum stencil_comparison;
static unsigned int stencil_mask;
static GLenum stencil_op_dfail;
static GLenum stencil_op_dpass;
static GLenum stencil_op_sfail;
static unsigned int stencil_reference;
static uint8_t stencil_test_enabled;
static Vector2f texture_offset;
static uint8_t texture_offset_changed;
static uint8_t texture_offset_is_zero;
static Matrix4f transformation_matrix;
static uint8_t transformation_matrix_changed;
static Matrix4f view_matrix;
static uint8_t view_matrix_changed;
static int viewport_bottom;
static int viewport_height;
static int viewport_left;
static int viewport_width;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/misc/ioqueue.c:
static SysCondVarID enqueue_event;
static int first_pending;
static SysThreadID io_thread_id;
static int last_pending;
static int64_t read_limit;
static IORequest *requests;
static int requests_last_used;
static SysMutexID requests_mutex;
static int requests_size;
static uint8_t thread_stop_flag;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/misc/joystick-db.c:
static const JoystickDesc joystick_db[80];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/condvar.c:
void (*p_InitializeConditionVariable)(PCONDITION_VARIABLE);
BOOL (*p_SleepConditionVariableCS)(PCONDITION_VARIABLE, PCRITICAL_SECTION, DWORD);
void (*p_WakeAllConditionVariable)(PCONDITION_VARIABLE);
void (*p_WakeConditionVariable)(PCONDITION_VARIABLE);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-base.c:
ID3D11DeviceContext *d3d_context;
ID3D11Device *d3d_device;
unsigned int d3d_device_generation;
D3D_FEATURE_LEVEL d3d_feature_level;
const char *d3dcompiler_name;
HRESULT (*p_D3DCompile)(LPCVOID, SIZE_T, LPCSTR, const D3D_SHADER_MACRO *, ID3DInclude *, LPCSTR, LPCSTR, UINT, UINT, 
    ID3DBlob **, ID3DBlob **);
HRESULT (*p_D3DReflect)(LPCVOID, SIZE_T, const IID * const, void **);
static HMODULE d3d11_handle;
static ID3D11Texture2D *d3d_default_rendertarget;
static ID3D11RenderTargetView *d3d_default_rtview;
static ID3D11Texture2D *d3d_depthbuffer;
static DXGI_FORMAT d3d_depthformat;
static ID3D11DepthStencilView *d3d_depthview;
static IDXGISwapChain *d3d_swapchain;
static HMODULE d3dcompiler_handle;
static PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN p_D3D11CreateDeviceAndSwapChain;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-framebuffer.c:
static D3DSysFramebuffer *current_framebuffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-inputlayout.c:
static ILCacheEntry il_cache[8191];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-primitive.c:
static char attrib_name[32][16];
static ID3D11Buffer *single_quad_index_buffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
uint8_t d3d_shader_objects_enabled;
static char *attribute_bindings[32];
static D3DSysShaderPipeline *current_pipeline;
static UINT debug_flag;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-defshaders.i:
static const D3DPrecompiledShader default_ps_bytecode[5][3][2][5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
static ID3D11PixelShader *default_ps_cache[5][3][2][5];
static ID3D11Buffer *default_ps_uniforms;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-defshaders.i:
static const D3DPrecompiledShader default_vs_bytecode[3][5][3][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
static ID3D11VertexShader *default_vs_cache[3][5][3][2];
static ID3D11Buffer *default_vs_uniforms;
static uint8_t gen_shaders_installed;
static int num_attribute_bindings;
static UINT opt_flag;
static uint8_t save_shader_binaries;
static int standard_attribute_bindings[3];
static const char * conststandard_attribute_names[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-state.c:
static GraphicsComparisonType alpha_comparison;
static uint8_t alpha_test_enabled;
static D3D11_BLEND_DESC blend;
static Vector4f blend_color;
static uint8_t blend_dirty;
static uint8_t blend_separate_alpha;
static D3D11_RECT clip_region;
static uint8_t clip_region_dirty;
static int default_rt_height;
static int default_rt_width;
static uint8_t depth_write;
static D3D11_DEPTH_STENCIL_DESC depthstencil;
static uint8_t depthstencil_dirty;
static uint8_t fixed_color_used;
static uint8_t fog_enabled;
static float fog_end;
static uint8_t fog_range_dirty;
static float fog_start;
static Matrix4f model_matrix;
static uint8_t model_matrix_is_identity;
static Matrix4f projection_matrix;
static D3DPixelUniformBlock ps_data;
static uint8_t ps_data_dirty;
static D3D11_RASTERIZER_DESC raster;
static uint8_t raster_dirty;
static int safe_clear_color_uniform;
static D3DSysShaderPipeline *safe_clear_pipeline;
static uint8_t stencil_ref;
static uint8_t tex_offset_used;
static uint8_t transform_matrix_dirty;
static Matrix4f view_matrix;
static D3D11_VIEWPORT viewport;
static uint8_t viewport_dirty;
static D3DVertexUniformBlock vs_data;
static uint8_t vs_data_dirty;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-texture.c:
static D3DSysTexture *current_texture[16];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/files.c:
static AsyncInfo async_info[100];
static SysMutexID async_info_mutex;
static const int async_info_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/graphics.c:
static uint8_t center_window;
static HANDLE create_window_event;
static int current_device;
static int current_mode;
static HWND current_window;
static uint8_t d3d_available;
static int depth_bits;
static int desired_opengl_major;
static int desired_opengl_minor;
static DEVMODE *device_modes;
static int device_to_use;
static struct {
    char name[32];
    int default_mode;
} *devices;
static uint8_t fullscreen;
static uint8_t grab_requested;
static SysGraphicsInfo graphics_info;
static uint8_t initted;
static int8_t minimize_fullscreen;
static int minmax_override_height;
static int minmax_override_width;
static uint8_t mouse_grabbed;
static uint8_t multisample;
static int multisample_samples;
static HMODULE opengl32_handle;
static HGLRC (*p_wglCreateContext)(HDC);
static BOOL (*p_wglDeleteContext)(HGLRC);
static HGLRC (*p_wglGetCurrentContext)(void);
static PROC (*p_wglGetProcAddress)(const char *);
static BOOL (*p_wglMakeCurrent)(HDC, HGLRC);
static PFNWGLSWAPINTERVALEXTPROC p_wglSwapIntervalEXT;
static uint8_t quit_requested;
static float refresh_rate;
static int saved_mode;
static HANDLE setpixelformat_event;
static uint8_t show_mouse_pointer;
static uint8_t single_threaded;
static int stencil_bits;
static uint8_t use_direct3d;
static uint8_t use_opengl_debug;
static uint8_t vsync;
static HGLRC wgl_context;
static HDC wgl_context_dc;
static ATOM wgl_pixel_format_hack_class;
static const char * const wgl_pixel_format_hack_class_name;
static ATOM window_class;
static const char * const window_class_name;
static int window_depth_bits;
static uint8_t window_focused;
static uint8_t window_fullscreen;
static int window_height;
static uint8_t window_is_d3d;
static int window_max_aspect_x;
static int window_max_aspect_y;
static int window_max_height;
static int window_max_width;
static int window_min_aspect_x;
static int window_min_aspect_y;
static int window_min_height;
static int window_min_width;
static uint8_t window_minimized;
static uint8_t window_resizable;
static int window_resize_last_height;
static int window_resize_last_width;
static int window_resize_new_height;
static int window_resize_new_width;
static uint8_t window_resize_pending;
static int window_samples;
static int window_stencil_bits;
static HANDLE window_thread;
static char *window_title;
static int window_width;
static int window_x;
static int window_y;
static DWORD windowed_style;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/input.c:
static InputEventCallback event_callback;
static HMODULE hid_module;
static uint8_t initted;
static CRITICAL_SECTION input_message_lock;
static RAWINPUTDEVICE joystick_descs[2];
static SysSemaphoreID joystick_discovery_stop_sem;
static SysThreadID joystick_discovery_thread_id;
static SysInputJoystick *joystick_info;
static SysMutexID joystick_mutex;
static JoystickInfo *joysticks;
static unsigned int next_touch_id;
static int num_joysticks;
static boolean (*p_HidD_GetProductString)(HANDLE, PVOID, DWORD);
static boolean (*p_HidD_GetSerialNumberString)(HANDLE, PVOID, DWORD);
static LONG (*p_HidP_GetCaps)(PHIDP_PREPARSED_DATA, PHIDP_CAPS);
static LONG (*p_HidP_GetSpecificButtonCaps)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PHIDP_BUTTON_CAPS, 
    PULONG, PHIDP_PREPARSED_DATA);
static LONG (*p_HidP_GetSpecificValueCaps)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PHIDP_VALUE_CAPS, PULONG, 
    PHIDP_PREPARSED_DATA);
static LONG (*p_HidP_GetUsageValue)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PULONG, PHIDP_PREPARSED_DATA, 
    PCHAR, DWORD);
static LONG (*p_HidP_GetUsagesEx)(HIDP_REPORT_TYPE, unsigned short, PUSAGE_AND_PAGE, DWORD *, PHIDP_PREPARSED_DATA, 
    PCHAR, DWORD);
static DWORD (*p_XInputGetCapabilities)(DWORD, DWORD, XINPUT_CAPABILITIES *);
static DWORD (*p_XInputGetState)(DWORD, XINPUT_STATE *);
static DWORD (*p_XInputSetState)(DWORD, XINPUT_VIBRATION *);
static uint16_t pending_utf16_surrogate;
static uint8_t text_active;
static uint8_t touch_available;
static struct {
    int pointer;
    unsigned int id;
} touch_map[32];
static uint8_t touch_to_mouse;
static uint8_t vk_map[256];
static const struct {
    uint16_t flag;
    uint8_t name;
} xinput_button_map[10];
static HMODULE xinput_module;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/main.c:
static const uint8_t TEST_windows_no_main_abort;
static char executable_dir[4096];
static LPTOP_LEVEL_EXCEPTION_FILTER original_exception_handler;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/misc.c:
static int last_error_code;
static DWORD last_windows_error_code;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound.c:
static HANDLE avrt_dll;
static AudioDriver *driver;
static SysSemaphoreID latency_change_complete;
static SysSemaphoreID latency_change_requested;
static int playback_thread_id;
static uint8_t playback_thread_stop;
static float requested_latency;
static uint8_t sound_initted;
static int sound_rate;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound-wasapi.c:
AudioDriver windows_wasapi_driver;
static float base_latency;
static uint16_t *chosen_device_id;
static IAudioClient *client;
static HANDLE completion_event;
static BYTE *current_buffer;
static LONG default_device_changed;
static uint16_t *default_device_id;
static uint8_t device_buffer_empty;
static DeviceInfo *device_list;
static SysMutexID device_list_mutex;
static IMMDeviceEnumerator *enumerator;
static const CLSID local_CLSID_MMDeviceEnumerator;
static const IID local_IID_IAudioClient;
static const IID local_IID_IAudioClockAdjustment;
static const IID local_IID_IAudioRenderClient;
static const IID local_IID_IMMDeviceEnumerator;
static const IID local_IID_IMMEndpoint;
static const IID local_IID_IMMNotificationClient;
static const GUID local_KSDATAFORMAT_SUBTYPE_IEEE_FLOAT;
static const GUID local_KSDATAFORMAT_SUBTYPE_PCM;
static const PROPERTYKEY local_PKEY_Device_FriendlyName;
static int16_t *mixer_buffer;
static int mixer_buffer_len;
static SILNotificationClient notification_client;
static IAudioRenderClient *render_client;
static int sound_channels;
static int sound_rate;
static int wasapi_buffer_len;
static enum {FORMAT_S16 = 1, FORMAT_S32, FORMAT_F32} wasapi_format;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound-winmm.c:
int next_buffer;
AudioDriver windows_winmm_driver;
static int buffer_len;
static AudioBuffer *buffers;
static HANDLE completion_event;
static int num_buffers;
static int sound_rate;
static HWAVEOUT wave_device;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/thread.c:
static DWORD sys_thread_key;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/time.c:
static uint64_t last_time;
static int ticks_per_sec;
static uint64_t time_offset;
static uint8_t time_shift;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/userdata.c:
const char * const TEST_windows_userdata_path;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftrfork.c:
static const ft_raccess_guess_rec ft_raccess_guess_table[9];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/fttrigon.c:
static const FT_Angle ft_trig_arctan_table[22];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftoutln.c:
static const FT_Outline null_outline;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftglyph.c:
const FT_Glyph_Class ft_bitmap_glyph_class;
const FT_Glyph_Class ft_outline_glyph_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftinit.c:
static const FT_Module_Class * constft_default_modules[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
const FT_Module_Class psnames_module_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const unsigned char ft_adobe_glyph_list[55997];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
static const FT_Int ft_extra_glyph_name_offsets[10];
static const char ft_extra_glyph_names[85];
static const FT_UInt32 ft_extra_glyph_unicodes[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const short ft_mac_names[258];
static const short ft_sid_names[391];
static const char ft_standard_glyph_names[3696];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
static const FT_Service_PsCMapsRec pscmaps_interface;
static const FT_ServiceDescRec pscmaps_services[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const unsigned short t1_expert_encoding[256];
static const unsigned short t1_standard_encoding[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
const FT_Module_Class sfnt_module_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/ttcmap.c:
const TT_CMap_ClassRec tt_cmap0_class_rec;
const TT_CMap_ClassRec tt_cmap10_class_rec;
const TT_CMap_ClassRec tt_cmap12_class_rec;
const TT_CMap_ClassRec tt_cmap13_class_rec;
const TT_CMap_ClassRec tt_cmap14_class_rec;
const TT_CMap_ClassRec tt_cmap2_class_rec;
const TT_CMap_ClassRec tt_cmap4_class_rec;
const TT_CMap_ClassRec tt_cmap6_class_rec;
const TT_CMap_ClassRec tt_cmap8_class_rec;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
static const SFNT_Interface sfnt_interface;
static const FT_Service_BDFRec sfnt_service_bdf;
static const FT_Service_GlyphDictRec sfnt_service_glyph_dict;
static const FT_Service_PsFontNameRec sfnt_service_ps_name;
static const FT_Service_SFNT_TableRec sfnt_service_sfnt_table;
static const FT_ServiceDescRec sfnt_services[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/ttcmap.c:
static const TT_CMap_Class tt_cmap_classes[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
static const FT_Service_TTCMapsRec tt_service_get_cmap_info;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftgrays.c:
const FT_Raster_Funcs ft_grays_raster;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftsmooth.c:
const FT_Renderer_Class ft_smooth_lcd_renderer_class;
const FT_Renderer_Class ft_smooth_lcdv_renderer_class;
const FT_Renderer_Class ft_smooth_renderer_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftgrays.c:
static const FT_Outline_Funcs func_interface;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttinterp.c:
const TT_GraphicsState tt_default_graphics_state;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttdriver.c:
const FT_Driver_ClassRec tt_driver_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttinterp.c:
static const FT_Byte Pop_Push_Count[256];
static const FT_Char opcode_length[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttdriver.c:
static const FT_Service_MultiMastersRec tt_service_gx_multi_masters;
static const FT_Service_PropertiesRec tt_service_properties;
static const FT_Service_TrueTypeEngineRec tt_service_truetype_engine;
static const FT_Service_TTGlyfRec tt_service_truetype_glyf;
static const FT_ServiceDescRec tt_services[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_arab_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_arab_nonbase_uniranges[19];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_arab_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_arab_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afmodule.c:
const FT_AutoHinter_InterfaceRec af_autofitter_interface;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_beng_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_beng_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_beng_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_beng_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afblue.c:
const char af_blue_strings[1904];
const AF_Blue_StringRec af_blue_stringsets[90];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afcjk.c:
const AF_WritingSystemClassRec af_cjk_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_c2cp_style_class;
const AF_StyleClassRec af_cyrl_c2sc_style_class;
const AF_StyleClassRec af_cyrl_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_cyrl_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_ordn_style_class;
const AF_StyleClassRec af_cyrl_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_cyrl_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_sinf_style_class;
const AF_StyleClassRec af_cyrl_smcp_style_class;
const AF_StyleClassRec af_cyrl_subs_style_class;
const AF_StyleClassRec af_cyrl_sups_style_class;
const AF_StyleClassRec af_cyrl_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_cyrl_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_deva_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_deva_nonbase_uniranges[8];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_deva_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_deva_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afdummy.c:
const AF_WritingSystemClassRec af_dummy_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_c2cp_style_class;
const AF_StyleClassRec af_grek_c2sc_style_class;
const AF_StyleClassRec af_grek_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_grek_nonbase_uniranges[8];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_ordn_style_class;
const AF_StyleClassRec af_grek_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_grek_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_sinf_style_class;
const AF_StyleClassRec af_grek_smcp_style_class;
const AF_StyleClassRec af_grek_subs_style_class;
const AF_StyleClassRec af_grek_sups_style_class;
const AF_StyleClassRec af_grek_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_grek_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_gujr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_gujr_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_gujr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_gujr_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_guru_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_guru_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_guru_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_guru_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_hani_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hani_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_hani_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hani_uniranges[31];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_hebr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hebr_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_hebr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hebr_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afindic.c:
const AF_WritingSystemClassRec af_indic_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_khmr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khmr_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_khmr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khmr_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_khms_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khms_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_khms_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khms_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_knda_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_knda_nonbase_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_knda_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_knda_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_lao_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_lao_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_lao_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_lao_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latb_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latb_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latb_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latb_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/aflatin.c:
const AF_WritingSystemClassRec af_latin_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_c2cp_style_class;
const AF_StyleClassRec af_latn_c2sc_style_class;
const AF_StyleClassRec af_latn_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latn_nonbase_uniranges[17];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_ordn_style_class;
const AF_StyleClassRec af_latn_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latn_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_sinf_style_class;
const AF_StyleClassRec af_latn_smcp_style_class;
const AF_StyleClassRec af_latn_subs_style_class;
const AF_StyleClassRec af_latn_sups_style_class;
const AF_StyleClassRec af_latn_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latn_uniranges[33];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latp_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latp_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latp_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latp_uniranges[14];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_limb_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_limb_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_limb_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_limb_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_mlym_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mlym_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_mlym_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mlym_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_mymr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mymr_nonbase_uniranges[13];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_mymr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mymr_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_none_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_none_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_none_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_none_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_orya_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_orya_nonbase_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_orya_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_orya_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_ScriptClass af_script_classes[29];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sinh_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sinh_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sinh_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sinh_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_StyleClass af_style_classes[56];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sund_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sund_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sund_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sund_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sylo_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sylo_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sylo_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sylo_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_taml_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_taml_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_taml_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_taml_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_telu_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_telu_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_telu_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_telu_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_thai_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_thai_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_thai_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_thai_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_tibt_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_tibt_nonbase_uniranges[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_tibt_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_tibt_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_WritingSystemClass af_writing_system_classes[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afmodule.c:
const FT_Module_Class autofit_module_class;
static const FT_Service_PropertiesRec af_service_properties;
static const FT_ServiceDescRec af_services[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afwarp.c:
static const AF_WarpScore af_warper_weights[64];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftbitmap.c:
static const FT_Bitmap null_bitmap;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libnogg/src/decode/decode.c:
static const float floor1_inverse_db_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libnogg/src/decode/crc32.c:
uint32_t crc_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libpng/png.c:
static const png_xy sRGB_xy;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libpng/pngerror.c:
static const char png_digit[16];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libpng/pngtrans.c:
static const png_byte fourbppswaptable[256];
static const png_byte onebppswaptable[256];
static const png_byte twobppswaptable[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/crc32.h:
static const z_crc_t crc_table[8][256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/deflate.c:
const char deflate_copyright[69];
static const config configuration_table[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/inftrees.c:
const char inflate_copyright[48];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
const uch _dist_code[512];
const uch _length_code[256];
static const int base_dist[30];
static const int base_length[29];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.c:
static const uch bl_order[19];
static const int extra_blbits[19];
static const int extra_dbits[30];
static const int extra_lbits[29];
static const static_tree_desc static_bl_desc;
static const static_tree_desc static_d_desc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
static const ct_data static_dtree[30];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.c:
static const static_tree_desc static_l_desc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
static const ct_data static_ltree[288];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/zutil.c:
const char * constz_errmsg[10];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID ALL_POWERSCHEMES_GUID;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID CLSID_CDirect3DRM;
const GUID CLSID_CDirect3DRMAnimation;
const GUID CLSID_CDirect3DRMAnimationSet;
const GUID CLSID_CDirect3DRMClippedVisual;
const GUID CLSID_CDirect3DRMDevice;
const GUID CLSID_CDirect3DRMFace;
const GUID CLSID_CDirect3DRMFrame;
const GUID CLSID_CDirect3DRMFrameInterpolator;
const GUID CLSID_CDirect3DRMLight;
const GUID CLSID_CDirect3DRMLightInterpolator;
const GUID CLSID_CDirect3DRMMaterial;
const GUID CLSID_CDirect3DRMMaterialInterpolator;
const GUID CLSID_CDirect3DRMMesh;
const GUID CLSID_CDirect3DRMMeshBuilder;
const GUID CLSID_CDirect3DRMMeshInterpolator;
const GUID CLSID_CDirect3DRMProgressiveMesh;
const GUID CLSID_CDirect3DRMShadow;
const GUID CLSID_CDirect3DRMTexture;
const GUID CLSID_CDirect3DRMTextureInterpolator;
const GUID CLSID_CDirect3DRMUserVisual;
const GUID CLSID_CDirect3DRMViewport;
const GUID CLSID_CDirect3DRMViewportInterpolator;
const GUID CLSID_CDirect3DRMWrap;
const GUID CLSID_CDirectXFile;
const GUID CLSID_DP8SP_BLUETOOTH;
const GUID CLSID_DP8SP_IPX;
const GUID CLSID_DP8SP_MODEM;
const GUID CLSID_DP8SP_SERIAL;
const GUID CLSID_DP8SP_TCPIP;
const GUID CLSID_DirectDraw;
const GUID CLSID_DirectDraw7;
const GUID CLSID_DirectDrawClipper;
const GUID CLSID_DirectDrawFactory2;
const GUID CLSID_DirectInput;
const GUID CLSID_DirectInput8;
const GUID CLSID_DirectInputDevice;
const GUID CLSID_DirectInputDevice8;
const GUID CLSID_DirectMusic;
const GUID CLSID_DirectMusicAudioPathConfig;
const GUID CLSID_DirectMusicBand;
const GUID CLSID_DirectMusicBandTrack;
const GUID CLSID_DirectMusicChordMap;
const GUID CLSID_DirectMusicChordMapTrack;
const GUID CLSID_DirectMusicChordTrack;
const GUID CLSID_DirectMusicCollection;
const GUID CLSID_DirectMusicCommandTrack;
const GUID CLSID_DirectMusicComposer;
const GUID CLSID_DirectMusicContainer;
const GUID CLSID_DirectMusicGraph;
const GUID CLSID_DirectMusicLoader;
const GUID CLSID_DirectMusicLyricsTrack;
const GUID CLSID_DirectMusicMarkerTrack;
const GUID CLSID_DirectMusicMelodyFormulationTrack;
const GUID CLSID_DirectMusicMotifTrack;
const GUID CLSID_DirectMusicMuteTrack;
const GUID CLSID_DirectMusicParamControlTrack;
const GUID CLSID_DirectMusicPatternTrack;
const GUID CLSID_DirectMusicPerformance;
const GUID CLSID_DirectMusicScript;
const GUID CLSID_DirectMusicScriptTrack;
const GUID CLSID_DirectMusicSegment;
const GUID CLSID_DirectMusicSegmentState;
const GUID CLSID_DirectMusicSegmentTriggerTrack;
const GUID CLSID_DirectMusicSeqTrack;
const GUID CLSID_DirectMusicSignPostTrack;
const GUID CLSID_DirectMusicSong;
const GUID CLSID_DirectMusicStyle;
const GUID CLSID_DirectMusicStyleTrack;
const GUID CLSID_DirectMusicSynth;
const GUID CLSID_DirectMusicSysExTrack;
const GUID CLSID_DirectMusicTempoTrack;
const GUID CLSID_DirectMusicTimeSigTrack;
const GUID CLSID_DirectMusicWaveTrack;
const GUID CLSID_DirectPlay;
const GUID CLSID_DirectPlay8Address;
const GUID CLSID_DirectPlay8Client;
const GUID CLSID_DirectPlay8LobbiedApplication;
const GUID CLSID_DirectPlay8LobbyClient;
const GUID CLSID_DirectPlay8NATResolver;
const GUID CLSID_DirectPlay8Peer;
const GUID CLSID_DirectPlay8Server;
const GUID CLSID_DirectPlay8ThreadPool;
const GUID CLSID_DirectPlayLobby;
const GUID CLSID_DirectPlayVoiceClient;
const GUID CLSID_DirectPlayVoiceServer;
const GUID CLSID_DirectPlayVoiceTest;
const GUID CLSID_DirectSound;
const GUID CLSID_DirectSound8;
const GUID CLSID_DirectSoundCapture;
const GUID CLSID_DirectSoundCapture8;
const GUID CLSID_DirectSoundFullDuplex;
const GUID CLSID_DirectSoundPrivate;
const GUID CLSID_DirectSoundWave;
const GUID DDVPTYPE_BROOKTREE;
const GUID DDVPTYPE_CCIR656;
const GUID DDVPTYPE_E_HREFH_VREFH;
const GUID DDVPTYPE_E_HREFH_VREFL;
const GUID DDVPTYPE_E_HREFL_VREFH;
const GUID DDVPTYPE_E_HREFL_VREFL;
const GUID DDVPTYPE_PHILIPS;
const GUID DPAID_ComPort;
const GUID DPAID_INet;
const GUID DPAID_INetPort;
const GUID DPAID_INetW;
const GUID DPAID_LobbyProvider;
const GUID DPAID_Modem;
const GUID DPAID_ModemW;
const GUID DPAID_Phone;
const GUID DPAID_PhoneW;
const GUID DPAID_ServiceProvider;
const GUID DPAID_TotalSize;
const GUID DPLPROPERTY_LobbyGuid;
const GUID DPLPROPERTY_MessagesSupported;
const GUID DPLPROPERTY_PlayerGuid;
const GUID DPLPROPERTY_PlayerScore;
const GUID DPSPGUID_IPX;
const GUID DPSPGUID_MODEM;
const GUID DPSPGUID_SERIAL;
const GUID DPSPGUID_TCPIP;
const GUID DPVCTGUID_ADPCM;
const GUID DPVCTGUID_GSM;
const GUID DPVCTGUID_NONE;
const GUID DPVCTGUID_SC03;
const GUID DPVCTGUID_SC06;
const GUID DPVCTGUID_TRUESPEECH;
const GUID DPVCTGUID_VR12;
const GUID DS3DALG_HRTF_FULL;
const GUID DS3DALG_HRTF_LIGHT;
const GUID DS3DALG_NO_VIRTUALIZATION;
const GUID DSDEVID_DefaultCapture;
const GUID DSDEVID_DefaultPlayback;
const GUID DSDEVID_DefaultVoiceCapture;
const GUID DSDEVID_DefaultVoicePlayback;
const GUID DSPROPSETID_DirectSoundDevice;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_ACDC_POWER_SOURCE;
const GUID GUID_ACTIVE_POWERSCHEME;
const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP;
const GUID GUID_ALLOW_AWAYMODE;
const GUID GUID_ALLOW_DISPLAY_REQUIRED;
const GUID GUID_ALLOW_RTC_WAKE;
const GUID GUID_ALLOW_STANDBY_STATES;
const GUID GUID_ALLOW_SYSTEM_REQUIRED;
const GUID GUID_APPLAUNCH_BUTTON;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_All_Objects;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_BACKGROUND_TASK_NOTIFICATION;
const GUID GUID_BATTERY_DISCHARGE_ACTION_0;
const GUID GUID_BATTERY_DISCHARGE_ACTION_1;
const GUID GUID_BATTERY_DISCHARGE_ACTION_2;
const GUID GUID_BATTERY_DISCHARGE_ACTION_3;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_0;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_1;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_2;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_3;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_0;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_1;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_2;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_3;
const GUID GUID_BATTERY_PERCENTAGE_REMAINING;
const GUID GUID_BATTERY_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_BandParam;
const GUID GUID_Buffer_3D_Dry;
const GUID GUID_Buffer_EnvReverb;
const GUID GUID_Buffer_Mono;
const GUID GUID_Buffer_Reverb;
const GUID GUID_Buffer_Stereo;
const GUID GUID_Button;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_CONSOLE_DISPLAY_STATE;
const GUID GUID_CRITICAL_POWER_TRANSITION;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_ChordParam;
const GUID GUID_Clear_All_Bands;
const GUID GUID_Clear_All_MelodyFragments;
const GUID GUID_ColorControlCallbacks;
const GUID GUID_CommandParam;
const GUID GUID_CommandParam2;
const GUID GUID_CommandParamNext;
const GUID GUID_ConnectToDLSCollection;
const GUID GUID_ConstantForce;
const GUID GUID_CustomForce;
const GUID GUID_D3DCallbacks2;
const GUID GUID_D3DCallbacks3;
const GUID GUID_D3DExtendedCaps;
const GUID GUID_D3DParseUnknownCommandCallback;
const GUID GUID_DDMoreCaps;
const GUID GUID_DDMoreSurfaceCaps;
const GUID GUID_DDStereoMode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_DEVICE_IDLE_POLICY;
const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS;
const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winioctl.h:
const GUID GUID_DEVINTERFACE_CDCHANGER;
const GUID GUID_DEVINTERFACE_CDROM;
const GUID GUID_DEVINTERFACE_COMPORT;
const GUID GUID_DEVINTERFACE_DISK;
const GUID GUID_DEVINTERFACE_FLOPPY;
const GUID GUID_DEVINTERFACE_MEDIUMCHANGER;
const GUID GUID_DEVINTERFACE_PARTITION;
const GUID GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR;
const GUID GUID_DEVINTERFACE_STORAGEPORT;
const GUID GUID_DEVINTERFACE_TAPE;
const GUID GUID_DEVINTERFACE_VOLUME;
const GUID GUID_DEVINTERFACE_WRITEONCEDISK;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_DISK_ADAPTIVE_POWERDOWN;
const GUID GUID_DISK_BURST_IGNORE_THRESHOLD;
const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT;
const GUID GUID_DISK_IDLE_TIMEOUT;
const GUID GUID_DISK_POWERDOWN_TIMEOUT;
const GUID GUID_DISK_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_DMUS_PROP_DLS1;
const GUID GUID_DMUS_PROP_DLS2;
const GUID GUID_DMUS_PROP_Effects;
const GUID GUID_DMUS_PROP_GM_Hardware;
const GUID GUID_DMUS_PROP_GS_Capable;
const GUID GUID_DMUS_PROP_GS_Hardware;
const GUID GUID_DMUS_PROP_INSTRUMENT2;
const GUID GUID_DMUS_PROP_LegacyCaps;
const GUID GUID_DMUS_PROP_MemorySize;
const GUID GUID_DMUS_PROP_SampleMemorySize;
const GUID GUID_DMUS_PROP_SamplePlaybackRate;
const GUID GUID_DMUS_PROP_SynthSink_DSOUND;
const GUID GUID_DMUS_PROP_SynthSink_WAVE;
const GUID GUID_DMUS_PROP_Volume;
const GUID GUID_DMUS_PROP_WavesReverb;
const GUID GUID_DMUS_PROP_WriteLatency;
const GUID GUID_DMUS_PROP_WritePeriod;
const GUID GUID_DMUS_PROP_XG_Capable;
const GUID GUID_DMUS_PROP_XG_Hardware;
const GUID GUID_DSCFX_CLASS_AEC;
const GUID GUID_DSCFX_CLASS_NS;
const GUID GUID_DSCFX_MS_AEC;
const GUID GUID_DSCFX_MS_NS;
const GUID GUID_DSCFX_SYSTEM_AEC;
const GUID GUID_DSCFX_SYSTEM_NS;
const GUID GUID_DSFX_STANDARD_CHORUS;
const GUID GUID_DSFX_STANDARD_COMPRESSOR;
const GUID GUID_DSFX_STANDARD_DISTORTION;
const GUID GUID_DSFX_STANDARD_ECHO;
const GUID GUID_DSFX_STANDARD_FLANGER;
const GUID GUID_DSFX_STANDARD_GARGLE;
const GUID GUID_DSFX_STANDARD_I3DL2REVERB;
const GUID GUID_DSFX_STANDARD_PARAMEQ;
const GUID GUID_DSFX_WAVES_REVERB;
const GUID GUID_Damper;
const GUID GUID_DefaultGMCollection;
const GUID GUID_DirectDrawPaletteStream;
const GUID GUID_DirectDrawSurfaceStream;
const GUID GUID_DirectMusicAllTypes;
const GUID GUID_DisableTempo;
const GUID GUID_DisableTimeSig;
const GUID GUID_Disable_Auto_Download;
const GUID GUID_Download;
const GUID GUID_DownloadToAudioPath;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN;
const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_EnableTempo;
const GUID GUID_EnableTimeSig;
const GUID GUID_Enable_Auto_Download;
const GUID GUID_Friction;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_GLOBAL_USER_PRESENCE;
const GUID GUID_HIBERNATE_FASTS4_POLICY;
const GUID GUID_HIBERNATE_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_HIDClass;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_IDLE_BACKGROUND_TASK;
const GUID GUID_IDLE_RESILIENCY_PERIOD;
const GUID GUID_IDLE_RESILIENCY_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_IDirectMusicBand;
const GUID GUID_IDirectMusicChordMap;
const GUID GUID_IDirectMusicStyle;
const GUID GUID_Inertia;
const GUID GUID_Joystick;
const GUID GUID_KernelCallbacks;
const GUID GUID_KernelCaps;
const GUID GUID_Key;
const GUID GUID_KeyboardClass;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_LIDCLOSE_ACTION;
const GUID GUID_LIDOPEN_POWERSTATE;
const GUID GUID_LIDSWITCH_STATE_CHANGE;
const GUID GUID_LOCK_CONSOLE_ON_WAKE;
const GUID GUID_MAX_POWER_SAVINGS;
const GUID GUID_MIN_POWER_SAVINGS;
const GUID GUID_MONITOR_POWER_ON;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_MediaClass;
const GUID GUID_MelodyFragment;
const GUID GUID_Miscellaneous2Callbacks;
const GUID GUID_MiscellaneousCallbacks;
const GUID GUID_MotionCompCallbacks;
const GUID GUID_MouseClass;
const GUID GUID_MuteParam;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_NOTIFICATION_CHORD;
const GUID GUID_NOTIFICATION_COMMAND;
const GUID GUID_NOTIFICATION_MEASUREANDBEAT;
const GUID GUID_NOTIFICATION_PERFORMANCE;
const GUID GUID_NOTIFICATION_RECOMPOSE;
const GUID GUID_NOTIFICATION_SEGMENT;
const GUID GUID_NTCallbacks;
const GUID GUID_NonLocalVidMemCaps;
const GUID GUID_OptSurfaceKmodeInfo;
const GUID GUID_OptSurfaceUmodeInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_PCIEXPRESS_ASPM_POLICY;
const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_POV;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_POWERBUTTON_ACTION;
const GUID GUID_POWERSCHEME_PERSONALITY;
const GUID GUID_PROCESSOR_ALLOW_THROTTLING;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME;
const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES;
const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING;
const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY;
const GUID GUID_PROCESSOR_IDLESTATE_POLICY;
const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING;
const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD;
const GUID GUID_PROCESSOR_IDLE_DISABLE;
const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD;
const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM;
const GUID GUID_PROCESSOR_IDLE_TIME_CHECK;
const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD;
const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE;
const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD;
const GUID GUID_PROCESSOR_PARKING_PERF_STATE;
const GUID GUID_PROCESSOR_PERFSTATE_POLICY;
const GUID GUID_PROCESSOR_PERF_BOOST_MODE;
const GUID GUID_PROCESSOR_PERF_BOOST_POLICY;
const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY;
const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD;
const GUID GUID_PROCESSOR_PERF_DECREASE_TIME;
const GUID GUID_PROCESSOR_PERF_HISTORY;
const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY;
const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD;
const GUID GUID_PROCESSOR_PERF_INCREASE_TIME;
const GUID GUID_PROCESSOR_PERF_LATENCY_HINT;
const GUID GUID_PROCESSOR_PERF_TIME_CHECK;
const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP;
const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM;
const GUID GUID_PROCESSOR_THROTTLE_MINIMUM;
const GUID GUID_PROCESSOR_THROTTLE_POLICY;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_PerfAutoDownload;
const GUID GUID_PerfMasterGrooveLevel;
const GUID GUID_PerfMasterTempo;
const GUID GUID_PerfMasterVolume;
const GUID GUID_Play_Marker;
const GUID GUID_RampForce;
const GUID GUID_RhythmParam;
const GUID GUID_RxAxis;
const GUID GUID_RyAxis;
const GUID GUID_RzAxis;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_SESSION_DISPLAY_STATUS;
const GUID GUID_SESSION_USER_PRESENCE;
const GUID GUID_SLEEPBUTTON_ACTION;
const GUID GUID_SLEEP_IDLE_THRESHOLD;
const GUID GUID_SLEEP_SUBGROUP;
const GUID GUID_STANDBY_TIMEOUT;
const GUID GUID_SYSTEM_AWAYMODE;
const GUID GUID_SYSTEM_BUTTON_SUBGROUP;
const GUID GUID_SYSTEM_COOLING_POLICY;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_SawtoothDown;
const GUID GUID_SawtoothUp;
const GUID GUID_SeedVariations;
const GUID GUID_Sine;
const GUID GUID_Slider;
const GUID GUID_Spring;
const GUID GUID_Square;
const GUID GUID_StandardMIDIFile;
const GUID GUID_Synth_Default;
const GUID GUID_SysKeyboard;
const GUID GUID_SysKeyboardEm;
const GUID GUID_SysKeyboardEm2;
const GUID GUID_SysMouse;
const GUID GUID_SysMouseEm;
const GUID GUID_SysMouseEm2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_TYPICAL_POWER_SAVINGS;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_TempoParam;
const GUID GUID_TimeSignature;
const GUID GUID_Triangle;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_UNATTEND_SLEEP_TIMEOUT;
const GUID GUID_USERINTERFACEBUTTON_ACTION;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_Unknown;
const GUID GUID_Unload;
const GUID GUID_UnloadFromAudioPath;
const GUID GUID_UserModeDriverInfo;
const GUID GUID_UserModeDriverPassword;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS;
const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE;
const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN;
const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT;
const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT;
const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS;
const GUID GUID_VIDEO_DIM_TIMEOUT;
const GUID GUID_VIDEO_POWERDOWN_TIMEOUT;
const GUID GUID_VIDEO_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_Valid_Start_Time;
const GUID GUID_Variations;
const GUID GUID_VideoPortCallbacks;
const GUID GUID_VideoPortCaps;
const GUID GUID_XAxis;
const GUID GUID_YAxis;
const GUID GUID_ZAxis;
const GUID GUID_ZPixelFormats;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_AsyncIAdviseSink;
const GUID IID_AsyncIAdviseSink2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_AsyncIMultiQI;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_AsyncIUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAddrExclusionControl;
const GUID IID_IAddrTrackingControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IAdviseSink;
const GUID IID_IAdviseSink2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IAdviseSinkEx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAgileObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IApartmentShutdown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAsyncManager;
const GUID IID_IAsyncRpcChannelBuffer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IAuthenticate;
const GUID IID_IAuthenticateEx;
const GUID IID_IBindCallbackRedirect;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IBindCtx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IBindHost;
const GUID IID_IBindProtocol;
const GUID IID_IBindStatusCallback;
const GUID IID_IBindStatusCallbackEx;
const GUID IID_IBinding;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IBlockingLock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ICallFactory;
const GUID IID_ICancelMethodCalls;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ICatalogFileInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IChannelHook;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IClassActivator;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_IClassFactory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IClassFactory2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IClientSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ICodeInstall;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IComThreadingInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IConnectionPoint;
const GUID IID_IConnectionPointContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IContinue;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ICreateErrorInfo;
const GUID IID_ICreateTypeInfo;
const GUID IID_ICreateTypeInfo2;
const GUID IID_ICreateTypeLib;
const GUID IID_ICreateTypeLib2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Asynchronous;
const GUID IID_ID3D10BlendState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10BlendState1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3dcommon.h:
const GUID IID_ID3D10Blob;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Buffer;
const GUID IID_ID3D10Counter;
const GUID IID_ID3D10DepthStencilState;
const GUID IID_ID3D10DepthStencilView;
const GUID IID_ID3D10Device;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10Device1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10DeviceChild;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10effect.h:
const GUID IID_ID3D10Effect;
const GUID IID_ID3D10EffectBlendVariable;
const GUID IID_ID3D10EffectConstantBuffer;
const GUID IID_ID3D10EffectDepthStencilVariable;
const GUID IID_ID3D10EffectDepthStencilViewVariable;
const GUID IID_ID3D10EffectMatrixVariable;
const GUID IID_ID3D10EffectPass;
const GUID IID_ID3D10EffectPool;
const GUID IID_ID3D10EffectRasterizerVariable;
const GUID IID_ID3D10EffectRenderTargetViewVariable;
const GUID IID_ID3D10EffectSamplerVariable;
const GUID IID_ID3D10EffectScalarVariable;
const GUID IID_ID3D10EffectShaderResourceVariable;
const GUID IID_ID3D10EffectShaderVariable;
const GUID IID_ID3D10EffectStringVariable;
const GUID IID_ID3D10EffectTechnique;
const GUID IID_ID3D10EffectType;
const GUID IID_ID3D10EffectVariable;
const GUID IID_ID3D10EffectVectorVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10GeometryShader;
const GUID IID_ID3D10InputLayout;
const GUID IID_ID3D10Multithread;
const GUID IID_ID3D10PixelShader;
const GUID IID_ID3D10Predicate;
const GUID IID_ID3D10Query;
const GUID IID_ID3D10RasterizerState;
const GUID IID_ID3D10RenderTargetView;
const GUID IID_ID3D10Resource;
const GUID IID_ID3D10SamplerState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10shader.h:
const GUID IID_ID3D10ShaderReflection;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1shader.h:
const GUID IID_ID3D10ShaderReflection1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10shader.h:
const GUID IID_ID3D10ShaderReflectionConstantBuffer;
const GUID IID_ID3D10ShaderReflectionType;
const GUID IID_ID3D10ShaderReflectionVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10ShaderResourceView;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10ShaderResourceView1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10effect.h:
const GUID IID_ID3D10StateBlock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Texture1D;
const GUID IID_ID3D10Texture2D;
const GUID IID_ID3D10Texture3D;
const GUID IID_ID3D10VertexShader;
const GUID IID_ID3D10View;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11Asynchronous;
const GUID IID_ID3D11BlendState;
const GUID IID_ID3D11Buffer;
const GUID IID_ID3D11ClassInstance;
const GUID IID_ID3D11ClassLinkage;
const GUID IID_ID3D11CommandList;
const GUID IID_ID3D11ComputeShader;
const GUID IID_ID3D11Counter;
const GUID IID_ID3D11DepthStencilState;
const GUID IID_ID3D11DepthStencilView;
const GUID IID_ID3D11Device;
const GUID IID_ID3D11DeviceChild;
const GUID IID_ID3D11DeviceContext;
const GUID IID_ID3D11DomainShader;
const GUID IID_ID3D11GeometryShader;
const GUID IID_ID3D11HullShader;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11sdklayers.h:
const GUID IID_ID3D11InfoQueue;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11InputLayout;
const GUID IID_ID3D11PixelShader;
const GUID IID_ID3D11Predicate;
const GUID IID_ID3D11Query;
const GUID IID_ID3D11RasterizerState;
const GUID IID_ID3D11RenderTargetView;
const GUID IID_ID3D11Resource;
const GUID IID_ID3D11SamplerState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11shader.h:
const GUID IID_ID3D11ShaderReflection;
const GUID IID_ID3D11ShaderReflectionConstantBuffer;
const GUID IID_ID3D11ShaderReflectionType;
const GUID IID_ID3D11ShaderReflectionVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11ShaderResourceView;
const GUID IID_ID3D11Texture1D;
const GUID IID_ID3D11Texture2D;
const GUID IID_ID3D11Texture3D;
const GUID IID_ID3D11UnorderedAccessView;
const GUID IID_ID3D11VertexShader;
const GUID IID_ID3D11View;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_ID3DXAnimationController;
const GUID IID_ID3DXAnimationMixer;
const GUID IID_ID3DXAnimationSet;
const GUID IID_ID3DXBaseMesh;
const GUID IID_ID3DXBuffer;
const GUID IID_ID3DXEffect;
const GUID IID_ID3DXEffectCompiler;
const GUID IID_ID3DXEffectPool;
const GUID IID_ID3DXInterpolator;
const GUID IID_ID3DXKeyFrameInterpolator;
const GUID IID_ID3DXMatrixStack;
const GUID IID_ID3DXMesh;
const GUID IID_ID3DXPMesh;
const GUID IID_ID3DXSPMesh;
const GUID IID_ID3DXSkinMesh;
const GUID IID_ID3DXTechnique;
const GUID IID_IDDVideoPortContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/dxgi.h:
const GUID IID_IDXGIAdapter;
const GUID IID_IDXGIAdapter1;
const GUID IID_IDXGIDevice;
const GUID IID_IDXGIDevice1;
const GUID IID_IDXGIDeviceSubObject;
const GUID IID_IDXGIFactory;
const GUID IID_IDXGIFactory1;
const GUID IID_IDXGIKeyedMutex;
const GUID IID_IDXGIObject;
const GUID IID_IDXGIOutput;
const GUID IID_IDXGIResource;
const GUID IID_IDXGISurface;
const GUID IID_IDXGISwapChain;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDataAdviseHolder;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IDataFilter;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDataObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3D;
const GUID IID_IDirect3D2;
const GUID IID_IDirect3D3;
const GUID IID_IDirect3D7;
const GUID IID_IDirect3D8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3D9;
const GUID IID_IDirect3D9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DBaseTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DBaseTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DCubeTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DCubeTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DDevice;
const GUID IID_IDirect3DDevice2;
const GUID IID_IDirect3DDevice3;
const GUID IID_IDirect3DDevice7;
const GUID IID_IDirect3DDevice8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DDevice9;
const GUID IID_IDirect3DDevice9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DExecuteBuffer;
const GUID IID_IDirect3DHALDevice;
const GUID IID_IDirect3DIndexBuffer8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DIndexBuffer9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DLight;
const GUID IID_IDirect3DMMXDevice;
const GUID IID_IDirect3DMaterial;
const GUID IID_IDirect3DMaterial2;
const GUID IID_IDirect3DMaterial3;
const GUID IID_IDirect3DNullDevice;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DPixelShader9;
const GUID IID_IDirect3DQuery9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DRGBDevice;
const GUID IID_IDirect3DRM;
const GUID IID_IDirect3DRM2;
const GUID IID_IDirect3DRM3;
const GUID IID_IDirect3DRMAnimation;
const GUID IID_IDirect3DRMAnimation2;
const GUID IID_IDirect3DRMAnimationArray;
const GUID IID_IDirect3DRMAnimationSet;
const GUID IID_IDirect3DRMAnimationSet2;
const GUID IID_IDirect3DRMClippedVisual;
const GUID IID_IDirect3DRMDevice;
const GUID IID_IDirect3DRMDevice2;
const GUID IID_IDirect3DRMDevice3;
const GUID IID_IDirect3DRMDeviceArray;
const GUID IID_IDirect3DRMFace;
const GUID IID_IDirect3DRMFace2;
const GUID IID_IDirect3DRMFaceArray;
const GUID IID_IDirect3DRMFrame;
const GUID IID_IDirect3DRMFrame2;
const GUID IID_IDirect3DRMFrame3;
const GUID IID_IDirect3DRMFrameArray;
const GUID IID_IDirect3DRMInterpolator;
const GUID IID_IDirect3DRMLight;
const GUID IID_IDirect3DRMLightArray;
const GUID IID_IDirect3DRMMaterial;
const GUID IID_IDirect3DRMMaterial2;
const GUID IID_IDirect3DRMMesh;
const GUID IID_IDirect3DRMMeshBuilder;
const GUID IID_IDirect3DRMMeshBuilder2;
const GUID IID_IDirect3DRMMeshBuilder3;
const GUID IID_IDirect3DRMObject;
const GUID IID_IDirect3DRMObject2;
const GUID IID_IDirect3DRMObjectArray;
const GUID IID_IDirect3DRMPicked2Array;
const GUID IID_IDirect3DRMPickedArray;
const GUID IID_IDirect3DRMProgressiveMesh;
const GUID IID_IDirect3DRMShadow;
const GUID IID_IDirect3DRMShadow2;
const GUID IID_IDirect3DRMTexture;
const GUID IID_IDirect3DRMTexture2;
const GUID IID_IDirect3DRMTexture3;
const GUID IID_IDirect3DRMUserVisual;
const GUID IID_IDirect3DRMViewport;
const GUID IID_IDirect3DRMViewport2;
const GUID IID_IDirect3DRMViewportArray;
const GUID IID_IDirect3DRMVisual;
const GUID IID_IDirect3DRMVisualArray;
const GUID IID_IDirect3DRMWinDevice;
const GUID IID_IDirect3DRMWrap;
const GUID IID_IDirect3DRampDevice;
const GUID IID_IDirect3DRefDevice;
const GUID IID_IDirect3DResource8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DResource9;
const GUID IID_IDirect3DStateBlock9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DSurface8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DSurface9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DSwapChain8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DSwapChain9;
const GUID IID_IDirect3DSwapChain9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DTexture;
const GUID IID_IDirect3DTexture2;
const GUID IID_IDirect3DTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DTnLHalDevice;
const GUID IID_IDirect3DVertexBuffer;
const GUID IID_IDirect3DVertexBuffer7;
const GUID IID_IDirect3DVertexBuffer8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVertexBuffer9;
const GUID IID_IDirect3DVertexDeclaration9;
const GUID IID_IDirect3DVertexShader9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DViewport;
const GUID IID_IDirect3DViewport2;
const GUID IID_IDirect3DViewport3;
const GUID IID_IDirect3DVolume8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVolume9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DVolumeTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVolumeTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirectDraw;
const GUID IID_IDirectDraw2;
const GUID IID_IDirectDraw4;
const GUID IID_IDirectDraw7;
const GUID IID_IDirectDrawClipper;
const GUID IID_IDirectDrawColorControl;
const GUID IID_IDirectDrawFactory2;
const GUID IID_IDirectDrawGammaControl;
const GUID IID_IDirectDrawOptSurface;
const GUID IID_IDirectDrawPalette;
const GUID IID_IDirectDrawPalette2;
const GUID IID_IDirectDrawSurface;
const GUID IID_IDirectDrawSurface2;
const GUID IID_IDirectDrawSurface3;
const GUID IID_IDirectDrawSurface4;
const GUID IID_IDirectDrawSurface7;
const GUID IID_IDirectDrawVideoPort;
const GUID IID_IDirectDrawVideoPortNotify;
const GUID IID_IDirectInput2A;
const GUID IID_IDirectInput2W;
const GUID IID_IDirectInput7A;
const GUID IID_IDirectInput7W;
const GUID IID_IDirectInput8A;
const GUID IID_IDirectInput8W;
const GUID IID_IDirectInputA;
const GUID IID_IDirectInputDevice2A;
const GUID IID_IDirectInputDevice2W;
const GUID IID_IDirectInputDevice7A;
const GUID IID_IDirectInputDevice7W;
const GUID IID_IDirectInputDevice8A;
const GUID IID_IDirectInputDevice8W;
const GUID IID_IDirectInputDeviceA;
const GUID IID_IDirectInputDeviceW;
const GUID IID_IDirectInputEffect;
const GUID IID_IDirectInputEffectDriver;
const GUID IID_IDirectInputJoyConfig;
const GUID IID_IDirectInputJoyConfig8;
const GUID IID_IDirectInputPIDDriver;
const GUID IID_IDirectInputW;
const GUID IID_IDirectMusic;
const GUID IID_IDirectMusic2;
const GUID IID_IDirectMusic8;
const GUID IID_IDirectMusicAudioPath;
const GUID IID_IDirectMusicBand;
const GUID IID_IDirectMusicBuffer;
const GUID IID_IDirectMusicChordMap;
const GUID IID_IDirectMusicCollection;
const GUID IID_IDirectMusicComposer;
const GUID IID_IDirectMusicContainer;
const GUID IID_IDirectMusicDownload;
const GUID IID_IDirectMusicDownloadedInstrument;
const GUID IID_IDirectMusicGetLoader;
const GUID IID_IDirectMusicGraph;
const GUID IID_IDirectMusicInstrument;
const GUID IID_IDirectMusicLoader;
const GUID IID_IDirectMusicLoader8;
const GUID IID_IDirectMusicObject;
const GUID IID_IDirectMusicPatternTrack;
const GUID IID_IDirectMusicPerformance;
const GUID IID_IDirectMusicPerformance2;
const GUID IID_IDirectMusicPerformance8;
const GUID IID_IDirectMusicPort;
const GUID IID_IDirectMusicPortDownload;
const GUID IID_IDirectMusicScript;
const GUID IID_IDirectMusicSegment;
const GUID IID_IDirectMusicSegment2;
const GUID IID_IDirectMusicSegment8;
const GUID IID_IDirectMusicSegmentState;
const GUID IID_IDirectMusicSegmentState8;
const GUID IID_IDirectMusicSong;
const GUID IID_IDirectMusicStyle;
const GUID IID_IDirectMusicStyle8;
const GUID IID_IDirectMusicThru;
const GUID IID_IDirectMusicTool;
const GUID IID_IDirectMusicTool8;
const GUID IID_IDirectMusicTrack;
const GUID IID_IDirectMusicTrack8;
const GUID IID_IDirectPlay;
const GUID IID_IDirectPlay2;
const GUID IID_IDirectPlay2A;
const GUID IID_IDirectPlay3;
const GUID IID_IDirectPlay3A;
const GUID IID_IDirectPlay4;
const GUID IID_IDirectPlay4A;
const GUID IID_IDirectPlay8Address;
const GUID IID_IDirectPlay8AddressIP;
const GUID IID_IDirectPlay8Client;
const GUID IID_IDirectPlay8LobbiedApplication;
const GUID IID_IDirectPlay8LobbyClient;
const GUID IID_IDirectPlay8NATResolver;
const GUID IID_IDirectPlay8Peer;
const GUID IID_IDirectPlay8Server;
const GUID IID_IDirectPlay8ThreadPool;
const GUID IID_IDirectPlayLobby;
const GUID IID_IDirectPlayLobby2;
const GUID IID_IDirectPlayLobby2A;
const GUID IID_IDirectPlayLobby3;
const GUID IID_IDirectPlayLobby3A;
const GUID IID_IDirectPlayLobbyA;
const GUID IID_IDirectPlayVoiceClient;
const GUID IID_IDirectPlayVoiceServer;
const GUID IID_IDirectPlayVoiceTest;
const GUID IID_IDirectSound;
const GUID IID_IDirectSound3DBuffer;
const GUID IID_IDirectSound3DListener;
const GUID IID_IDirectSound8;
const GUID IID_IDirectSoundBuffer;
const GUID IID_IDirectSoundBuffer8;
const GUID IID_IDirectSoundCapture;
const GUID IID_IDirectSoundCaptureBuffer;
const GUID IID_IDirectSoundCaptureBuffer8;
const GUID IID_IDirectSoundCaptureFXAec;
const GUID IID_IDirectSoundCaptureFXNoiseSuppress;
const GUID IID_IDirectSoundFXChorus;
const GUID IID_IDirectSoundFXCompressor;
const GUID IID_IDirectSoundFXDistortion;
const GUID IID_IDirectSoundFXEcho;
const GUID IID_IDirectSoundFXFlanger;
const GUID IID_IDirectSoundFXGargle;
const GUID IID_IDirectSoundFXI3DL2Reverb;
const GUID IID_IDirectSoundFXParamEq;
const GUID IID_IDirectSoundFXWavesReverb;
const GUID IID_IDirectSoundFullDuplex;
const GUID IID_IDirectSoundNotify;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDirectWriterLock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirectXFile;
const GUID IID_IDirectXFileBinary;
const GUID IID_IDirectXFileData;
const GUID IID_IDirectXFileDataReference;
const GUID IID_IDirectXFileEnumObject;
const GUID IID_IDirectXFileObject;
const GUID IID_IDirectXFileSaveObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IDispatch;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IDropSource;
const GUID IID_IDropSourceNotify;
const GUID IID_IDropTarget;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDummyHICONIncluder;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IEncodingFilterFactory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IEnumConnectionPoints;
const GUID IID_IEnumConnections;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumFORMATETC;
const GUID IID_IEnumMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IEnumOLEVERB;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IEnumOleUndoUnits;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumSTATDATA;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/propidl.h:
const GUID IID_IEnumSTATPROPSETSTG;
const GUID IID_IEnumSTATPROPSTG;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumSTATSTG;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IEnumString;
const GUID IID_IEnumUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IEnumVARIANT;
const GUID IID_IErrorInfo;
const GUID IID_IErrorLog;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IExternalConnection;
const GUID IID_IFastRundown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IFillLockBytes;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IFont;
const GUID IID_IFontDisp;
const GUID IID_IFontEventsDisp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IForegroundTransfer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IGetBindHandle;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IGlobalInterfaceTable;
const GUID IID_IGlobalOptions;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IHttpNegotiate;
const GUID IID_IHttpNegotiate2;
const GUID IID_IHttpNegotiate3;
const GUID IID_IHttpSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IInitializeSpy;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IInternalUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IInternet;
const GUID IID_IInternetBindInfo;
const GUID IID_IInternetBindInfoEx;
const GUID IID_IInternetHostSecurityManager;
const GUID IID_IInternetPriority;
const GUID IID_IInternetProtocol;
const GUID IID_IInternetProtocolEx;
const GUID IID_IInternetProtocolInfo;
const GUID IID_IInternetProtocolRoot;
const GUID IID_IInternetProtocolSink;
const GUID IID_IInternetProtocolSinkStackable;
const GUID IID_IInternetSecurityManager;
const GUID IID_IInternetSecurityManagerEx;
const GUID IID_IInternetSecurityManagerEx2;
const GUID IID_IInternetSecurityMgrSite;
const GUID IID_IInternetSession;
const GUID IID_IInternetThreadSwitch;
const GUID IID_IInternetZoneManager;
const GUID IID_IInternetZoneManagerEx;
const GUID IID_IInternetZoneManagerEx2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IKsControl;
const GUID IID_IKsFastClock;
const GUID IID_IKsPropertySet;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_ILayoutStorage;
const GUID IID_ILockBytes;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMalloc;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IMallocSpy;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMarshal;
const GUID IID_IMarshal2;
const GUID IID_IMarshalingStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IMessageFilter;
const GUID IID_IMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IMonikerProp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMultiQI;
const GUID IID_INoMarshal;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IObjectWithSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleAdviseHolder;
const GUID IID_IOleCache;
const GUID IID_IOleCache2;
const GUID IID_IOleCacheControl;
const GUID IID_IOleClientSite;
const GUID IID_IOleContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleControl;
const GUID IID_IOleControlSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceActiveObject;
const GUID IID_IOleInPlaceFrame;
const GUID IID_IOleInPlaceObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleInPlaceObjectWindowless;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleInPlaceSiteEx;
const GUID IID_IOleInPlaceSiteWindowless;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceUIWindow;
const GUID IID_IOleItemContainer;
const GUID IID_IOleLink;
const GUID IID_IOleObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleParentUndoUnit;
const GUID IID_IOleUndoManager;
const GUID IID_IOleUndoUnit;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleWindow;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IOplockStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IPSFactoryBuffer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IParseDisplayName;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPerPropertyBrowsing;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IPersist;
const GUID IID_IPersistFile;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistMemory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IPersistMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistPropertyBag;
const GUID IID_IPersistPropertyBag2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IPersistStorage;
const GUID IID_IPersistStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistStreamInit;
const GUID IID_IPicture;
const GUID IID_IPicture2;
const GUID IID_IPictureDisp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IPipeByte;
const GUID IID_IPipeDouble;
const GUID IID_IPipeLong;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPointerInactive;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/commdlg.h:
const GUID IID_IPrintDialogCallback;
const GUID IID_IPrintDialogServices;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IProcessInitControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IProcessLock;
const GUID IID_IProgressNotify;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IPropertyBag;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPropertyBag2;
const GUID IID_IPropertyNotifySink;
const GUID IID_IPropertyPage;
const GUID IID_IPropertyPage2;
const GUID IID_IPropertyPageSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/propidl.h:
const GUID IID_IPropertySetStorage;
const GUID IID_IPropertyStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IProvideClassInfo;
const GUID IID_IProvideClassInfo2;
const GUID IID_IProvideMultipleClassInfo;
const GUID IID_IQuickActivate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IROTData;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IRecordInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IReferenceClock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IReleaseMarshalBuffers;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IRootStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IRpcChannelBuffer;
const GUID IID_IRpcChannelBuffer2;
const GUID IID_IRpcChannelBuffer3;
const GUID IID_IRpcHelper;
const GUID IID_IRpcOptions;
const GUID IID_IRpcProxyBuffer;
const GUID IID_IRpcStubBuffer;
const GUID IID_IRpcSyntaxNegotiate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IRunnableObject;
const GUID IID_IRunningObjectTable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISequentialStream;
const GUID IID_IServerSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/servprov.h:
const GUID IID_IServiceProvider;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_ISimpleFrameSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ISoftDistExt;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_ISpecifyPropertyPages;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IStdMarshalInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ISupportErrorInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISurrogate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_ISurrogateService;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISynchronize;
const GUID IID_ISynchronizeContainer;
const GUID IID_ISynchronizeEvent;
const GUID IID_ISynchronizeHandle;
const GUID IID_ISynchronizeMutex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IThumbnailExtractor;
const GUID IID_ITimeAndNoticeControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ITypeChangeEvents;
const GUID IID_ITypeComp;
const GUID IID_ITypeFactory;
const GUID IID_ITypeInfo;
const GUID IID_ITypeInfo2;
const GUID IID_ITypeLib;
const GUID IID_ITypeLib2;
const GUID IID_ITypeMarshal;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_IUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IUri;
const GUID IID_IUriBuilder;
const GUID IID_IUriBuilderFactory;
const GUID IID_IUriContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IUrlMon;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IViewObject;
const GUID IID_IViewObject2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IViewObjectEx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IWaitMultiple;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IWinInetCacheHints;
const GUID IID_IWinInetCacheHints2;
const GUID IID_IWinInetFileStream;
const GUID IID_IWinInetHttpInfo;
const GUID IID_IWinInetHttpTimeouts;
const GUID IID_IWinInetInfo;
const GUID IID_IWindowForBindingUI;
const GUID IID_IWrappedProtocol;
const GUID IID_IZoneIdentifier;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID KSDATAFORMAT_SUBTYPE_DIRECTMUSIC;
const GUID KSDATAFORMAT_SUBTYPE_MIDI;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID NO_SUBGROUP_GUID;
const GUID PPM_IDLESTATES_DATA_GUID;
const GUID PPM_IDLESTATE_CHANGE_GUID;
const GUID PPM_IDLE_ACCOUNTING_EX_GUID;
const GUID PPM_IDLE_ACCOUNTING_GUID;
const GUID PPM_PERFMON_PERFSTATE_GUID;
const GUID PPM_PERFSTATES_DATA_GUID;
const GUID PPM_PERFSTATE_CHANGE_GUID;
const GUID PPM_PERFSTATE_DOMAIN_CHANGE_GUID;
const GUID PPM_THERMALCONSTRAINT_GUID;
const GUID PPM_THERMAL_POLICY_CHANGE_GUID;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID TID_D3DRMAnimation;
const GUID TID_D3DRMAnimationKey;
const GUID TID_D3DRMAnimationOptions;
const GUID TID_D3DRMAnimationSet;
const GUID TID_D3DRMAppData;
const GUID TID_D3DRMBoolean;
const GUID TID_D3DRMBoolean2d;
const GUID TID_D3DRMCamera;
const GUID TID_D3DRMColorRGB;
const GUID TID_D3DRMColorRGBA;
const GUID TID_D3DRMCoords2d;
const GUID TID_D3DRMExternalVisual;
const GUID TID_D3DRMFloatKeys;
const GUID TID_D3DRMFrame;
const GUID TID_D3DRMFramePosition;
const GUID TID_D3DRMFrameRotation;
const GUID TID_D3DRMFrameTransformMatrix;
const GUID TID_D3DRMFrameVelocity;
const GUID TID_D3DRMGuid;
const GUID TID_D3DRMIndexedColor;
const GUID TID_D3DRMInfo;
const GUID TID_D3DRMInlineData;
const GUID TID_D3DRMLight;
const GUID TID_D3DRMLightAttenuation;
const GUID TID_D3DRMLightPenumbra;
const GUID TID_D3DRMLightRange;
const GUID TID_D3DRMLightUmbra;
const GUID TID_D3DRMMaterial;
const GUID TID_D3DRMMaterialAmbientColor;
const GUID TID_D3DRMMaterialArray;
const GUID TID_D3DRMMaterialDiffuseColor;
const GUID TID_D3DRMMaterialEmissiveColor;
const GUID TID_D3DRMMaterialPower;
const GUID TID_D3DRMMaterialSpecularColor;
const GUID TID_D3DRMMaterialWrap;
const GUID TID_D3DRMMatrix4x4;
const GUID TID_D3DRMMesh;
const GUID TID_D3DRMMeshFace;
const GUID TID_D3DRMMeshFaceWraps;
const GUID TID_D3DRMMeshMaterialList;
const GUID TID_D3DRMMeshNormals;
const GUID TID_D3DRMMeshTextureCoords;
const GUID TID_D3DRMMeshVertexColors;
const GUID TID_D3DRMProgressiveMesh;
const GUID TID_D3DRMPropertyBag;
const GUID TID_D3DRMRightHanded;
const GUID TID_D3DRMStringProperty;
const GUID TID_D3DRMTextureFilename;
const GUID TID_D3DRMTextureReference;
const GUID TID_D3DRMTimedFloatKeys;
const GUID TID_D3DRMUrl;
const GUID TID_D3DRMVector;
const GUID TID_DXFILEHeader;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/virtdisk.h:
const GUID VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3dcommon.h:
const GUID WKPDID_D3DDebugObjectName;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/atonexit.c:
_PVFV *__onexitbegin;
_PVFV *__onexitend;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/gccmain.c:
static int initialized;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/natstart.c:
volatile unsigned int __native_dllmain_reason;
volatile void *__native_startup_lock;
volatile __enative_startup_state __native_startup_state;
volatile unsigned int __native_vcclrit_reason;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/wildcard.c:
int _dowildcard;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/charmax.c:
_PIFV __mingw_pinit;
int _charmax;
int mingw_initcharmax;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/gs_support.c:
UINT_PTR __security_cookie;
UINT_PTR __security_cookie_complement;
static CONTEXT GS_ContextRecord;
static const EXCEPTION_POINTERS GS_ExceptionPointers;
static EXCEPTION_RECORD GS_ExceptionRecord;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/_newmode.c:
int _newmode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlssup.c:
const PIMAGE_TLS_CALLBACK __dyn_tls_init_callback;
PIMAGE_TLS_CALLBACK __xl_a;
PIMAGE_TLS_CALLBACK __xl_c;
PIMAGE_TLS_CALLBACK __xl_d;
PIMAGE_TLS_CALLBACK __xl_z;
char *_tls_end;
ULONG _tls_index;
char *_tls_start;
const IMAGE_TLS_DIRECTORY _tls_used;
int mingw_initltsdrot_force;
int mingw_initltsdyn_force;
int mingw_initltssuo_force;
static _PVFV __xd_a;
static _PVFV __xd_z;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/cinitexe.c:
_PVFV __xc_a[1];
_PVFV __xc_z[1];
_PVFV __xi_a[1];
_PVFV __xi_z[1];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/merr.c:
static fUserMathErr stUserMathErr;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/mingw_helpers.c:
int mingw_app_type;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/pseudo-reloc.c:
static int maxSections;
static sSecInfo *the_secs;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/xtxtmode.c:
int _fmode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/crt_handler.c:
LPTOP_LEVEL_EXCEPTION_FILTER __mingw_oldexcpt_handler;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlsthrd.c:
static CRITICAL_SECTION __mingwthr_cs;
static volatile int __mingwthr_cs_init;
static volatile __mingwthr_key_t *key_dtor_list;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlsmcrt.c:
int _CRT_MT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/pseudo-reloc-list.c:
char __RUNTIME_PSEUDO_RELOC_LIST_END__;
char __RUNTIME_PSEUDO_RELOC_LIST__;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/mingw_matherr.c:
int _MINGW_INSTALL_DEBUG_MATHERR;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/strtold.c:
static const unsigned short __eone[6];
static const unsigned short __etens[13][6];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/wctype.c:
static const struct {
    const char *name;
    wctype_t flags;
} cmap[11];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/stdio/fseeko64.c:
static const struct oserr_map local_errtab[46];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/math/exp.def.h:
static long double c0;
static long double c1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/strtodg.c:
static const int fivesbits[23];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/hd_init.c:
unsigned char __hexdig_D2A[256];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/misc.c:
const double __bigtens_D2A[5];
const double __tens_D2A[23];
const double __tinytens_D2A[5];
static long dtoa_CS_init;
static CRITICAL_SECTION dtoa_CritSec[2];
static __Bigint *freelist[10];
static __Bigint *p5s;
static double *pmem_next;
static double private_mem[288];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/invalid_parameter_handler.c:
void (*(*_imp___get_invalid_parameter_handler)(void))(const wchar_t *, const wchar_t *, const wchar_t *, 
    unsigned int, uintptr_t);
void (*(*_imp___set_invalid_parameter_handler)(void (*)(const wchar_t *, const wchar_t *, const wchar_t *, 
    unsigned int, uintptr_t)))(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t);
static void (*handler)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t);

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/output_format.c:
f_get_output_format _imp___get_output_format;
f_set_output_format _imp___set_output_format;
static unsigned int last_value;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/lc_locale_func.c:
unsigned int (*_imp_____lc_codepage_func)(void);
static unsigned int *msvcrt__lc_codepage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int FileHelper::MAGIC_FD;
static const int FileHelper::MAGIC_FD;
static bool FileHelper::bLittleEndian;
static HANDLE FileHelper::currentFile;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int MAGIC_FD_BASE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int SAVE_FILE_READ_FD;
static const int SAVE_FILE_WRITE_FD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int SAVE_QUIT;
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int STATS_READ_FD;
static const int STATS_WRITE_FD;
static std::vector<unsigned char, std::allocator<unsigned char> > saveFileData;
static unsigned int saveFileReadPos;
static std::vector<unsigned char, std::allocator<unsigned char> > statsFileData;
static unsigned int statsFileReadPos;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.cpp:
ScoreKeeper ScoreKeeper::Keeper;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml_print.hpp:
static const int rapidxml::print_no_indenting;
static const int rapidxml::print_no_indenting;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.cpp:
SettingValues Settings::settings;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/OptionsScreen.cpp:
static const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > languageList;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int DAMAGE_HULL;
static const int DAMAGE_SHIELD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/WorldManager.cpp:
static const int EVENT_AUGMENT_FULL;
static const int EVENT_CLONED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/WorldManager.cpp:
static const int EVENT_EQUIP_FULL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int NO_MISSILE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int UPGRADE_DEFENSIVE;
static const int UPGRADE_NONE;
static const int UPGRADE_OFFENSIVE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.h:
const int Sector::SECTOR_CIVILIAN;
const int Sector::SECTOR_HOSTILE;
const int Sector::SECTOR_NEBULA;
const int Sector::SECTOR_TYPES;
const int Sector::SECTOR_UNKNOWN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.cpp:
TutorialManager TutorialManager::Tutorial;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MainMenu.h:
const float MainMenu::glowytimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
AchievementTracker AchievementTracker::Tracker;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
static const int FLAGS[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
static const int TYPE_A_FLAG;
static const int TYPE_B_FLAG;
static const int TYPE_C_FLAG;
static const int TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.cpp:
SoundControl SoundControl::Sounds;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.cpp:
EventSystem EventSystem::EventManager;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MouseControl.cpp:
MouseControl MouseControl::Mouse;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CEvent.cpp:
double CEvent::lastEventTime;
int CEvent::mouseX;
int CEvent::mouseY;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CFPS.cpp:
CFPS CFPS::FPSControl;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MainMenu.h:
const float MainMenu::glowytimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CApp.cpp:
static CApp *p_theApp;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

Non-debugging symbols:
0x00828000  _data_start__
0x00828004  CommandGui::RenderPause()::dx
0x00828008  CEvent::mouseY
0x0082800c  CEvent::mouseX
0x00828010  FileHelper::bLittleEndian
0x00828014  Globals::GetNextSpaceId()::id
0x00828018  StarMap::NewGame(bool)::first_run
0x00828118  dummy_private.5261
0x00828398  p.65827
0x008283b8  fpi.3942
0x008283d0  fpi0.3942
0x00828410  fpi.5768
0x00828440  guard variable for std::moneypunct<char, false>::id
0x00828448  guard variable for std::moneypunct<char, true>::id
0x00828450  guard variable for std::moneypunct<wchar_t, false>::id
0x00828458  guard variable for std::moneypunct<wchar_t, true>::id
0x00828460  guard variable for std::__timepunct<char>::id
0x00828468  guard variable for std::__timepunct<wchar_t>::id
0x00828470  guard variable for std::__cxx11::moneypunct<char, false>::id
0x00828478  guard variable for std::__cxx11::moneypunct<char, true>::id
0x00828480  guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
0x00828488  guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
0x00828490  guard variable for std::__cxx11::collate<char>::id
0x00828498  guard variable for std::__cxx11::collate<wchar_t>::id
0x008284a0  guard variable for std::__cxx11::messages<char>::id
0x008284a8  guard variable for std::__cxx11::messages<wchar_t>::id
0x008284b0  guard variable for std::__cxx11::numpunct<char>::id
0x008284b8  guard variable for std::__cxx11::numpunct<wchar_t>::id
0x008284c0  guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008284c8  guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284d0  guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008284d8  guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284e0  guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x008284e8  guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284f0  guard variable for std::collate<char>::id
0x008284f8  guard variable for std::collate<wchar_t>::id
0x00828500  guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828508  guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828510  guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828518  guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828520  guard variable for std::messages<char>::id
0x00828528  guard variable for std::messages<wchar_t>::id
0x00828530  guard variable for std::numpunct<char>::id
0x00828538  guard variable for std::numpunct<wchar_t>::id
0x00828540  guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828548  guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828550  guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828558  guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828560  guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828568  guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828570  guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828578  guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828580  guard variable for DebugHelper::GetDebugHelper()::helper
0x008285b0  __cxxabiv1::__terminate_handler
0x008285b4  __cxxabiv1::__unexpected_handler
0x008292a0  __gnu_internal::buf_cin_sync
0x008292e0  __gnu_internal::buf_cerr_sync
0x00829320  __gnu_internal::buf_cout_sync
0x00829360  __gnu_internal::buf_wcin_sync
0x008293a0  __gnu_internal::buf_wcerr_sync
0x008293e0  __gnu_internal::buf_wcout_sync
0x00829420  __gnu_internal::buf_cin
0x008294a0  __gnu_internal::buf_cerr
0x00829520  __gnu_internal::buf_cout
0x008295a0  __gnu_internal::buf_wcin
0x00829620  __gnu_internal::buf_wcerr
0x008296a0  __gnu_internal::buf_wcout
0x00829720  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0x00829730  std::string::_Rep::_S_empty_rep_storage
0x00829740  std::__num_base::_S_atoms_in
0x00829744  std::__num_base::_S_atoms_out
0x00829748  std::money_base::_S_atoms
0x0082974c  std::moneypunct<char, false>::id
0x00829750  std::moneypunct<char, true>::id
0x00829754  std::moneypunct<wchar_t, false>::id
0x00829758  std::moneypunct<wchar_t, true>::id
0x0082975c  std::__timepunct<char>::id
0x00829760  std::__timepunct<wchar_t>::id
0x00829820  std::__timepunct_cache<char>::_S_timezones
0x00829860  std::__timepunct_cache<wchar_t>::_S_timezones
0x008298a0  std::ctype<char>::id
0x008298a4  std::ctype<wchar_t>::id
0x008298a8  std::locale::_S_classic
0x008298ac  std::locale::id::_S_refcount
0x008298b0  std::locale::facet::_S_c_locale
0x008298b4  std::locale::facet::_S_once
0x008298bc  std::locale::_S_once
0x008298c4  std::locale::_S_global
0x008298c8  std::__cxx11::moneypunct<char, false>::id
0x008298cc  std::__cxx11::moneypunct<char, true>::id
0x008298d0  std::__cxx11::moneypunct<wchar_t, false>::id
0x008298d4  std::__cxx11::moneypunct<wchar_t, true>::id
0x008298d8  std::__cxx11::collate<char>::id
0x008298dc  std::__cxx11::collate<wchar_t>::id
0x008298e0  std::__cxx11::messages<char>::id
0x008298e4  std::__cxx11::messages<wchar_t>::id
0x008298e8  std::__cxx11::numpunct<char>::id
0x008298ec  std::__cxx11::numpunct<wchar_t>::id
0x008298f0  std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008298f4  std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008298f8  std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008298fc  std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829900  std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829904  std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829908  std::codecvt<char32_t, char, int>::id
0x0082990c  std::codecvt<char16_t, char, int>::id
0x00829910  std::codecvt<char, char, int>::id
0x00829914  std::codecvt<wchar_t, char, int>::id
0x00829918  std::collate<char>::id
0x0082991c  std::collate<wchar_t>::id
0x00829920  std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00829924  std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829928  std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x0082992c  std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829930  std::ios_base::Init::_S_refcount
0x00829934  std::ios_base::Init::_S_synced_with_stdio
0x00829938  std::messages<char>::id
0x0082993c  std::messages<wchar_t>::id
0x00829940  std::numpunct<char>::id
0x00829944  std::numpunct<wchar_t>::id
0x00829948  std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x0082994c  std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829950  std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829954  std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829958  std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x0082995c  std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829960  std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829964  std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829980  std::cin
0x00829a20  std::cerr
0x00829ac0  std::clog
0x00829b60  std::cout
0x00829c00  std::wcin
0x00829ca0  std::wcerr
0x00829d40  std::wclog
0x00829de0  std::wcout
0x00829e80  DebugHelper::GetDebugHelper()::helper
0x00829efc  rapidxml::xml_base<char>::nullstr()::zero
0x00829f10  __JCR_END__
0x00829f10  __JCR_LIST__
0x00829f14  _data_end__
0x0082ac48  std::piecewise_construct
0x0082af78  SUPER_SHIELD_TIME
0x0082b5e4  FLAGS
0x0082b5f0  _ZStL19piecewise_construct
0x0082c31c  _ZStL19piecewise_construct
0x0082c35e  _ZStL19piecewise_construct
0x0082c3b0  DOOR_HEALTH_3
0x0082c3bc  DOOR_HEALTH_2
0x0082c3c8  DOOR_HEALTH_1
0x0082d764  SYSTEM_HACKING
0x0082d768  SYSTEM_ARTILLERY
0x0082d76c  SYSTEM_CLOAKING
0x0082d770  SYSTEM_TELEPORTER
0x0082d774  SYSTEM_DOORS
0x0082d778  SYSTEM_SENSORS
0x0082d77c  SYSTEM_PILOT
0x0082d780  SYSTEM_MEDBAY
0x0082d784  SYSTEM_DRONES
0x0082d788  SYSTEM_WEAPONS
0x0082d78c  SYSTEM_OXYGEN
0x0082d790  SYSTEM_ENGINE
0x0082d794  SYSTEM_SHIELDS
0x0082d798  _ZStL19piecewise_construct
0x0082dcd0  SystemControl::CreateSystemBoxes()::subsystem_order
0x0082dce0  _ZL14SYSTEM_HACKING
0x0082dce4  SYSTEM_MIND
0x0082dce8  SYSTEM_CLONEBAY
0x0082dcec  SYSTEM_BATTERY
0x0082dcf0  _ZL16SYSTEM_ARTILLERY
0x0082dcf4  _ZL15SYSTEM_CLOAKING
0x0082dcf8  _ZL17SYSTEM_TELEPORTER
0x0082dcfc  _ZL12SYSTEM_DOORS
0x0082dd00  _ZL14SYSTEM_SENSORS
0x0082dd04  _ZL12SYSTEM_PILOT
0x0082dd08  _ZL13SYSTEM_MEDBAY
0x0082dd0c  _ZL13SYSTEM_DRONES
0x0082dd10  _ZL14SYSTEM_WEAPONS
0x0082dd14  _ZL13SYSTEM_OXYGEN
0x0082dd18  _ZL13SYSTEM_ENGINE
0x0082dd1c  _ZL14SYSTEM_SHIELDS
0x0082e164  STATS
0x0082e168  HANGAR
0x0082e16c  MAIN_MENU
0x0082e170  QUIT
0x0082e174  RESTART_EASY
0x0082ee00  SHIP_BLUEPRINT_ORDER
0x0082f2a0  ._74
0x0082fdc0  MenuScreen::OnRender()::textList
0x0082ff9c  CONTROLS
0x0082ffa0  SAVE_QUIT
0x0082ffa4  _ZL6HANGAR
0x0082ffa8  _ZL9MAIN_MENU
0x0082ffac  CONTINUE
0x0082ffb0  OPTIONS
0x0082ffb4  _ZL12RESTART_EASY
0x00830620  _ZL20SHIP_BLUEPRINT_ORDER
0x00830cdc  _ZStL19piecewise_construct
0x00831118  _ZL14SYSTEM_HACKING
0x0083111c  _ZL11SYSTEM_MIND
0x00831120  _ZL15SYSTEM_CLONEBAY
0x00831124  _ZL14SYSTEM_BATTERY
0x00831128  _ZL16SYSTEM_ARTILLERY
0x0083112c  _ZL15SYSTEM_CLOAKING
0x00831130  _ZL17SYSTEM_TELEPORTER
0x00831134  _ZL12SYSTEM_DOORS
0x00831138  _ZL14SYSTEM_SENSORS
0x0083113c  _ZL12SYSTEM_PILOT
0x00831140  _ZL13SYSTEM_MEDBAY
0x00831144  _ZL13SYSTEM_DRONES
0x00831148  _ZL14SYSTEM_WEAPONS
0x0083114c  _ZL13SYSTEM_OXYGEN
0x00831150  _ZL13SYSTEM_ENGINE
0x00831154  _ZL14SYSTEM_SHIELDS
0x00831fbc  CSWTCH.234
0x008328c0  ._73
0x00832920  ._72
0x0083345b  _ZStL19piecewise_construct
0x00833808  CSurface::GL_CreateMultiImageColorPrimitive(GL_Texture*, std::vector<GL_ColorTexVertex, std::allocator<GL_ColorTexVertex> > const&)::vertexFormat
0x00833818  LowCreateImagePrimitive(GL_Texture*, std::vector<GL_TexVertex, std::allocator<GL_TexVertex> > const&, GL_Color)::vertexFormat
0x00833824  CreateBasicPrimitive(int, GL_Color, bool, int, float*, int, unsigned short*)::plainVertexFormat
0x0083382c  CSurface::GL_BlitFrameBuffer(int*, float, float, bool)::vertexFormat
0x00833838  CSurface::GL_BlitMultiColorImage(GL_Texture*, std::vector<GL_ColorTexVertex, std::allocator<GL_ColorTexVertex> > const&, bool)::vertexFormat
0x00833848  CSurface::GL_BlitMultiImage(GL_Texture*, std::vector<GL_TexVertex, std::allocator<GL_TexVertex> > const&, bool)::vertexFormat
0x00833854  GL_LowBlitImage(GL_Texture*, bool, float, float, float, float, float, float, float, float, GL_Color)::vertexFormat
0x00833860  RenderVertices(int, GL_Vert const*, int)::vertexFormat
0x00833f94  FONT_ZH_HANS_OUTLINE
0x00833f98  FONT_ZH_HANS
0x00833f9c  FONT_HL2_4X
0x00833fa0  FONT_HL2_3X
0x00833fa4  FONT_HL2_2X
0x00833fa8  FONT_HL2
0x00833fac  FONT_HL1_2X_SHORT
0x00833fb0  FONT_HL1_3X
0x00833fb4  FONT_HL1_2X
0x00833fb8  FONT_HL1
0x00833fbc  FONT_NUM
0x008344b8  _ZStL19piecewise_construct
0x00834983  _ZStL19piecewise_construct
0x00834d2c  missileValues
0x00834d44  droneValues
0x00834d5c  fuelValues
0x00834d74  scrapVariance
0x00836678  _ZStL19piecewise_construct
0x008372e0  RANDOM_SKILLS
0x00837320  SKILL_CAPS
0x00837338  _ZStL19piecewise_construct
0x008379a8  EVENT_EQUIP_FULL
0x008379ac  EVENT_CLONED
0x008379b0  EVENT_AUGMENT_FULL
0x008379b4  _ZStL19piecewise_construct
0x00837cb8  HACKING_EFFECT_TIMER
0x00837d50  DAMAGE_BOOST
0x00837d60  HEALTH_BOOST
0x00837d70  MIND_CONTROL_COUNT
0x00837d80  MIND_CONTROL_LOCK
0x00837d90  MIND_CONTROL_TIMER
0x008389e0  CSWTCH.585
0x00838a00  _ZStL19piecewise_construct
0x00838be8  CLONE_HEALTH
0x00838bf8  CLONE_TIME
0x00838c08  _ZStL19piecewise_construct
0x00838d38  CSWTCH.368
0x00838d44  CSWTCH.282
0x00838d80  vertex_format.5069
0x00838da0  popcount.4973
0x00838ed0  vertex_format.7219
0x00838f20  vertex_format.5652
0x00839738  C.0.3599
0x008397d0  days.5015
0x00839860  raw_formats.3461
0x00839980  map.4044
0x0083a100  utf8_bytes.4279
0x0083a240  stricmp_lower_table.3256
0x0083a340  ten_to_the_minus.4249
0x0083a3e0  ten_to_the.4248
0x0083a508  codelen_order.3419
0x0083af08  dispatcher_attr.5174
0x0083bf5c  attachments.116100
0x0083c140  gl_type.116197
0x0083c180  gl_norm.116198
0x0083c190  is_float.116196
0x0083c29c  no_inout_fragment_header.116061
0x0083c2dc  inout_fragment_header.116060
0x0083c304  separate_header.116048
0x0083c328  separate_pointsize_header.116049
0x0083c360  gl_PerVertex_header.116050
0x0083c3ac  gl_PerVertex_pointsize_header.116051
0x0083c3dc  no_inout_vertex_header.116047
0x0083c3f4  basic_version_130_header.116041
0x0083c430  separate_version_130_header.116042
0x0083c448  basic_version_150_header.116039
0x0083c44c  separate_version_150_header.116040
0x0083cd34  CSWTCH.111
0x0083cd60  CSWTCH.110
0x0083ce00  CSWTCH.163
0x0083ce0c  CSWTCH.157
0x0083ce40  CSWTCH.155
0x0083ce60  CSWTCH.153
0x0083e600  CSWTCH.88
0x0083e6ac  compiler_dlls.115815
0x0083ea64  initial_state.106622
0x0083ea80  bytecode_template.106528
0x0083f124  single_quad_indices.106598
0x0083fd04  IID_ID3D11ShaderReflection_47.106515
0x0083fd14  IID_ID3D11ShaderReflection_43.106516
0x008925b8  CSWTCH.122
0x008925c4  CSWTCH.117
0x008925e0  CSWTCH.115
0x00892600  vertex_format.106701
0x00892620  safe_clear_ps_bytecode.106688
0x008928a0  safe_clear_vs_bytecode.106687
0x008931c0  CSWTCH.195
0x008933a0  map.90874
0x0089392c  name.91988
0x00893980  __compound_literal.0
0x008a33a0  woff_header_fields.8153
0x008a33dc  ttc_header_fields.8186
0x008a3400  metrics_header_fields.6821
0x008a3460  maxp_fields_extra.6712
0x008a349c  maxp_fields.6711
0x008a34ac  os2_fields_extra5.6759
0x008a34bc  os2_fields_extra2.6758
0x008a34d8  os2_fields_extra1.6757
0x008a3500  os2_fields.6756
0x008a35c0  post_fields.6767
0x008a35ec  name_record_fields.6727
0x008a3608  name_table_fields.6726
0x008a3620  pclt_fields.6772
0x008a3680  header_fields.6695
0x008a36d4  table_dir_entry_fields.6647
0x008a36ec  offset_table_fields.6664
0x008a3f60  gvar_fields.9264
0x008a3fa0  fvaraxis_fields.9326
0x008a3fc0  fvar_fields.9325
0x008a4000  sfnt_id.7735
0x008a41c0  trick_names.7706
0x008a6888  log2_4.4191
0x008a68d8  capture_pattern.2716
0x008a68e0  range_bits_list.4405
0x008a68e4  range_list.4404
0x008a7640  CSWTCH.75
0x008a7660  CSWTCH.74
0x008a773c  digits.62989
0x008a8120  png_pass_start.63551
0x008a8120  png_pass_start.63560
0x008a8128  png_pass_inc.63552
0x008a8128  png_pass_inc.63561
0x008a8130  png_pass_ystart.63553
0x008a8138  png_pass_yinc.63554
0x008a8140  png_pass_inc.63368
0x008a8160  row_mask.63323
0x008a8200  display_mask.63324
0x008a8820  chunks_to_ignore.63217
0x008a9604  png_pass_inc.63306
0x008a9604  png_pass_inc.63317
0x008a960c  png_pass_start.63305
0x008a960c  png_pass_start.63316
0x008a9614  png_pass_ystart.63307
0x008a961c  png_pass_yinc.63308
0x008ab9c0  distfix.3673
0x008aba40  lenfix.3672
0x008ac240  order.3701
0x008ac280  dext.3580
0x008ac2c0  dbase.3579
0x008ac300  lext.3578
0x008ac340  lbase.3577
0x008b09a4  CSWTCH.5
0x008b1340  p05.25745
0x008b5940  rapidxml::internal::lookup_tables<0>::lookup_text
0x008b5a40  rapidxml::internal::lookup_tables<0>::lookup_digits
0x008b5b40  rapidxml::internal::lookup_tables<0>::lookup_upcase
0x008b5c40  rapidxml::internal::lookup_tables<0>::lookup_node_name
0x008b5d40  rapidxml::internal::lookup_tables<0>::lookup_whitespace
0x008b5e40  rapidxml::internal::lookup_tables<0>::lookup_attribute_name
0x008b5f40  rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws
0x008b6040  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1
0x008b6140  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2
0x008b6240  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure
0x008b6340  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure
0x008b6458  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_max_size
0x008b645c  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_terminal
0x008b6460  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::npos
0x008b6464  std::string::_Rep::_S_max_size
0x008b6468  std::string::_Rep::_S_terminal
0x008b646c  std::string::npos
0x008b6470  std::ctype_base::alnum
0x008b6474  std::ctype_base::alpha
0x008b6478  std::ctype_base::blank
0x008b647c  std::ctype_base::cntrl
0x008b6480  std::ctype_base::digit
0x008b6484  std::ctype_base::graph
0x008b6488  std::ctype_base::lower
0x008b648c  std::ctype_base::print
0x008b6490  std::ctype_base::punct
0x008b6494  std::ctype_base::space
0x008b6498  std::ctype_base::upper
0x008b649c  std::ctype_base::xdigit
0x008b64a0  std::money_base::_S_default_pattern
0x008b64a4  std::moneypunct<char, false>::intl
0x008b64a8  std::moneypunct<char, true>::intl
0x008b64ac  std::moneypunct<wchar_t, false>::intl
0x008b64b0  std::moneypunct<wchar_t, true>::intl
0x008b64c0  std::moneypunct_byname<char, false>::intl
0x008b64c4  std::moneypunct_byname<char, true>::intl
0x008b64c8  std::moneypunct_byname<wchar_t, false>::intl
0x008b64cc  std::moneypunct_byname<wchar_t, true>::intl
0x008b64d0  std::ctype<char>::table_size
0x008b64d4  std::locale::_S_categories
0x008b64e0  std::locale::_S_twinned_facets
0x008b6580  std::locale::all
0x008b6584  std::locale::none
0x008b6588  std::locale::time
0x008b658c  std::locale::_Impl::_S_id_time
0x008b65a8  std::locale::_Impl::_S_id_ctype
0x008b65c4  std::locale::_Impl::_S_id_collate
0x008b65d0  std::locale::_Impl::_S_id_numeric
0x008b65ec  std::locale::_Impl::_S_id_messages
0x008b6600  std::locale::_Impl::_S_id_monetary
0x008b6640  std::locale::_Impl::_S_facet_categories
0x008b665c  std::locale::ctype
0x008b6660  std::locale::facet::_S_c_name
0x008b6664  std::locale::collate
0x008b6668  std::locale::numeric
0x008b666c  std::locale::messages
0x008b6670  std::locale::monetary
0x008b6674  std::__cxx11::moneypunct<char, false>::intl
0x008b6678  std::__cxx11::moneypunct<char, true>::intl
0x008b667c  std::__cxx11::moneypunct<wchar_t, false>::intl
0x008b6680  std::__cxx11::moneypunct<wchar_t, true>::intl
0x008b6684  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::npos
0x008b6688  std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::npos
0x008b668c  std::__cxx11::moneypunct_byname<char, false>::intl
0x008b6690  std::__cxx11::moneypunct_byname<char, true>::intl
0x008b6694  std::__cxx11::moneypunct_byname<wchar_t, false>::intl
0x008b6698  std::__cxx11::moneypunct_byname<wchar_t, true>::intl
0x008b66a0  std::__detail::__prime_list
0x008b6ac0  std::ios_base::floatfield
0x008b6ac4  std::ios_base::scientific
0x008b6ac8  std::ios_base::adjustfield
0x008b6acc  std::ios_base::in
0x008b6ad0  std::ios_base::app
0x008b6ad4  std::ios_base::ate
0x008b6ad8  std::ios_base::beg
0x008b6adc  std::ios_base::cur
0x008b6ae0  std::ios_base::dec
0x008b6ae4  std::ios_base::end
0x008b6ae8  std::ios_base::hex
0x008b6aec  std::ios_base::oct
0x008b6af0  std::ios_base::out
0x008b6af4  std::ios_base::left
0x008b6af8  std::ios_base::fixed
0x008b6afc  std::ios_base::right
0x008b6b00  std::ios_base::trunc
0x008b6b04  std::ios_base::badbit
0x008b6b08  std::ios_base::binary
0x008b6b0c  std::ios_base::eofbit
0x008b6b10  std::ios_base::skipws
0x008b6b14  std::ios_base::failbit
0x008b6b18  std::ios_base::goodbit
0x008b6b1c  std::ios_base::showpos
0x008b6b20  std::ios_base::unitbuf
0x008b6b24  std::ios_base::internal
0x008b6b28  std::ios_base::showbase
0x008b6b2c  std::ios_base::basefield
0x008b6b30  std::ios_base::boolalpha
0x008b6b34  std::ios_base::showpoint
0x008b6b38  std::ios_base::uppercase
0x008b6b3c  std::nothrow
0x008b6b40  construction vtable for std::iostream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6b7c  construction vtable for std::istream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6ba4  construction vtable for std::ostream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6bcc  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6bf4  construction vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6c30  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6c58  construction vtable for std::istream-in-std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6c80  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6ca8  construction vtable for std::ostream-in-std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6cd0  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6cf8  construction vtable for std::istream-in-std::iostream
0x008b6d20  construction vtable for std::ostream-in-std::iostream
0x008b6d48  construction vtable for std::iostream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6d84  construction vtable for std::istream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6dac  construction vtable for std::ostream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6dd4  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6dfc  construction vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6e38  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6e60  construction vtable for std::istream-in-std::basic_ifstream<char, std::char_traits<char> >
0x008b6e88  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008b6eb0  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b6ed8  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b6f00  construction vtable for std::ostream-in-std::basic_ofstream<char, std::char_traits<char> >
0x008b6f28  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008b6f50  typeinfo for BatteryBox
0x008b6f5c  typeinfo for BeamWeapon
0x008b6f68  typeinfo for CachedRect
0x008b6f74  typeinfo for CrewMember
0x008b6f80  typeinfo for CrewTarget
0x008b6f8c  typeinfo for LaserBlast
0x008b6f98  typeinfo for MenuScreen
0x008b6fa4  typeinfo for MindSystem
0x008b6fb0  typeinfo for Projectile
0x008b6fd0  typeinfo for Repairable
0x008b6ff0  typeinfo for Selectable
0x008b6ff8  typeinfo for ShipButton
0x008b7004  typeinfo for ShipObject
0x008b700c  typeinfo for ShipRepair
0x008b7018  typeinfo for ShipSystem
0x008b7024  typeinfo for SpaceDrone
0x008b704c  typeinfo for Spreadable
0x008b7058  typeinfo for Targetable
0x008b7060  typeinfo for TextButton
0x008b706c  typeinfo for ArmamentBox
0x008b7074  typeinfo for BattleDrone
0x008b7080  typeinfo for CachedImage
0x008b708c  typeinfo for CloakingBox
0x008b7098  typeinfo for CloneSystem
0x008b70a4  typeinfo for Collideable
0x008b70ac  typeinfo for CombatDrone
0x008b70b8  typeinfo for DroneSystem
0x008b70c4  typeinfo for EnergyAlien
0x008b70d0  typeinfo for FocusWindow
0x008b70d8  typeinfo for MantisAlien
0x008b70e4  typeinfo for RepairDrone
0x008b70f0  typeinfo for ShipManager
0x008b7118  typeinfo for TeleportBox
0x008b7124  typeinfo for ArtilleryBox
0x008b7130  typeinfo for BoarderDrone
0x008b713c  typeinfo for CompleteShip
0x008b7144  typeinfo for CrewEquipBox
0x008b7150  typeinfo for CrewManifest
0x008b715c  typeinfo for CrewStoreBox
0x008b7168  typeinfo for CrystalAlien
0x008b7174  typeinfo for DefenseDrone
0x008b7180  typeinfo for DroneControl
0x008b718c  typeinfo for EngineSystem
0x008b7198  typeinfo for EquipmentBox
0x008b71a0  typeinfo for HackingDrone
0x008b71ac  typeinfo for ItemStoreBox
0x008b71b8  typeinfo for MedbaySystem
0x008b71c4  typeinfo for OxygenSystem
0x008b71d0  typeinfo for TabbedWindow
0x008b71dc  typeinfo for ToggleButton
0x008b71e8  typeinfo for WeaponSystem
0x008b71f4  typeinfo for BatterySystem
0x008b7200  typeinfo for ConfirmWindow
0x008b720c  typeinfo for CrewAnimation
0x008b7218  typeinfo for CrewBlueprint
0x008b7224  typeinfo for DroneEquipBox
0x008b7230  typeinfo for DroneStoreBox
0x008b723c  typeinfo for EngiAnimation
0x008b7248  typeinfo for GenericButton
0x008b7250  typeinfo for HackingSystem
0x008b725c  typeinfo for ItemBlueprint
0x008b7268  typeinfo for OptionsScreen
0x008b7274  typeinfo for ReactorButton
0x008b7280  typeinfo for RockAnimation
0x008b728c  typeinfo for ShipBlueprint
0x008b7298  typeinfo for SlugAnimation
0x008b72a4  typeinfo for WeaponControl
0x008b72b0  typeinfo for AnaerobicAlien
0x008b72bc  typeinfo for BombProjectile
0x008b72c8  typeinfo for CloakingSystem
0x008b72d4  typeinfo for DistressButton
0x008b72e0  typeinfo for DroneBlueprint
0x008b72ec  typeinfo for RepairStoreBox
0x008b72f8  typeinfo for SystemStoreBox
0x008b7304  typeinfo for TeleportSystem
0x008b7310  typeinfo for WarningMessage
0x008b7318  typeinfo for WeaponEquipBox
0x008b7324  typeinfo for WeaponStoreBox
0x008b7330  typeinfo for ArmamentControl
0x008b7338  typeinfo for ArtillerySystem
0x008b7344  typeinfo for AugmentEquipBox
0x008b7350  typeinfo for AugmentStoreBox
0x008b735c  typeinfo for BoarderPodDrone
0x008b7368  typeinfo for CachedPrimitive
0x008b7370  typeinfo for EnergyAnimation
0x008b737c  typeinfo for LanguageChooser
0x008b7388  typeinfo for MantisAnimation
0x008b7394  typeinfo for RepairAnimation
0x008b73a0  typeinfo for ShipRepairDrone
0x008b73ac  typeinfo for SystemBlueprint
0x008b73b8  typeinfo for SystemCustomBox
0x008b73c4  typeinfo for WeaponBlueprint
0x008b73d0  typeinfo for WeaponSystemBox
0x008b73dc  typeinfo for AnimationTracker
0x008b73e4  typeinfo for AugmentBlueprint
0x008b73f0  typeinfo for CrewCustomizeBox
0x008b73fc  typeinfo for CrystalAnimation
0x008b7408  typeinfo for SuperShieldDrone
0x008b7414  typeinfo for WarningWithLines
0x008b7420  typeinfo for CachedRectOutline
0x008b742c  typeinfo for CooldownSystemBox
0x008b7438  typeinfo for IonDroneAnimation
0x008b7444  typeinfo for ProjectileFactory
0x008b7450  typeinfo for AnaerobicAnimation
0x008b745c  typeinfo for ExplosionAnimation
0x008b747c  typeinfo for CApp
0x008b7488  typeinfo for Door
0x008b74a8  typeinfo for Fire
0x008b74b4  typeinfo for Room
0x008b74d4  typeinfo for Ship
0x008b74e0  typeinfo for Algae
0x008b74ec  typeinfo for Drone
0x008b74f8  typeinfo for Ghost
0x008b7504  typeinfo for Store
0x008b7510  typeinfo for Button
0x008b751c  typeinfo for CEvent
0x008b7524  typeinfo for DoorBox
0x008b7530  typeinfo for HackBox
0x008b753c  typeinfo for MindBox
0x008b7548  typeinfo for Missile
0x008b7554  typeinfo for PDSFire
0x008b7560  typeinfo for Shields
0x008b756c  typeinfo for StarMap
0x008b7578  typeinfo for Asteroid
0x008b7584  typeinfo for BossShip
0x008b7590  typeinfo for CloneBox
0x008b759c  typeinfo for DroneBox
0x008b75a8  typeinfo for GameOver
0x008b75b4  typeinfo for InputBox
0x008b75c0  typeinfo for IonDrone
0x008b75cc  typeinfo for Moddable
0x008b75d4  typeinfo for Spreader<Fire>
0x008b75e0  typeinfo for StoreBox
0x008b75e8  typeinfo for Upgrades
0x008b75f4  typeinfo for Blueprint
0x008b75fc  typeinfo for ChoiceBox
0x008b7608  typeinfo for CrewDrone
0x008b7628  typeinfo for CrewLaser
0x008b7634  typeinfo for EngiAlien
0x008b7640  typeinfo for Equipment
0x008b764c  typeinfo for FTLButton
0x008b7658  typeinfo for OuterHull
0x008b7664  typeinfo for RockAlien
0x008b7670  typeinfo for SlugAlien
0x008b767c  typeinfo for SystemBox
0x008b7684  typeinfo for WeaponBox
0x008b7690  typeinfo for __cxxabiv1::__forced_unwind
0x008b7698  typeinfo for __cxxabiv1::__class_type_info
0x008b76a4  typeinfo for __cxxabiv1::__foreign_exception
0x008b76ac  typeinfo for __cxxabiv1::__si_class_type_info
0x008b76b8  typeinfo for __cxxabiv1::__vmi_class_type_info
0x008b76e8  typeinfo for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008b76f4  typeinfo for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7700  typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008b770c  typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7718  typeinfo for __gnu_cxx::recursive_init_error
0x008b7724  typeinfo for __gnu_cxx::__concurrence_lock_error
0x008b7730  typeinfo for __gnu_cxx::__concurrence_unlock_error
0x008b7b3c  typeinfo for std::_V2::error_category
0x008b7b44  typeinfo for std::locale::facet::__shim
0x008b7b4c  typeinfo for std::locale::facet
0x008b7b54  typeinfo for std::__cxx11::moneypunct<char, false>
0x008b7b74  typeinfo for std::__cxx11::moneypunct<char, true>
0x008b7b94  typeinfo for std::__cxx11::moneypunct<wchar_t, false>
0x008b7bb4  typeinfo for std::__cxx11::moneypunct<wchar_t, true>
0x008b7bd4  typeinfo for std::__cxx11::collate_byname<char>
0x008b7be0  typeinfo for std::__cxx11::collate_byname<wchar_t>
0x008b7bec  typeinfo for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008b7bf8  typeinfo for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7c04  typeinfo for std::__cxx11::messages_byname<char>
0x008b7c10  typeinfo for std::__cxx11::messages_byname<wchar_t>
0x008b7c1c  typeinfo for std::__cxx11::numpunct_byname<char>
0x008b7c28  typeinfo for std::__cxx11::numpunct_byname<wchar_t>
0x008b7c34  typeinfo for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7c40  typeinfo for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7c4c  typeinfo for std::__cxx11::moneypunct_byname<char, false>
0x008b7c58  typeinfo for std::__cxx11::moneypunct_byname<char, true>
0x008b7c64  typeinfo for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008b7c70  typeinfo for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008b7c7c  typeinfo for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7c88  typeinfo for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7c94  typeinfo for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7ca0  typeinfo for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7cac  typeinfo for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7cb8  typeinfo for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7cc4  typeinfo for std::__cxx11::collate<char>
0x008b7cd0  typeinfo for std::__cxx11::collate<wchar_t>
0x008b7cdc  typeinfo for std::__cxx11::messages<char>
0x008b7cfc  typeinfo for std::__cxx11::messages<wchar_t>
0x008b7d1c  typeinfo for std::__cxx11::numpunct<char>
0x008b7d28  typeinfo for std::__cxx11::numpunct<wchar_t>
0x008b7d34  typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7d54  typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7d74  typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7d80  typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7d8c  typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b7d98  typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7da4  typeinfo for std::ios_base::failure
0x008b7db0  typeinfo for std::iostream
0x008b7dd0  typeinfo for std::istream
0x008b7de8  typeinfo for std::ostream
0x008b7e00  typeinfo for std::bad_typeid
0x008b7e0c  typeinfo for std::ctype_base
0x008b7e14  typeinfo for std::money_base
0x008b7e1c  typeinfo for std::moneypunct<char, false>
0x008b7e3c  typeinfo for std::moneypunct<char, true>
0x008b7e5c  typeinfo for std::moneypunct<wchar_t, false>
0x008b7e7c  typeinfo for std::moneypunct<wchar_t, true>
0x008b7e9c  typeinfo for std::__timepunct<char>
0x008b7ea8  typeinfo for std::__timepunct<wchar_t>
0x008b7eb4  typeinfo for std::logic_error
0x008b7ec0  typeinfo for std::range_error
0x008b7ecc  typeinfo for std::regex_error
0x008b7ed8  typeinfo for std::codecvt_base
0x008b7ee0  typeinfo for std::ctype_byname<char>
0x008b7eec  typeinfo for std::ctype_byname<wchar_t>
0x008b7ef8  typeinfo for std::domain_error
0x008b7f04  typeinfo for std::future_error
0x008b7f10  typeinfo for std::length_error
0x008b7f1c  typeinfo for std::out_of_range
0x008b7f28  typeinfo for std::system_error
0x008b7f34  typeinfo for std::bad_exception
0x008b7f40  typeinfo for std::basic_filebuf<char, std::char_traits<char> >
0x008b7f4c  typeinfo for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7f58  typeinfo for std::basic_fstream<char, std::char_traits<char> >
0x008b7f64  typeinfo for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b7f70  typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008b7f88  typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008b7fa0  typeinfo for std::messages_base
0x008b7fa8  typeinfo for std::runtime_error
0x008b7fb4  typeinfo for std::basic_ifstream<char, std::char_traits<char> >
0x008b7fc0  typeinfo for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008b7fcc  typeinfo for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b7fec  typeinfo for std::basic_ofstream<char, std::char_traits<char> >
0x008b7ff8  typeinfo for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008b8004  typeinfo for std::codecvt_byname<char, char, int>
0x008b8010  typeinfo for std::codecvt_byname<wchar_t, char, int>
0x008b801c  typeinfo for std::collate_byname<char>
0x008b8028  typeinfo for std::collate_byname<wchar_t>
0x008b8034  typeinfo for std::overflow_error
0x008b8040  typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0x008b8048  typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008b8050  typeinfo for std::messages_byname<char>
0x008b805c  typeinfo for std::messages_byname<wchar_t>
0x008b8068  typeinfo for std::numpunct_byname<char>
0x008b8074  typeinfo for std::numpunct_byname<wchar_t>
0x008b8080  typeinfo for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b808c  typeinfo for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8098  typeinfo for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b80a4  typeinfo for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b80b0  typeinfo for std::underflow_error
0x008b80bc  typeinfo for std::__numpunct_cache<char>
0x008b80c8  typeinfo for std::__numpunct_cache<wchar_t>
0x008b80d4  typeinfo for std::invalid_argument
0x008b80e0  typeinfo for std::__timepunct_cache<char>
0x008b80ec  typeinfo for std::__timepunct_cache<wchar_t>
0x008b80f8  typeinfo for std::bad_function_call
0x008b8104  typeinfo for std::moneypunct_byname<char, false>
0x008b8110  typeinfo for std::moneypunct_byname<char, true>
0x008b811c  typeinfo for std::moneypunct_byname<wchar_t, false>
0x008b8128  typeinfo for std::moneypunct_byname<wchar_t, true>
0x008b8134  typeinfo for std::__moneypunct_cache<char, false>
0x008b8140  typeinfo for std::__moneypunct_cache<char, true>
0x008b814c  typeinfo for std::__moneypunct_cache<wchar_t, false>
0x008b8158  typeinfo for std::__moneypunct_cache<wchar_t, true>
0x008b8164  typeinfo for std::__codecvt_utf8_base<char32_t>
0x008b8170  typeinfo for std::__codecvt_utf8_base<char16_t>
0x008b817c  typeinfo for std::__codecvt_utf8_base<wchar_t>
0x008b8188  typeinfo for std::__codecvt_utf16_base<char32_t>
0x008b8194  typeinfo for std::__codecvt_utf16_base<char16_t>
0x008b81a0  typeinfo for std::__codecvt_utf16_base<wchar_t>
0x008b81ac  typeinfo for std::bad_array_new_length
0x008b81b8  typeinfo for std::__ctype_abstract_base<char>
0x008b81d8  typeinfo for std::__ctype_abstract_base<wchar_t>
0x008b81f8  typeinfo for std::__codecvt_abstract_base<char32_t, char, int>
0x008b8218  typeinfo for std::__codecvt_abstract_base<char16_t, char, int>
0x008b8238  typeinfo for std::__codecvt_abstract_base<char, char, int>
0x008b8258  typeinfo for std::__codecvt_abstract_base<wchar_t, char, int>
0x008b8278  typeinfo for std::__codecvt_utf8_utf16_base<char32_t>
0x008b8284  typeinfo for std::__codecvt_utf8_utf16_base<char16_t>
0x008b8290  typeinfo for std::__codecvt_utf8_utf16_base<wchar_t>
0x008b829c  typeinfo for std::ctype<char>
0x008b82bc  typeinfo for std::ctype<wchar_t>
0x008b82c8  typeinfo for std::codecvt<char32_t, char, int>
0x008b82d4  typeinfo for std::codecvt<char16_t, char, int>
0x008b82e0  typeinfo for std::codecvt<char, char, int>
0x008b82ec  typeinfo for std::codecvt<wchar_t, char, int>
0x008b82f8  typeinfo for std::collate<char>
0x008b8304  typeinfo for std::collate<wchar_t>
0x008b8310  typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b831c  typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8328  typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b8334  typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8340  typeinfo for std::bad_cast
0x008b834c  typeinfo for std::ios_base
0x008b8354  typeinfo for std::messages<char>
0x008b8374  typeinfo for std::messages<wchar_t>
0x008b8394  typeinfo for std::numpunct<char>
0x008b83a0  typeinfo for std::numpunct<wchar_t>
0x008b83ac  typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b83cc  typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b83ec  typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b83f8  typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8404  typeinfo for std::bad_alloc
0x008b8410  typeinfo for std::basic_ios<char, std::char_traits<char> >
0x008b841c  typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008b8428  typeinfo for std::exception
0x008b8430  typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b843c  typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8448  typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b8454  typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8460  typeinfo for std::time_base
0x008b8468  typeinfo for std::type_info
0x008b8470  typeinfo name for BatteryBox
0x008b8480  typeinfo name for BeamWeapon
0x008b8490  typeinfo name for CachedRect
0x008b84a0  typeinfo name for CrewMember
0x008b84b0  typeinfo name for CrewTarget
0x008b84c0  typeinfo name for LaserBlast
0x008b84d0  typeinfo name for MenuScreen
0x008b84e0  typeinfo name for MindSystem
0x008b84f0  typeinfo name for Projectile
0x008b8500  typeinfo name for Repairable
0x008b8510  typeinfo name for Selectable
0x008b8520  typeinfo name for ShipButton
0x008b8530  typeinfo name for ShipObject
0x008b8540  typeinfo name for ShipRepair
0x008b8550  typeinfo name for ShipSystem
0x008b8560  typeinfo name for SpaceDrone
0x008b8570  typeinfo name for Spreadable
0x008b8580  typeinfo name for Targetable
0x008b8590  typeinfo name for TextButton
0x008b85a0  typeinfo name for ArmamentBox
0x008b85b0  typeinfo name for BattleDrone
0x008b85c0  typeinfo name for CachedImage
0x008b85d0  typeinfo name for CloakingBox
0x008b85e0  typeinfo name for CloneSystem
0x008b85f0  typeinfo name for Collideable
0x008b8600  typeinfo name for CombatDrone
0x008b8610  typeinfo name for DroneSystem
0x008b8620  typeinfo name for EnergyAlien
0x008b8630  typeinfo name for FocusWindow
0x008b8640  typeinfo name for MantisAlien
0x008b8650  typeinfo name for RepairDrone
0x008b8660  typeinfo name for ShipManager
0x008b8670  typeinfo name for TeleportBox
0x008b8680  typeinfo name for ArtilleryBox
0x008b8690  typeinfo name for BoarderDrone
0x008b86a0  typeinfo name for CompleteShip
0x008b86b0  typeinfo name for CrewEquipBox
0x008b86c0  typeinfo name for CrewManifest
0x008b86d0  typeinfo name for CrewStoreBox
0x008b86e0  typeinfo name for CrystalAlien
0x008b86f0  typeinfo name for DefenseDrone
0x008b8700  typeinfo name for DroneControl
0x008b8710  typeinfo name for EngineSystem
0x008b8720  typeinfo name for EquipmentBox
0x008b8730  typeinfo name for HackingDrone
0x008b8740  typeinfo name for ItemStoreBox
0x008b8750  typeinfo name for MedbaySystem
0x008b8760  typeinfo name for OxygenSystem
0x008b8770  typeinfo name for TabbedWindow
0x008b8780  typeinfo name for ToggleButton
0x008b8790  typeinfo name for WeaponSystem
0x008b87a0  typeinfo name for BatterySystem
0x008b87b0  typeinfo name for ConfirmWindow
0x008b87c0  typeinfo name for CrewAnimation
0x008b87d0  typeinfo name for CrewBlueprint
0x008b87e0  typeinfo name for DroneEquipBox
0x008b87f0  typeinfo name for DroneStoreBox
0x008b8800  typeinfo name for EngiAnimation
0x008b8810  typeinfo name for GenericButton
0x008b8820  typeinfo name for HackingSystem
0x008b8830  typeinfo name for ItemBlueprint
0x008b8840  typeinfo name for OptionsScreen
0x008b8850  typeinfo name for ReactorButton
0x008b8860  typeinfo name for RockAnimation
0x008b8870  typeinfo name for ShipBlueprint
0x008b8880  typeinfo name for SlugAnimation
0x008b8890  typeinfo name for WeaponControl
0x008b88a0  typeinfo name for AnaerobicAlien
0x008b88b4  typeinfo name for BombProjectile
0x008b88c8  typeinfo name for CloakingSystem
0x008b88dc  typeinfo name for DistressButton
0x008b88f0  typeinfo name for DroneBlueprint
0x008b8904  typeinfo name for RepairStoreBox
0x008b8918  typeinfo name for SystemStoreBox
0x008b892c  typeinfo name for TeleportSystem
0x008b8940  typeinfo name for WarningMessage
0x008b8954  typeinfo name for WeaponEquipBox
0x008b8968  typeinfo name for WeaponStoreBox
0x008b897c  typeinfo name for ArmamentControl
0x008b8990  typeinfo name for ArtillerySystem
0x008b89a4  typeinfo name for AugmentEquipBox
0x008b89b8  typeinfo name for AugmentStoreBox
0x008b89cc  typeinfo name for BoarderPodDrone
0x008b89e0  typeinfo name for CachedPrimitive
0x008b89f4  typeinfo name for EnergyAnimation
0x008b8a08  typeinfo name for LanguageChooser
0x008b8a1c  typeinfo name for MantisAnimation
0x008b8a30  typeinfo name for RepairAnimation
0x008b8a44  typeinfo name for ShipRepairDrone
0x008b8a58  typeinfo name for SystemBlueprint
0x008b8a6c  typeinfo name for SystemCustomBox
0x008b8a80  typeinfo name for WeaponBlueprint
0x008b8a94  typeinfo name for WeaponSystemBox
0x008b8aa8  typeinfo name for AnimationTracker
0x008b8abc  typeinfo name for AugmentBlueprint
0x008b8ad0  typeinfo name for CrewCustomizeBox
0x008b8ae4  typeinfo name for CrystalAnimation
0x008b8af8  typeinfo name for SuperShieldDrone
0x008b8b0c  typeinfo name for WarningWithLines
0x008b8b20  typeinfo name for CachedRectOutline
0x008b8b34  typeinfo name for CooldownSystemBox
0x008b8b48  typeinfo name for IonDroneAnimation
0x008b8b5c  typeinfo name for ProjectileFactory
0x008b8b70  typeinfo name for AnaerobicAnimation
0x008b8b88  typeinfo name for ExplosionAnimation
0x008b8ba0  typeinfo name for CApp
0x008b8ba8  typeinfo name for Door
0x008b8bb0  typeinfo name for Fire
0x008b8bb8  typeinfo name for Room
0x008b8bc0  typeinfo name for Ship
0x008b8bc8  typeinfo name for Algae
0x008b8bd0  typeinfo name for Drone
0x008b8bd8  typeinfo name for Ghost
0x008b8be0  typeinfo name for Store
0x008b8be8  typeinfo name for Button
0x008b8bf0  typeinfo name for CEvent
0x008b8bf8  typeinfo name for DoorBox
0x008b8c04  typeinfo name for HackBox
0x008b8c10  typeinfo name for MindBox
0x008b8c1c  typeinfo name for Missile
0x008b8c28  typeinfo name for PDSFire
0x008b8c34  typeinfo name for Shields
0x008b8c40  typeinfo name for StarMap
0x008b8c4c  typeinfo name for Asteroid
0x008b8c58  typeinfo name for BossShip
0x008b8c64  typeinfo name for CloneBox
0x008b8c70  typeinfo name for DroneBox
0x008b8c7c  typeinfo name for GameOver
0x008b8c88  typeinfo name for InputBox
0x008b8c94  typeinfo name for IonDrone
0x008b8ca0  typeinfo name for Moddable
0x008b8cac  typeinfo name for Spreader<Fire>
0x008b8cc0  typeinfo name for StoreBox
0x008b8ccc  typeinfo name for Upgrades
0x008b8cd8  typeinfo name for Blueprint
0x008b8ce4  typeinfo name for ChoiceBox
0x008b8cf0  typeinfo name for CrewDrone
0x008b8cfc  typeinfo name for CrewLaser
0x008b8d08  typeinfo name for EngiAlien
0x008b8d14  typeinfo name for Equipment
0x008b8d20  typeinfo name for FTLButton
0x008b8d2c  typeinfo name for OuterHull
0x008b8d38  typeinfo name for RockAlien
0x008b8d44  typeinfo name for SlugAlien
0x008b8d50  typeinfo name for SystemBox
0x008b8d5c  typeinfo name for WeaponBox
0x008b8d80  typeinfo name for __cxxabiv1::__forced_unwind
0x008b8da0  typeinfo name for __cxxabiv1::__class_type_info
0x008b8de0  typeinfo name for __cxxabiv1::__foreign_exception
0x008b8e20  typeinfo name for __cxxabiv1::__si_class_type_info
0x008b8e60  typeinfo name for __cxxabiv1::__vmi_class_type_info
0x008b8f60  typeinfo name for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008b8fa0  typeinfo name for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b8fe0  typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008b9020  typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b9060  typeinfo name for __gnu_cxx::recursive_init_error
0x008b90a0  typeinfo name for __gnu_cxx::__concurrence_lock_error
0x008b90e0  typeinfo name for __gnu_cxx::__concurrence_unlock_error
0x008b9920  typeinfo name for std::_V2::error_category
0x008b993c  typeinfo name for std::locale::facet::__shim
0x008b9958  typeinfo name for std::locale::facet
0x008b9980  typeinfo name for std::__cxx11::moneypunct<char, false>
0x008b99a0  typeinfo name for std::__cxx11::moneypunct<char, true>
0x008b99c0  typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
0x008b99e0  typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
0x008b9a00  typeinfo name for std::__cxx11::collate_byname<char>
0x008b9a20  typeinfo name for std::__cxx11::collate_byname<wchar_t>
0x008b9a40  typeinfo name for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008b9a80  typeinfo name for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9ac0  typeinfo name for std::__cxx11::messages_byname<char>
0x008b9b00  typeinfo name for std::__cxx11::messages_byname<wchar_t>
0x008b9b40  typeinfo name for std::__cxx11::numpunct_byname<char>
0x008b9b80  typeinfo name for std::__cxx11::numpunct_byname<wchar_t>
0x008b9bc0  typeinfo name for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b9c20  typeinfo name for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b9c80  typeinfo name for std::__cxx11::moneypunct_byname<char, false>
0x008b9cc0  typeinfo name for std::__cxx11::moneypunct_byname<char, true>
0x008b9d00  typeinfo name for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008b9d40  typeinfo name for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008b9d80  typeinfo name for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9dc0  typeinfo name for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9e00  typeinfo name for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9e40  typeinfo name for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9e80  typeinfo name for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9ec0  typeinfo name for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9f00  typeinfo name for std::__cxx11::collate<char>
0x008b9f18  typeinfo name for std::__cxx11::collate<wchar_t>
0x008b9f30  typeinfo name for std::__cxx11::messages<char>
0x008b9f4c  typeinfo name for std::__cxx11::messages<wchar_t>
0x008b9f68  typeinfo name for std::__cxx11::numpunct<char>
0x008b9f84  typeinfo name for std::__cxx11::numpunct<wchar_t>
0x008b9fa0  typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba000  typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba060  typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba0c0  typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba120  typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008ba180  typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba1e0  typeinfo name for std::ios_base::failure
0x008ba1f8  typeinfo name for std::iostream
0x008ba1fc  typeinfo name for std::istream
0x008ba200  typeinfo name for std::ostream
0x008ba204  typeinfo name for std::bad_typeid
0x008ba214  typeinfo name for std::ctype_base
0x008ba224  typeinfo name for std::money_base
0x008ba234  typeinfo name for std::moneypunct<char, false>
0x008ba24c  typeinfo name for std::moneypunct<char, true>
0x008ba264  typeinfo name for std::moneypunct<wchar_t, false>
0x008ba27c  typeinfo name for std::moneypunct<wchar_t, true>
0x008ba294  typeinfo name for std::__timepunct<char>
0x008ba2a8  typeinfo name for std::__timepunct<wchar_t>
0x008ba2bc  typeinfo name for std::logic_error
0x008ba2cc  typeinfo name for std::range_error
0x008ba2dc  typeinfo name for std::regex_error
0x008ba2ec  typeinfo name for std::codecvt_base
0x008ba300  typeinfo name for std::ctype_byname<char>
0x008ba314  typeinfo name for std::ctype_byname<wchar_t>
0x008ba328  typeinfo name for std::domain_error
0x008ba33c  typeinfo name for std::future_error
0x008ba350  typeinfo name for std::length_error
0x008ba364  typeinfo name for std::out_of_range
0x008ba378  typeinfo name for std::system_error
0x008ba38c  typeinfo name for std::bad_exception
0x008ba3a0  typeinfo name for std::basic_filebuf<char, std::char_traits<char> >
0x008ba3e0  typeinfo name for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008ba420  typeinfo name for std::basic_fstream<char, std::char_traits<char> >
0x008ba460  typeinfo name for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008ba4a0  typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008ba4e0  typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008ba520  typeinfo name for std::messages_base
0x008ba534  typeinfo name for std::runtime_error
0x008ba560  typeinfo name for std::basic_ifstream<char, std::char_traits<char> >
0x008ba5a0  typeinfo name for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008ba5e0  typeinfo name for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008ba620  typeinfo name for std::basic_ofstream<char, std::char_traits<char> >
0x008ba660  typeinfo name for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008ba6a0  typeinfo name for std::codecvt_byname<char, char, int>
0x008ba6b8  typeinfo name for std::codecvt_byname<wchar_t, char, int>
0x008ba6d0  typeinfo name for std::collate_byname<char>
0x008ba6e8  typeinfo name for std::collate_byname<wchar_t>
0x008ba700  typeinfo name for std::overflow_error
0x008ba720  typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
0x008ba760  typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008ba7a0  typeinfo name for std::messages_byname<char>
0x008ba7b8  typeinfo name for std::messages_byname<wchar_t>
0x008ba7d0  typeinfo name for std::numpunct_byname<char>
0x008ba7e8  typeinfo name for std::numpunct_byname<wchar_t>
0x008ba800  typeinfo name for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba860  typeinfo name for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba8c0  typeinfo name for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008ba920  typeinfo name for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba980  typeinfo name for std::underflow_error
0x008ba994  typeinfo name for std::__numpunct_cache<char>
0x008ba9ac  typeinfo name for std::__numpunct_cache<wchar_t>
0x008ba9c4  typeinfo name for std::invalid_argument
0x008ba9dc  typeinfo name for std::__timepunct_cache<char>
0x008ba9f8  typeinfo name for std::__timepunct_cache<wchar_t>
0x008baa14  typeinfo name for std::bad_function_call
0x008baa2c  typeinfo name for std::moneypunct_byname<char, false>
0x008baa4c  typeinfo name for std::moneypunct_byname<char, true>
0x008baa6c  typeinfo name for std::moneypunct_byname<wchar_t, false>
0x008baa8c  typeinfo name for std::moneypunct_byname<wchar_t, true>
0x008baaac  typeinfo name for std::__moneypunct_cache<char, false>
0x008baacc  typeinfo name for std::__moneypunct_cache<char, true>
0x008baaec  typeinfo name for std::__moneypunct_cache<wchar_t, false>
0x008bab0c  typeinfo name for std::__moneypunct_cache<wchar_t, true>
0x008bab2c  typeinfo name for std::__codecvt_utf8_base<char32_t>
0x008bab48  typeinfo name for std::__codecvt_utf8_base<char16_t>
0x008bab64  typeinfo name for std::__codecvt_utf8_base<wchar_t>
0x008bab80  typeinfo name for std::__codecvt_utf16_base<char32_t>
0x008baba0  typeinfo name for std::__codecvt_utf16_base<char16_t>
0x008babc0  typeinfo name for std::__codecvt_utf16_base<wchar_t>
0x008babdc  typeinfo name for std::bad_array_new_length
0x008babf8  typeinfo name for std::__ctype_abstract_base<char>
0x008bac18  typeinfo name for std::__ctype_abstract_base<wchar_t>
0x008bac40  typeinfo name for std::__codecvt_abstract_base<char32_t, char, int>
0x008bac80  typeinfo name for std::__codecvt_abstract_base<char16_t, char, int>
0x008bacc0  typeinfo name for std::__codecvt_abstract_base<char, char, int>
0x008bad00  typeinfo name for std::__codecvt_abstract_base<wchar_t, char, int>
0x008bad40  typeinfo name for std::__codecvt_utf8_utf16_base<char32_t>
0x008bad80  typeinfo name for std::__codecvt_utf8_utf16_base<char16_t>
0x008badc0  typeinfo name for std::__codecvt_utf8_utf16_base<wchar_t>
0x008bae00  typeinfo name for std::ctype<char>
0x008bae0c  typeinfo name for std::ctype<wchar_t>
0x008bae18  typeinfo name for std::codecvt<char32_t, char, int>
0x008bae2c  typeinfo name for std::codecvt<char16_t, char, int>
0x008bae40  typeinfo name for std::codecvt<char, char, int>
0x008bae50  typeinfo name for std::codecvt<wchar_t, char, int>
0x008bae60  typeinfo name for std::collate<char>
0x008bae70  typeinfo name for std::collate<wchar_t>
0x008bae80  typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008baec0  typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008baf00  typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008baf40  typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008baf80  typeinfo name for std::bad_cast
0x008baf8c  typeinfo name for std::ios_base
0x008baf98  typeinfo name for std::messages<char>
0x008bafa8  typeinfo name for std::messages<wchar_t>
0x008bafb8  typeinfo name for std::numpunct<char>
0x008bafc8  typeinfo name for std::numpunct<wchar_t>
0x008bafe0  typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008bb020  typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb060  typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008bb0a0  typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb0e0  typeinfo name for std::bad_alloc
0x008bb100  typeinfo name for std::basic_ios<char, std::char_traits<char> >
0x008bb140  typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008bb180  typeinfo name for std::exception
0x008bb1a0  typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008bb1e0  typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb220  typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008bb260  typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb2a0  typeinfo name for std::time_base
0x008bb2b0  typeinfo name for std::type_info
0x008bb2c0  VTT for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb2e8  VTT for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb310  VTT for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb320  VTT for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb330  VTT for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb340  VTT for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb350  VTT for std::iostream
0x008bb36c  VTT for std::istream
0x008bb374  VTT for std::ostream
0x008bb37c  VTT for std::basic_fstream<char, std::char_traits<char> >
0x008bb3a4  VTT for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008bb3cc  VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008bb3d4  VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008bb3dc  VTT for std::basic_ifstream<char, std::char_traits<char> >
0x008bb3ec  VTT for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008bb3fc  VTT for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008bb418  VTT for std::basic_ofstream<char, std::char_traits<char> >
0x008bb428  VTT for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008bb438  vtable for BatteryBox
0x008bb498  vtable for BeamWeapon
0x008bb570  vtable for CachedRect
0x008bb584  vtable for CrewMember
0x008bb674  vtable for LaserBlast
0x008bb74c  vtable for MenuScreen
0x008bb798  vtable for MindSystem
0x008bb864  vtable for Projectile
0x008bb93c  vtable for Repairable
0x008bb9b8  vtable for ShipButton
0x008bb9f8  vtable for ShipRepair
0x008bba38  vtable for ShipSystem
0x008bbb04  vtable for SpaceDrone
0x008bbc78  vtable for Spreadable
0x008bbd10  vtable for TextButton
0x008bbd50  vtable for ArmamentBox
0x008bbda0  vtable for BattleDrone
0x008bbf40  vtable for CachedImage
0x008bbf54  vtable for CloakingBox
0x008bbfb4  vtable for CloneSystem
0x008bc080  vtable for CombatDrone
0x008bc1f4  vtable for DroneSystem
0x008bc2c0  vtable for EnergyAlien
0x008bc3b0  vtable for FocusWindow
0x008bc3fc  vtable for MantisAlien
0x008bc4ec  vtable for RepairDrone
0x008bc68c  vtable for ShipManager
0x008bc770  vtable for TeleportBox
0x008bc7c4  vtable for ArtilleryBox
0x008bc824  vtable for BoarderDrone
0x008bc9c4  vtable for CompleteShip
0x008bc9e8  vtable for CrewEquipBox
0x008bca44  vtable for CrewManifest
0x008bca90  vtable for CrewStoreBox
0x008bcad8  vtable for CrystalAlien
0x008bcbc8  vtable for DefenseDrone
0x008bcd3c  vtable for DroneControl
0x008bcdb8  vtable for EngineSystem
0x008bce84  vtable for EquipmentBox
0x008bcee0  vtable for HackingDrone
0x008bd054  vtable for ItemStoreBox
0x008bd09c  vtable for MedbaySystem
0x008bd168  vtable for OxygenSystem
0x008bd234  vtable for TabbedWindow
0x008bd280  vtable for ToggleButton
0x008bd2c0  vtable for WeaponSystem
0x008bd38c  vtable for BatterySystem
0x008bd458  vtable for ConfirmWindow
0x008bd4a4  vtable for CrewAnimation
0x008bd4e0  vtable for CrewBlueprint
0x008bd500  vtable for DroneEquipBox
0x008bd55c  vtable for DroneStoreBox
0x008bd5a4  vtable for EngiAnimation
0x008bd5e0  vtable for GenericButton
0x008bd61c  vtable for HackingSystem
0x008bd6e8  vtable for ItemBlueprint
0x008bd708  vtable for OptionsScreen
0x008bd754  vtable for ReactorButton
0x008bd794  vtable for RockAnimation
0x008bd7d0  vtable for ShipBlueprint
0x008bd7f0  vtable for SlugAnimation
0x008bd82c  vtable for WeaponControl
0x008bd8a8  vtable for AnaerobicAlien
0x008bd998  vtable for BombProjectile
0x008bda70  vtable for CloakingSystem
0x008bdb3c  vtable for DistressButton
0x008bdb7c  vtable for DroneBlueprint
0x008bdb9c  vtable for RepairStoreBox
0x008bdbe4  vtable for SystemStoreBox
0x008bdc2c  vtable for TeleportSystem
0x008bdcf8  vtable for WarningMessage
0x008bdd0c  vtable for WeaponEquipBox
0x008bdd68  vtable for WeaponStoreBox
0x008bddb0  vtable for ArmamentControl
0x008bde2c  vtable for ArtillerySystem
0x008bdef8  vtable for AugmentEquipBox
0x008bdf54  vtable for AugmentStoreBox
0x008bdf9c  vtable for BoarderPodDrone
0x008be110  vtable for CachedPrimitive
0x008be124  vtable for EnergyAnimation
0x008be160  vtable for LanguageChooser
0x008be1ac  vtable for MantisAnimation
0x008be1e8  vtable for RepairAnimation
0x008be224  vtable for ShipRepairDrone
0x008be398  vtable for SystemBlueprint
0x008be3b8  vtable for SystemCustomBox
0x008be40c  vtable for WeaponBlueprint
0x008be42c  vtable for WeaponSystemBox
0x008be480  vtable for AnimationTracker
0x008be494  vtable for AugmentBlueprint
0x008be4b4  vtable for CrewCustomizeBox
0x008be510  vtable for CrystalAnimation
0x008be54c  vtable for SuperShieldDrone
0x008be6c0  vtable for WarningWithLines
0x008be6d4  vtable for CachedRectOutline
0x008be6e8  vtable for CooldownSystemBox
0x008be748  vtable for IonDroneAnimation
0x008be784  vtable for ProjectileFactory
0x008be794  vtable for AnaerobicAnimation
0x008be7d0  vtable for ExplosionAnimation
0x008be7f4  vtable for CApp
0x008be860  vtable for Door
0x008be8b4  vtable for Fire
0x008be94c  vtable for Room
0x008be974  vtable for Ship
0x008be984  vtable for Algae
0x008bea1c  vtable for Drone
0x008bea9c  vtable for Ghost
0x008beb8c  vtable for Store
0x008bebd8  vtable for Button
0x008bec18  vtable for CEvent
0x008bec84  vtable for DoorBox
0x008becd8  vtable for HackBox
0x008bed38  vtable for MindBox
0x008bed98  vtable for Missile
0x008bee70  vtable for PDSFire
0x008bef48  vtable for Shields
0x008bf014  vtable for StarMap
0x008bf060  vtable for Asteroid
0x008bf138  vtable for BossShip
0x008bf15c  vtable for CloneBox
0x008bf1bc  vtable for DroneBox
0x008bf20c  vtable for GameOver
0x008bf258  vtable for InputBox
0x008bf2a4  vtable for IonDrone
0x008bf444  vtable for Moddable
0x008bf464  vtable for Spreader<Fire>
0x008bf474  vtable for StoreBox
0x008bf4bc  vtable for Upgrades
0x008bf508  vtable for Blueprint
0x008bf528  vtable for ChoiceBox
0x008bf574  vtable for CrewDrone
0x008bf714  vtable for CrewLaser
0x008bf7ec  vtable for EngiAlien
0x008bf8dc  vtable for Equipment
0x008bf928  vtable for FTLButton
0x008bf968  vtable for OuterHull
0x008bf9e4  vtable for RockAlien
0x008bfad4  vtable for SlugAlien
0x008bfbc4  vtable for SystemBox
0x008bfc18  vtable for WeaponBox
0x008bfc68  vtable for __cxxabiv1::__forced_unwind
0x008bfc7c  vtable for __cxxabiv1::__class_type_info
0x008bfca8  vtable for __cxxabiv1::__foreign_exception
0x008bfcbc  vtable for __cxxabiv1::__si_class_type_info
0x008bfce8  vtable for __cxxabiv1::__vmi_class_type_info
0x008bfd8c  vtable for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008bfdcc  vtable for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008bfe0c  vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008bfe4c  vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008bfe8c  vtable for __gnu_cxx::recursive_init_error
0x008bfea0  vtable for __gnu_cxx::__concurrence_lock_error
0x008bfeb4  vtable for __gnu_cxx::__concurrence_unlock_error
0x008c0340  vtable for std::_V2::error_category
0x008c0368  vtable for std::locale::facet
0x008c0378  vtable for std::__cxx11::moneypunct<char, false>
0x008c03ac  vtable for std::__cxx11::moneypunct<char, true>
0x008c03e0  vtable for std::__cxx11::moneypunct<wchar_t, false>
0x008c0414  vtable for std::__cxx11::moneypunct<wchar_t, true>
0x008c0448  vtable for std::__cxx11::collate_byname<char>
0x008c0464  vtable for std::__cxx11::collate_byname<wchar_t>
0x008c0480  vtable for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008c04c0  vtable for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0500  vtable for std::__cxx11::messages_byname<char>
0x008c051c  vtable for std::__cxx11::messages_byname<wchar_t>
0x008c0538  vtable for std::__cxx11::numpunct_byname<char>
0x008c055c  vtable for std::__cxx11::numpunct_byname<wchar_t>
0x008c0580  vtable for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c05ac  vtable for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c05d8  vtable for std::__cxx11::moneypunct_byname<char, false>
0x008c060c  vtable for std::__cxx11::moneypunct_byname<char, true>
0x008c0640  vtable for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008c0674  vtable for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008c06a8  vtable for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c06e4  vtable for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0720  vtable for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c0748  vtable for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0770  vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c0798  vtable for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c07c0  vtable for std::__cxx11::collate<char>
0x008c07dc  vtable for std::__cxx11::collate<wchar_t>
0x008c07f8  vtable for std::__cxx11::messages<char>
0x008c0814  vtable for std::__cxx11::messages<wchar_t>
0x008c0830  vtable for std::__cxx11::numpunct<char>
0x008c0854  vtable for std::__cxx11::numpunct<wchar_t>
0x008c0878  vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c08a4  vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c08d0  vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c08e8  vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c0900  vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c0918  vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c0930  vtable for std::ios_base::failure
0x008c0944  vtable for std::iostream
0x008c0980  vtable for std::istream
0x008c09a8  vtable for std::ostream
0x008c09d0  vtable for std::bad_typeid
0x008c09e4  vtable for std::moneypunct<char, false>
0x008c0a18  vtable for std::moneypunct<char, true>
0x008c0a4c  vtable for std::moneypunct<wchar_t, false>
0x008c0a80  vtable for std::moneypunct<wchar_t, true>
0x008c0ab4  vtable for std::__timepunct<char>
0x008c0ac4  vtable for std::__timepunct<wchar_t>
0x008c0ad4  vtable for std::logic_error
0x008c0ae8  vtable for std::range_error
0x008c0afc  vtable for std::regex_error
0x008c0b10  vtable for std::ctype_byname<char>
0x008c0b40  vtable for std::ctype_byname<wchar_t>
0x008c0b80  vtable for std::domain_error
0x008c0b94  vtable for std::future_error
0x008c0ba8  vtable for std::length_error
0x008c0bbc  vtable for std::out_of_range
0x008c0bd0  vtable for std::system_error
0x008c0be4  vtable for std::bad_exception
0x008c0bf8  vtable for std::basic_filebuf<char, std::char_traits<char> >
0x008c0c38  vtable for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008c0c78  vtable for std::basic_fstream<char, std::char_traits<char> >
0x008c0cb4  vtable for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008c0cf0  vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008c0d18  vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008c0d40  vtable for std::runtime_error
0x008c0d54  vtable for std::basic_ifstream<char, std::char_traits<char> >
0x008c0d7c  vtable for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008c0da4  vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008c0de0  vtable for std::basic_ofstream<char, std::char_traits<char> >
0x008c0e08  vtable for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008c0e30  vtable for std::codecvt_byname<char, char, int>
0x008c0e5c  vtable for std::codecvt_byname<wchar_t, char, int>
0x008c0e88  vtable for std::collate_byname<char>
0x008c0ea4  vtable for std::collate_byname<wchar_t>
0x008c0ec0  vtable for std::overflow_error
0x008c0ed4  vtable for std::basic_streambuf<char, std::char_traits<char> >
0x008c0f14  vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008c0f54  vtable for std::messages_byname<char>
0x008c0f70  vtable for std::messages_byname<wchar_t>
0x008c0f8c  vtable for std::numpunct_byname<char>
0x008c0fb0  vtable for std::numpunct_byname<wchar_t>
0x008c0fd4  vtable for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c0ffc  vtable for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c1024  vtable for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c1038  vtable for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c104c  vtable for std::underflow_error
0x008c1060  vtable for std::__numpunct_cache<char>
0x008c1070  vtable for std::__numpunct_cache<wchar_t>
0x008c1080  vtable for std::invalid_argument
0x008c1094  vtable for std::__timepunct_cache<char>
0x008c10a4  vtable for std::__timepunct_cache<wchar_t>
0x008c10b4  vtable for std::bad_function_call
0x008c10c8  vtable for std::moneypunct_byname<char, false>
0x008c10fc  vtable for std::moneypunct_byname<char, true>
0x008c1130  vtable for std::moneypunct_byname<wchar_t, false>
0x008c1164  vtable for std::moneypunct_byname<wchar_t, true>
0x008c1198  vtable for std::__moneypunct_cache<char, false>
0x008c11a8  vtable for std::__moneypunct_cache<char, true>
0x008c11b8  vtable for std::__moneypunct_cache<wchar_t, false>
0x008c11c8  vtable for std::__moneypunct_cache<wchar_t, true>
0x008c11d8  vtable for std::__codecvt_utf8_base<char32_t>
0x008c1204  vtable for std::__codecvt_utf8_base<char16_t>
0x008c1230  vtable for std::__codecvt_utf8_base<wchar_t>
0x008c125c  vtable for std::__codecvt_utf16_base<char32_t>
0x008c1288  vtable for std::__codecvt_utf16_base<char16_t>
0x008c12b4  vtable for std::__codecvt_utf16_base<wchar_t>
0x008c12e0  vtable for std::bad_array_new_length
0x008c12f4  vtable for std::__ctype_abstract_base<char>
0x008c1334  vtable for std::__ctype_abstract_base<wchar_t>
0x008c1374  vtable for std::__codecvt_abstract_base<char32_t, char, int>
0x008c13a0  vtable for std::__codecvt_abstract_base<char16_t, char, int>
0x008c13cc  vtable for std::__codecvt_abstract_base<char, char, int>
0x008c13f8  vtable for std::__codecvt_abstract_base<wchar_t, char, int>
0x008c1424  vtable for std::__codecvt_utf8_utf16_base<char32_t>
0x008c1450  vtable for std::__codecvt_utf8_utf16_base<char16_t>
0x008c147c  vtable for std::__codecvt_utf8_utf16_base<wchar_t>
0x008c14a8  vtable for std::ctype<char>
0x008c14d8  vtable for std::ctype<wchar_t>
0x008c1518  vtable for std::codecvt<char32_t, char, int>
0x008c1544  vtable for std::codecvt<char16_t, char, int>
0x008c1570  vtable for std::codecvt<char, char, int>
0x008c159c  vtable for std::codecvt<wchar_t, char, int>
0x008c15c8  vtable for std::collate<char>
0x008c15e4  vtable for std::collate<wchar_t>
0x008c1600  vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c163c  vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c1678  vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c16a8  vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c16d8  vtable for std::bad_cast
0x008c16ec  vtable for std::ios_base
0x008c16fc  vtable for std::messages<char>
0x008c1718  vtable for std::messages<wchar_t>
0x008c1734  vtable for std::numpunct<char>
0x008c1758  vtable for std::numpunct<wchar_t>
0x008c177c  vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c17a4  vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c17cc  vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c17e0  vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c17f4  vtable for std::bad_alloc
0x008c1808  vtable for std::basic_ios<char, std::char_traits<char> >
0x008c1818  vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008c1828  vtable for std::exception
0x008c183c  vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c1854  vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c186c  vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c1884  vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c189c  vtable for std::type_info
0x008c4ba8  _RUNTIME_PSEUDO_RELOC_LIST_END__
0x008c4ba8  _RUNTIME_PSEUDO_RELOC_LIST__
0x008c4ba8  _rt_psrelocs_end
0x008c4ba8  _rt_psrelocs_start
0x008c5000  _bss_start__
0x008c5020  p_theApp
0x008c5040  SHIP_BLUEPRINTS
0x008c5140  _ZL15SHIP_BLUEPRINTS
0x008c5240  _ZL15SHIP_BLUEPRINTS
0x008c5340  TutorialManager::Tutorial
0x008c5520  _ZL15SHIP_BLUEPRINTS
0x008c5620  NebulaCloud::OnRender(GL_Color)::lightning
0x008c5624  NebulaCloud::OnRender(GL_Color)::bright_image
0x008c5628  NebulaCloud::OnRender(GL_Color)::storm_image
0x008c562c  NebulaCloud::OnRender(GL_Color)::image
0x008c5630  guard variable for NebulaCloud::OnRender(GL_Color)::lightning
0x008c5638  guard variable for NebulaCloud::OnRender(GL_Color)::bright_image
0x008c5640  guard variable for NebulaCloud::OnRender(GL_Color)::storm_image
0x008c5648  guard variable for NebulaCloud::OnRender(GL_Color)::image
0x008c5660  _ZL15SHIP_BLUEPRINTS
0x008c5760  COLOR_GREEN
0x008c5770  COLOR_RED
0x008c5780  AchievementTracker::Tracker
0x008c5820  _ZL15SHIP_BLUEPRINTS
0x008c5910  COLOR_BUTTON_SELECT
0x008c5920  COLOR_YELLOW
0x008c5930  COLOR_WHITE
0x008c5940  _ZZN10BeamWeaponC4E6PointfiiS0_S0_iP10TargetablefE4side
0x008c5950  COLOR_BLUE_ION
0x008c5960  _ZL11COLOR_GREEN
0x008c5970  _ZL9COLOR_RED
0x008c5980  ScoreKeeper::Keeper
0x008c6ce0  _ZL15SHIP_BLUEPRINTS
0x008c6dd0  COLOR_BUTTON_TEXT
0x008c6de0  _ZL12COLOR_YELLOW
0x008c6df0  _ZL11COLOR_WHITE
0x008c6e00  _ZL9COLOR_RED
0x008c6e10  COLOR_PURPLE_HACKING
0x008c6e20  _ZL12COLOR_YELLOW
0x008c6e30  ShipGraph::ship_graphs
0x008c6e40  CrewMemberFactory::Factory
0x008c6e80  _ZL15SHIP_BLUEPRINTS
0x008c6f80  ShipObject::shipInfoList
0x008c6fa0  CrewMember::iDeathCount
0x008c6fc0  _ZL15SHIP_BLUEPRINTS
0x008c70b0  _ZL11COLOR_GREEN
0x008c70c0  _ZL9COLOR_RED
0x008c70d0  COLOR_CB_BLUE
0x008c70e0  _ZL12COLOR_YELLOW
0x008c70f0  COLOR_GRAY
0x008c7100  _ZL11COLOR_WHITE
0x008c7120  Ship::doorSheetLarge
0x008c7124  Ship::doorSheet
0x008c7140  ShipManager::OnRender(bool, bool)::tracker
0x008c7160  guard variable for ShipManager::OnRender(bool, bool)::tracker
0x008c7180  _ZL15SHIP_BLUEPRINTS
0x008c7280  DebugHelper::CrashCatcher(_EXCEPTION_POINTERS*)::buffer
0x008c72a0  DebugHelper::CrashCatcher(_EXCEPTION_POINTERS*)::symbolBuffer
0x008c73b7  DebugHelper::DebugInit()::didInit
0x008c73b8  std::__ioinit
0x008c73c0  COLOR_BUTTON_ON
0x008c73d0  _ZL11COLOR_WHITE
0x008c73e0  _ZL17COLOR_BUTTON_TEXT
0x008c73f0  _ZL15COLOR_BUTTON_ON
0x008c7400  SystemControl::drone_position
0x008c7408  SystemControl::weapon_position
0x008c7410  powerBarCache
0x008c7430  _ZL17COLOR_BUTTON_TEXT
0x008c7440  _ZL15COLOR_BUTTON_ON
0x008c7450  _ZL11COLOR_GREEN
0x008c7460  COLOR_CB_WHITE
0x008c7470  _ZL11COLOR_WHITE
0x008c7480  _ZL15SHIP_BLUEPRINTS
0x008c7580  _ZL15SHIP_BLUEPRINTS
0x008c7670  _ZL17COLOR_BUTTON_TEXT
0x008c7680  _ZL15COLOR_BUTTON_ON
0x008c7690  _ZL20COLOR_PURPLE_HACKING
0x008c76a0  _ZL11COLOR_WHITE
0x008c76c0  MouseControl::Mouse
0x008c7830  _ZL11COLOR_WHITE
0x008c7840  _ZL19COLOR_BUTTON_SELECT
0x008c7850  _ZL15COLOR_BUTTON_ON
0x008c7860  _ZL11COLOR_WHITE
0x008c7880  enableAdvancedLoc
0x008c7888  infoBoxLoc
0x008c7890  advancedOffButtonLoc
0x008c7898  advancedOnButtonLoc
0x008c78a0  showButtonLoc
0x008c78a8  randomLoc
0x008c78b0  listButtonLoc
0x008c78b8  selectBoxLoc
0x008c78c0  nameButtonLoc
0x008c78c8  hardButtonLoc
0x008c78d0  normalButtonLoc
0x008c78d8  easyButtonLoc
0x008c78e0  startButtonLoc
0x008c78e8  repairingLoc2
0x008c78f0  repairingLoc1
0x008c78f8  typingLoc
0x008c7900  walkingManLoc
0x008c7908  noDronesLoc
0x008c7910  noWeaponsLoc
0x008c7918  shipNameLoc
0x008c7920  advancedTitleLoc
0x008c7928  achievementsTitleLoc
0x008c7930  augmentsTitleLoc
0x008c7938  dronesTitleLoc
0x008c7940  weaponsTitleLoc
0x008c7948  crewTitleLoc
0x008c7950  layoutTitleLoc
0x008c7958  shipTitleLoc
0x008c7960  _ZL15SHIP_BLUEPRINTS
0x008c7a50  _ZL17COLOR_BUTTON_TEXT
0x008c7a60  _ZL19COLOR_BUTTON_SELECT
0x008c7a70  _ZL15COLOR_BUTTON_ON
0x008c7a80  _ZL17COLOR_BUTTON_TEXT
0x008c7a90  _ZL11COLOR_GREEN
0x008c7aa0  _ZL9COLOR_RED
0x008c7ab0  _ZL13COLOR_CB_BLUE
0x008c7ac0  _ZL11COLOR_WHITE
0x008c7ad0  isCharAllowed(int, TextInput::AllowedCharType)::supported_chars
0x008c7af0  guard variable for isCharAllowed(int, TextInput::AllowedCharType)::supported_chars
0x008c7b00  _ZL12COLOR_YELLOW
0x008c7b10  COLOR_RED_WARNING
0x008c7b20  _ZL11COLOR_WHITE
0x008c7b30  WeaponBox::charge_on
0x008c7b34  WeaponBox::charge_off
0x008c7b38  WeaponBox::charge_use
0x008c7b3c  WeaponBox::clock_on
0x008c7b40  WeaponBox::clock_off
0x008c7b44  WeaponBox::arrow_on
0x008c7b48  WeaponBox::arrow_off
0x008c7b4c  WeaponBox::missileIcon
0x008c7b50  _ZL20COLOR_PURPLE_HACKING
0x008c7b60  COLOR_BLACK
0x008c7b70  _ZL12COLOR_YELLOW
0x008c7b80  ArmamentBox::RenderBox(bool, bool)::tracker
0x008c7ba0  guard variable for ArmamentBox::RenderBox(bool, bool)::tracker
0x008c7bb0  _ZL11COLOR_WHITE
0x008c7bc0  _ZL15SHIP_BLUEPRINTS
0x008c7cb0  _ZL17COLOR_BUTTON_TEXT
0x008c7cc0  _ZL15COLOR_BUTTON_ON
0x008c7ce0  _ZL14COLOR_BLUE_ION
0x008c7cf0  _ZL11COLOR_WHITE
0x008c7d00  _ZL15SHIP_BLUEPRINTS
0x008c7df0  _ZL19COLOR_BUTTON_SELECT
0x008c7e00  _ZL15COLOR_BUTTON_ON
0x008c7e10  COLOR_BUTTON_OFF
0x008c7e20  UnlockArrow::arrowImagesLoaded
0x008c7e24  UnlockArrow::arrows
0x008c7e40  ShipButton::achievementImages
0x008c7e68  ShipButton::achievementBoxSelected
0x008c7e6c  ShipButton::achievementBox
0x008c7e70  ShipButton::OnRender()::lit_lock
0x008c7e74  ShipButton::OnRender()::unlit_lock
0x008c7e78  guard variable for ShipButton::OnRender()::lit_lock
0x008c7e80  guard variable for ShipButton::OnRender()::unlit_lock
0x008c7ea0  _ZL15SHIP_BLUEPRINTS
0x008c7f90  _ZL17COLOR_BUTTON_TEXT
0x008c7fa0  _ZL19COLOR_BUTTON_SELECT
0x008c7fb0  _ZL11COLOR_BLACK
0x008c7fc0  _ZL11COLOR_WHITE
0x008c7fe0  CommandGui::RenderStatic()::full_focus
0x008c7fe4  CommandGui::UpdateShake()::change
0x008c7fec  CommandGui::UpdateShake()::current
0x008c7ff4  CommandGui::UpdateShake()::desired
0x008c7ffc  CommandGui::NewLocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<ChoiceText, std::allocator<ChoiceText> >, ResourceEvent, bool)::longest_choice
0x008c8000  guard variable for CommandGui::UpdateShake()::change
0x008c8008  guard variable for CommandGui::UpdateShake()::current
0x008c8010  guard variable for CommandGui::UpdateShake()::desired
0x008c8020  _ZL15SHIP_BLUEPRINTS
0x008c8110  _ZL17COLOR_RED_WARNING
0x008c8120  _ZL14COLOR_BLUE_ION
0x008c8130  _ZL11COLOR_WHITE
0x008c8140  _ZL17COLOR_BUTTON_TEXT
0x008c8150  _ZL15COLOR_BUTTON_ON
0x008c8160  _ZL11COLOR_GREEN
0x008c8170  _ZL9COLOR_RED
0x008c8180  _ZL11COLOR_WHITE
0x008c8190  _ZL15COLOR_BUTTON_ON
0x008c81a0  _ZL12COLOR_YELLOW
0x008c81b0  _ZL11COLOR_WHITE
0x008c81c0  _ZL15SHIP_BLUEPRINTS
0x008c82b0  _ZL17COLOR_BUTTON_TEXT
0x008c82c0  _ZL15COLOR_BUTTON_ON
0x008c82d0  _ZL11COLOR_GREEN
0x008c82e0  _ZL14COLOR_CB_WHITE
0x008c8300  _ZL15COLOR_BUTTON_ON
0x008c8310  _ZL17COLOR_RED_WARNING
0x008c8320  _ZL11COLOR_WHITE
0x008c8330  _ZL17COLOR_BUTTON_TEXT
0x008c8340  _ZL15COLOR_BUTTON_ON
0x008c8350  _ZL17COLOR_RED_WARNING
0x008c8360  _ZL20COLOR_PURPLE_HACKING
0x008c8370  _ZL17COLOR_BUTTON_TEXT
0x008c8380  _ZL15COLOR_BUTTON_ON
0x008c8390  _ZL16COLOR_BUTTON_OFF
0x008c83a0  _ZL17COLOR_RED_WARNING
0x008c83b0  _ZL11COLOR_WHITE
0x008c83c0  _ZL15COLOR_BUTTON_ON
0x008c83d0  _ZL11COLOR_WHITE
0x008c83e0  _ZL15SHIP_BLUEPRINTS
0x008c84d0  _ZL15COLOR_BUTTON_ON
0x008c84e0  InfoBox::detailsBarOn
0x008c84f0  InfoBox::detailsBarOff
0x008c8500  InfoBox::scrapIcon
0x008c8504  InfoBox::detailsBoxRight
0x008c8508  InfoBox::detailsBoxCenter
0x008c850c  InfoBox::detailsBoxLeft
0x008c8510  _ZL15COLOR_BUTTON_ON
0x008c8520  _ZL11COLOR_GREEN
0x008c8530  _ZL11COLOR_WHITE
0x008c8540  WeaponControl::beam_piece_red
0x008c8544  WeaponControl::beam_piece_yellow
0x008c8550  _ZL19COLOR_BUTTON_SELECT
0x008c8560  _ZL15COLOR_BUTTON_ON
0x008c8570  _ZL16COLOR_BUTTON_OFF
0x008c8580  _ZL17COLOR_RED_WARNING
0x008c8590  DroneBox::droneIcon
0x008c85a0  _ZL20COLOR_PURPLE_HACKING
0x008c85c0  _ZL15SHIP_BLUEPRINTS
0x008c86b0  _ZL17COLOR_BUTTON_TEXT
0x008c86c0  _ZL11COLOR_WHITE
0x008c86e0  _ZL15SHIP_BLUEPRINTS
0x008c87d0  _ZL17COLOR_RED_WARNING
0x008c87e0  _ZL20COLOR_PURPLE_HACKING
0x008c87f0  COLOR_BLUE_SHIELD
0x008c8800  _ZL11COLOR_GREEN
0x008c8810  _ZL11COLOR_WHITE
0x008c8820  languageList
0x008c8840  _ZL15SHIP_BLUEPRINTS
0x008c8930  _ZL17COLOR_BUTTON_TEXT
0x008c8940  COLOR_YELLOW_PLAIN
0x008c8950  _ZL12COLOR_YELLOW
0x008c8960  _ZL10COLOR_GRAY
0x008c8970  _ZL11COLOR_WHITE
0x008c8980  _ZL17COLOR_BUTTON_TEXT
0x008c8990  _ZL19COLOR_BUTTON_SELECT
0x008c89a0  _ZL15COLOR_BUTTON_ON
0x008c89b0  _ZL16COLOR_BUTTON_OFF
0x008c89c0  CEvent::lastEventTime
0x008c89e0  TranslateSILKey(int)::keymap
0x008c8c28  TranslateSILKey(int)::initted
0x008c8c40  freetype::canBreakLine(int, int)::no_end
0x008c8c58  freetype::canBreakLine(int, int)::no_begin
0x008c8c70  guard variable for freetype::canBreakLine(int, int)::no_end
0x008c8c78  guard variable for freetype::canBreakLine(int, int)::no_begin
0x008c8c80  freetype::textCache
0x008c8ca0  Settings::settings
0x008c8d38  Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::initted
0x008c8d40  Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::key_names
0x008cb098  guard variable for Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::key_names
0x008cb0a0  AnimationControl::Animations
0x008cb100  FileHelper::currentFile
0x008cb104  statsFileReadPos
0x008cb108  saveFileReadPos
0x008cb10c  statsFileData
0x008cb118  saveFileData
0x008cb140  forceAntialias
0x008cb144  colorTints
0x008cb150  currentColor
0x008cb160  matrix_stack_top
0x008cb180  matrix_stack
0x008cb580  modelview_matrix
0x008cb5c0  stencilStack
0x008cb5cc  stencilState
0x008cb5d8  scissorStack
0x008cb5e4  primTypeForRender
0x008cb5e8  verticesForRender
0x008cb600  CFPS::FPSControl
0x008cb640  EventSystem::EventManager
0x008cb658  ftl_log(char const*, ...)::logfile
0x008cb65c  primitiveCache
0x008cb680  ResourceControl::GlobalResources
0x008cb77c  ResourceControl::GetChineseFont(int)::font
0x008cb7a0  Globals::RNG
0x008cb7c0  Globals::Library
0x008cb820  SoundControl::Sounds
0x008cb900  _ZL17COLOR_RED_WARNING
0x008cb920  EventGenerator::Generator
0x008cbaa0  itemStrings[abi:cxx11]
0x008cbb00  resourceStrings[abi:cxx11]
0x008cbb60  EventsParser::Parser
0x008cbba4  EventsParser::GetEventName[abi:cxx11]()::i
0x008cbba8  text_data
0x008cbbc0  _ZL15SHIP_BLUEPRINTS
0x008cbcb0  _ZL17COLOR_BUTTON_TEXT
0x008cbcc0  _ZL15COLOR_BUTTON_ON
0x008cbcd0  _ZL17COLOR_RED_WARNING
0x008cbce0  STARMAP_GRAY
0x008cbcf0  STARMAP_PURPLE
0x008cbd00  STARMAP_RED
0x008cbd10  STARMAP_GREEN
0x008cbd20  _ZL11COLOR_GREEN
0x008cbd30  _ZL12COLOR_YELLOW
0x008cbd40  _ZL10COLOR_GRAY
0x008cbd50  _ZL11COLOR_WHITE
0x008cbd60  BlueprintManager::Blueprints
0x008cbe80  BlueprintManager::skillIcons
0x008cbec0  BlueprintManager::GetSystemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cbfa0  BlueprintManager::GetItemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc060  BlueprintManager::GetAugmentBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc140  BlueprintManager::GetWeaponBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc360  BlueprintManager::GetDroneBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc498  guard variable for BlueprintManager::GetSystemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4a0  guard variable for BlueprintManager::GetItemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4a8  guard variable for BlueprintManager::GetAugmentBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4b0  guard variable for BlueprintManager::GetWeaponBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4b8  guard variable for BlueprintManager::GetDroneBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4c0  _ZL9text_data
0x008cc4e0  _ZL11COLOR_GREEN
0x008cc4f0  _ZL14COLOR_CB_WHITE
0x008cc500  _ZL13COLOR_CB_BLUE
0x008cc510  _ZL12COLOR_YELLOW
0x008cc520  StatusEffect::GetStormEffect()::storm
0x008cc530  StatusEffect::GetNebulaEffect()::nebula
0x008cc540  guard variable for StatusEffect::GetStormEffect()::storm
0x008cc548  guard variable for StatusEffect::GetNebulaEffect()::nebula
0x008cc560  _ZL15SHIP_BLUEPRINTS
0x008cc660  Shields::shieldsDownPrimitive
0x008cc670  _ZL11COLOR_GREEN
0x008cc680  _ZL11COLOR_WHITE
0x008cc6a0  _ZL15SHIP_BLUEPRINTS
0x008cc7a0  _ZL15SHIP_BLUEPRINTS
0x008cc8a0  ShipSystem::glowInfo[abi:cxx11]
0x008cc8b8  ShipSystem::fireImage
0x008cc8bc  ShipSystem::sabotageImage
0x008cc8c0  ShipSystem::lockHack
0x008cc8c4  ShipSystem::lockBlue
0x008cc8c8  ShipSystem::lockWhite
0x008cc8cc  ShipSystem::manningBarLargeIon
0x008cc8d0  ShipSystem::manningBarLargeOn
0x008cc8d4  ShipSystem::manningBarLargeOff
0x008cc8d8  ShipSystem::manningBarIon
0x008cc8dc  ShipSystem::manningBarOn
0x008cc8e0  ShipSystem::manningBarOff
0x008cc8e4  ShipSystem::manningYellow
0x008cc8e8  ShipSystem::manningGreen
0x008cc8ec  ShipSystem::manningWhite
0x008cc8f0  ShipSystem::manningOutline
0x008cc8f4  ShipSystem::glowBlue
0x008cc8f8  ShipSystem::glowRed
0x008cc8fc  ShipSystem::glowWhite
0x008cc900  _ZZN10ShipSystemC4EiiiiE10colorNames
0x008cc978  _ZGVZN10ShipSystemC4EiiiiE10colorNames
0x008cc980  _ZL20COLOR_PURPLE_HACKING
0x008cc990  COLOR_ORANGE
0x008cc9a0  COLOR_RED_PLAIN
0x008cc9b0  _ZL14COLOR_BLUE_ION
0x008cc9c0  COLOR_PURPLE
0x008cc9d0  _ZL11COLOR_GREEN
0x008cc9e0  _ZL9COLOR_RED
0x008cc9f0  _ZL14COLOR_CB_WHITE
0x008cca00  COLOR_CB_ORANGE
0x008cca10  COLOR_CB_RED
0x008cca20  _ZL12COLOR_YELLOW
0x008cca30  _ZL10COLOR_GRAY
0x008cca40  PowerManager::powerManagers
0x008cca60  TeleportSystem::OnRenderFloor()::selected
0x008cca64  TeleportSystem::OnRenderFloor()::on
0x008cca68  TeleportSystem::OnRenderFloor()::off
0x008cca70  guard variable for TeleportSystem::OnRenderFloor()::selected
0x008cca78  guard variable for TeleportSystem::OnRenderFloor()::on
0x008cca80  guard variable for TeleportSystem::OnRenderFloor()::off
0x008ccaa0  _ZL15SHIP_BLUEPRINTS
0x008cd020  warned.4607
0x008d87e0  buffer.5190
0x008d97e0  dummy_resinfo.5260
0x008d9840  accum_buffer.4570
0x008db898  dialect.4037
0x008db89b  language.4036
0x008dbb60  buf.116245
0x008dc740  warned.91122
0x008dc748  attr.91121
0x008dc778  checked.91862
0x008dc780  buf.116040
0x008dc7a8  buf.115880
0x00ef5540  jdt_attr.92947
0x00ef678c  create_mutex.90962
0x00ef6790  sys_thread_key_created.90961
0x00ef6798  warned.91880
0x00ef67c0  buf.91898
0x00ef6f3c  was_init.67161
0x00ef6f7c  s_mbstate.25797
0x00ef6f80  internal_mbstate.25781
0x00ef6f84  internal_mbstate.25770
0x00ef7f00  _bss_end__
0x00ef9000  _head_lib32_libdbghelp_a
0x00ef9014  _head_lib32_libgdi32_a
0x00ef9028  _head_lib32_libkernel32_a
0x00ef903c  _head_lib32_libmsvcrt_a
0x00ef9050  _head_lib32_libole32_a
0x00ef9064  _head_lib32_libpsapi_a
0x00ef9078  _head_lib32_libshell32_a
0x00ef908c  _head_lib32_libuser32_a
0x00ef90a0  _head_lib32_libwinmm_a
0x00ef90b4  _head_BASS_dll
0x00ef90c8  _head_BASSMIX_dll
0x00ef90f0  hname
0x00ef910c  hname
0x00ef9120  hname
0x00ef92a0  hname
0x00ef9460  hname
0x00ef9478  hname
0x00ef9484  hname
0x00ef9494  hname
0x00ef9538  hname
0x00ef95c8  _IAT_start__
0x00ef95c8  _imp__StackWalk@36
0x00ef95c8  fthunk
0x00ef95cc  _imp__SymCleanup@4
0x00ef95d0  _imp__SymFunctionTableAccess@8
0x00ef95d4  _imp__SymGetModuleBase@8
0x00ef95d8  _imp__SymGetSymFromAddr@16
0x00ef95dc  _imp__SymInitialize@12
0x00ef95e4  _imp__ChoosePixelFormat@8
0x00ef95e4  fthunk
0x00ef95e8  _imp__DescribePixelFormat@16
0x00ef95ec  _imp__SetPixelFormat@12
0x00ef95f0  _imp__SwapBuffers@4
0x00ef95f8  _imp__CloseHandle@4
0x00ef95f8  fthunk
0x00ef95fc  _imp__CreateDirectoryA@8
0x00ef9600  _imp__CreateDirectoryW@8
0x00ef9604  _imp__CreateEventA@16
0x00ef9608  _imp__CreateFileW@28
0x00ef960c  _imp__CreateSemaphoreA@16
0x00ef9610  _imp__CreateSemaphoreW@16
0x00ef9614  _imp__CreateThread@24
0x00ef9618  _imp__DeleteCriticalSection@4
0x00ef961c  _imp__DeleteFileW@4
0x00ef9620  _imp__DuplicateHandle@28
0x00ef9624  _imp__EnterCriticalSection@4
0x00ef9628  _imp__ExitProcess@4
0x00ef962c  _imp__ExitThread@4
0x00ef9630  _imp__FindClose@4
0x00ef9634  _imp__FindFirstFileW@8
0x00ef9638  _imp__FindNextFileW@8
0x00ef963c  _imp__FlushFileBuffers@4
0x00ef9640  _imp__FormatMessageA@28
0x00ef9644  _imp__FormatMessageW@28
0x00ef9648  _imp__FreeEnvironmentStringsW@4
0x00ef964c  _imp__FreeLibrary@4
0x00ef9650  _imp__GetCommandLineW@0
0x00ef9654  _imp__GetCurrentDirectoryW@8
0x00ef9658  _imp__GetCurrentProcess@0
0x00ef965c  _imp__GetCurrentProcessId@0
0x00ef9660  _imp__GetCurrentThread@0
0x00ef9664  _imp__GetCurrentThreadId@0
0x00ef9668  _imp__GetEnvironmentStringsW@0
0x00ef966c  _imp__GetEnvironmentVariableW@12
0x00ef9670  _imp__GetExitCodeThread@8
0x00ef9674  _imp__GetFileAttributesW@4
0x00ef9678  _imp__GetFileSize@8
0x00ef967c  _imp__GetLastError@0
0x00ef9680  _imp__GetModuleFileNameA@12
0x00ef9684  _imp__GetModuleFileNameW@12
0x00ef9688  _imp__GetModuleHandleA@4
0x00ef968c  _imp__GetModuleHandleW@4
0x00ef9690  _imp__GetProcAddress@8
0x00ef9694  _imp__GetProcessAffinityMask@12
0x00ef9698  _imp__GetProcessHeap@0
0x00ef969c  _imp__GetStartupInfoA@4
0x00ef96a0  _imp__GetStdHandle@4
0x00ef96a4  _imp__GetSystemDefaultUILanguage@0
0x00ef96a8  _imp__GetSystemTime@4
0x00ef96ac  _imp__GetSystemTimeAsFileTime@4
0x00ef96b0  _imp__GetTempPathW@8
0x00ef96b4  _imp__GetThreadPriority@4
0x00ef96b8  _imp__GetTickCount@0
0x00ef96bc  _imp__GetTimeZoneInformation@4
0x00ef96c0  _imp__GetUserDefaultUILanguage@0
0x00ef96c4  _imp__HeapAlloc@12
0x00ef96c8  _imp__HeapFree@12
0x00ef96cc  _imp__InitializeCriticalSection@4
0x00ef96d0  _imp__IsDBCSLeadByteEx@8
0x00ef96d4  _imp__LeaveCriticalSection@4
0x00ef96d8  _imp__LoadLibraryW@4
0x00ef96dc  _imp__MoveFileExW@12
0x00ef96e0  _imp__MultiByteToWideChar@24
0x00ef96e4  _imp__QueryPerformanceCounter@4
0x00ef96e8  _imp__QueryPerformanceFrequency@4
0x00ef96ec  _imp__RaiseException@16
0x00ef96f0  _imp__ReadFile@20
0x00ef96f4  _imp__ReleaseSemaphore@12
0x00ef96f8  _imp__RemoveDirectoryW@4
0x00ef96fc  _imp__ResetEvent@4
0x00ef9700  _imp__ResumeThread@4
0x00ef9704  _imp__SetCurrentDirectoryW@4
0x00ef9708  _imp__SetEnvironmentVariableW@8
0x00ef970c  _imp__SetErrorMode@4
0x00ef9710  _imp__SetEvent@4
0x00ef9714  _imp__SetFileAttributesW@8
0x00ef9718  _imp__SetFilePointer@16
0x00ef971c  _imp__SetLastError@4
0x00ef9720  _imp__SetThreadAffinityMask@8
0x00ef9724  _imp__SetThreadExecutionState@4
0x00ef9728  _imp__SetThreadPriority@8
0x00ef972c  _imp__SetUnhandledExceptionFilter@4
0x00ef9730  _imp__Sleep@4
0x00ef9734  _imp__SwitchToThread@0
0x00ef9738  _imp__SystemTimeToFileTime@8
0x00ef973c  _imp__TerminateProcess@8
0x00ef9740  _imp__TlsAlloc@0
0x00ef9744  _imp__TlsFree@4
0x00ef9748  _imp__TlsGetValue@4
0x00ef974c  _imp__TlsSetValue@8
0x00ef9750  _imp__TryEnterCriticalSection@4
0x00ef9754  _imp__UnhandledExceptionFilter@4
0x00ef9758  _imp__VerSetConditionMask@16
0x00ef975c  _imp__VerifyVersionInfoW@16
0x00ef9760  _imp__VirtualProtect@16
0x00ef9764  _imp__VirtualQuery@12
0x00ef9768  _imp__WaitForSingleObject@8
0x00ef976c  _imp__WideCharToMultiByte@32
0x00ef9770  _imp__WriteFile@20
0x00ef9778  _imp____dllonexit
0x00ef9778  fthunk
0x00ef977c  _imp____doserrno
0x00ef9780  _imp____getmainargs
0x00ef9788  _imp____lconv_init
0x00ef9794  _imp____set_app_type
0x00ef9798  _imp____setusermatherr
0x00ef97a0  _imp___amsg_exit
0x00ef97a4  _imp___cexit
0x00ef97a8  _imp___errno
0x00ef97ac  _imp___exit
0x00ef97b0  _imp___filelengthi64
0x00ef97b4  _imp___fileno
0x00ef97bc  _imp___fstat64
0x00ef97c0  _imp___initterm
0x00ef97c8  _imp___lock
0x00ef97cc  _imp___lseeki64
0x00ef97d4  _imp___setjmp3
0x00ef97d8  _imp___snprintf
0x00ef97dc  _imp___snwprintf
0x00ef97e0  _imp___time32
0x00ef97e4  _imp___localtime32
0x00ef97e8  _imp___strnicmp
0x00ef97ec  _imp__calloc
0x00ef97f0  _imp__exit
0x00ef97f4  _imp__fclose
0x00ef97f8  _imp__fflush
0x00ef97fc  _imp__fgetpos
0x00ef9800  _imp__fopen
0x00ef9804  _imp__fprintf
0x00ef9808  _imp__fputc
0x00ef980c  _imp__fputs
0x00ef9810  _imp__fread
0x00ef9814  _imp__free
0x00ef9818  _imp__freopen
0x00ef981c  _imp__frexp
0x00ef9820  _imp__fseek
0x00ef9824  _imp__fsetpos
0x00ef9828  _imp__ftell
0x00ef982c  _imp__fwprintf
0x00ef9830  _imp__fwrite
0x00ef9834  _imp__getc
0x00ef9838  _imp__getenv
0x00ef983c  _imp__getwc
0x00ef9840  _imp__isspace
0x00ef9844  _imp__iswctype
0x00ef9848  _imp__localeconv
0x00ef984c  _imp__log10
0x00ef9850  _imp__malloc
0x00ef9854  _imp__memchr
0x00ef9858  _imp__memcmp
0x00ef985c  _imp__memcpy
0x00ef9860  _imp__memmove
0x00ef9864  _imp__memset
0x00ef9868  _imp__putc
0x00ef986c  _imp__putwc
0x00ef9870  _imp__qsort
0x00ef9874  _imp__raise
0x00ef9878  _imp__rand
0x00ef987c  _imp__realloc
0x00ef9880  _imp__setlocale
0x00ef9884  _imp__setvbuf
0x00ef9888  _imp__signal
0x00ef988c  _imp__sprintf
0x00ef9890  _imp__srand
0x00ef9894  _imp__strchr
0x00ef9898  _imp__strcmp
0x00ef989c  _imp__strcoll
0x00ef98a0  _imp__strcpy
0x00ef98a4  _imp__strcspn
0x00ef98a8  _imp__strerror
0x00ef98ac  _imp__strftime
0x00ef98b0  _imp__strlen
0x00ef98b4  _imp__strncmp
0x00ef98b8  _imp__strncpy
0x00ef98bc  _imp__strrchr
0x00ef98c0  _imp__strspn
0x00ef98c4  _imp__strstr
0x00ef98c8  _imp__strtol
0x00ef98cc  _imp__strtoul
0x00ef98d0  _imp__strxfrm
0x00ef98d4  _imp___unlock
0x00ef98d8  _imp___write
0x00ef98dc  _imp__abort
0x00ef98e0  _imp__atof
0x00ef98e4  _imp__atoi
0x00ef98e8  _imp__tan
0x00ef98ec  _imp__tolower
0x00ef98f0  _imp__toupper
0x00ef98f4  _imp__towlower
0x00ef98f8  _imp__towupper
0x00ef98fc  _imp__ungetc
0x00ef9900  _imp__ungetwc
0x00ef9904  _imp__vfprintf
0x00ef9908  _imp__wcscoll
0x00ef990c  _imp__wcscpy
0x00ef9910  _imp__wcsftime
0x00ef9914  _imp__wcslen
0x00ef9918  _imp__wcsxfrm
0x00ef991c  _imp__longjmp
0x00ef9920  _imp__write
0x00ef9924  _imp__read
0x00ef9928  _imp__itoa
0x00ef992c  _imp__fileno
0x00ef9930  _imp__fdopen
0x00ef9938  _imp__CoCreateInstance@20
0x00ef9938  fthunk
0x00ef993c  _imp__CoInitializeEx@8
0x00ef9940  _imp__CoTaskMemFree@4
0x00ef9944  _imp__CoUninitialize@0
0x00ef9948  _imp__PropVariantClear@4
0x00ef9950  _imp__EnumProcessModules@16
0x00ef9950  fthunk
0x00ef9954  _imp__GetModuleInformation@16
0x00ef995c  _imp__CommandLineToArgvW@8
0x00ef995c  fthunk
0x00ef9960  _imp__SHGetFolderPathW@20
0x00ef9964  _imp__ShellExecuteA@24
0x00ef996c  _imp__AdjustWindowRectEx@16
0x00ef996c  fthunk
0x00ef9970  _imp__ChangeDisplaySettingsExA@20
0x00ef9974  _imp__ClientToScreen@8
0x00ef9978  _imp__ClipCursor@4
0x00ef997c  _imp__CreateIconFromResourceEx@28
0x00ef9980  _imp__CreateWindowExW@48
0x00ef9984  _imp__DefWindowProcW@16
0x00ef9988  _imp__DestroyWindow@4
0x00ef998c  _imp__DispatchMessageW@4
0x00ef9990  _imp__EnumDisplayDevicesA@16
0x00ef9994  _imp__EnumDisplaySettingsA@12
0x00ef9998  _imp__GetClientRect@8
0x00ef999c  _imp__GetDC@4
0x00ef99a0  _imp__GetMessageW@16
0x00ef99a4  _imp__GetRawInputData@20
0x00ef99a8  _imp__GetRawInputDeviceInfoW@16
0x00ef99ac  _imp__GetRawInputDeviceList@12
0x00ef99b0  _imp__GetSystemMetrics@4
0x00ef99b4  _imp__GetWindowLongW@8
0x00ef99b8  _imp__GetWindowRect@8
0x00ef99bc  _imp__LoadCursorA@8
0x00ef99c0  _imp__LoadImageA@24
0x00ef99c4  _imp__MapVirtualKeyA@8
0x00ef99c8  _imp__MessageBoxA@16
0x00ef99cc  _imp__MessageBoxW@16
0x00ef99d0  _imp__PeekMessageW@20
0x00ef99d4  _imp__PostMessageW@16
0x00ef99d8  _imp__RegisterClassExW@4
0x00ef99dc  _imp__RegisterRawInputDevices@12
0x00ef99e0  _imp__ReleaseDC@8
0x00ef99e4  _imp__ScreenToClient@8
0x00ef99e8  _imp__SendMessageW@16
0x00ef99ec  _imp__SetCursorPos@8
0x00ef99f0  _imp__SetWindowLongW@12
0x00ef99f4  _imp__SetWindowPos@28
0x00ef99f8  _imp__SetWindowTextW@8
0x00ef99fc  _imp__ShowCursor@4
0x00ef9a00  _imp__ShowWindow@8
0x00ef9a04  _imp__TranslateMessage@4
0x00ef9a08  _imp__UnregisterClassA@8
0x00ef9a10  _imp__timeBeginPeriod@4
0x00ef9a10  fthunk
0x00ef9a14  _imp__timeGetDevCaps@8
0x00ef9a18  _imp__timeGetTime@0
0x00ef9a1c  _imp__waveOutClose@4
0x00ef9a20  _imp__waveOutGetDevCapsA@12
0x00ef9a24  _imp__waveOutGetNumDevs@0
0x00ef9a28  _imp__waveOutOpen@24
0x00ef9a2c  _imp__waveOutPrepareHeader@12
0x00ef9a30  _imp__waveOutReset@4
0x00ef9a34  _imp__waveOutUnprepareHeader@12
0x00ef9a38  _imp__waveOutWrite@12
0x00ef9a40  _imp__BASS_ChannelFlags
0x00ef9a44  _imp__BASS_ChannelIsActive
0x00ef9a48  _imp__BASS_ChannelPause
0x00ef9a4c  _imp__BASS_ChannelPlay
0x00ef9a50  _imp__BASS_ChannelRemoveSync
0x00ef9a54  _imp__BASS_ChannelSetAttribute
0x00ef9a58  _imp__BASS_ChannelSetPosition
0x00ef9a5c  _imp__BASS_ChannelSetSync
0x00ef9a60  _imp__BASS_ChannelSlideAttribute
0x00ef9a64  _imp__BASS_ChannelStop
0x00ef9a68  _imp__BASS_ErrorGetCode
0x00ef9a6c  _imp__BASS_Free
0x00ef9a70  _imp__BASS_Init
0x00ef9a74  _imp__BASS_SampleGetChannel
0x00ef9a78  _imp__BASS_SampleGetInfo
0x00ef9a7c  _imp__BASS_SampleLoad
0x00ef9a80  _imp__BASS_SampleSetInfo
0x00ef9a84  _imp__BASS_SetConfig
0x00ef9a88  _imp__BASS_StreamCreateFile
0x00ef9a90  _imp__BASS_Mixer_ChannelRemove
0x00ef9a94  _imp__BASS_Mixer_StreamAddChannel
0x00ef9a98  _imp__BASS_Mixer_StreamCreate
0x00ef9aa0  _IAT_end__
0x00efad84  _lib32_libdbghelp_a_iname
0x00efada0  _lib32_libgdi32_a_iname
0x00efaf28  _lib32_libkernel32_a_iname
0x00efb0f4  _lib32_libmsvcrt_a_iname
0x00efb114  _lib32_libole32_a_iname
0x00efb128  _lib32_libpsapi_a_iname
0x00efb140  _lib32_libshell32_a_iname
0x00efb1ec  _lib32_libuser32_a_iname
0x00efb224  _lib32_libwinmm_a_iname
0x00efb27c  BASS_dll_iname
0x00efb294  BASSMIX_dll_iname
0x00efc000  __crt_xc_start__
0x00efc00c  __crt_xc_end__
0x00efc00c  __crt_xi_start__
0x00efc01c  __crt_xi_end__
0x00efc01c  __crt_xl_start__
0x00efc02c  __crt_xp_end__
0x00efc02c  __crt_xp_start__
0x00efc02c  __crt_xt_end__
0x00efc02c  __crt_xt_start__
0x00efd000  __tls_start__
0x00efd020  __tls_end__
No frame selected.
Argument required (filename to set it to.).
The current logfile is "gdb.txt".
Currently logging to "gdb.txt".
Logs will be appended to the log file.
Output is being sent only to the log file.
Currently logging to "gdb.txt".
Logs will be appended to the log file.
Output is being logged and displayed.
Currently logging to "gdb.txt".
Logs will be appended to the log file.
Output is being sent only to the log file.
Currently logging to "gdb.txt".
Logs will be appended to the log file.
Output is being sent only to the log file.
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
No frame selected.
All defined functions:

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/crtexe.c:
int WinMainCRTStartup(void);
int mainCRTStartup(void);
static void __mingw_invalidParameterHandler(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, 
    uintptr_t);
static int __tmainCRTStartup(void);
static int pre_c_init(void);
static void pre_cpp_init(void);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CApp.cpp:
void CApp::CApp();
void CApp::GenInputEvents();
void CApp::OnCleanup();
void CApp::OnEvent(InputEvent const*);
int CApp::OnExecute();
void CApp::OnExit();
bool CApp::OnInit();
void CApp::OnInputBlur();
void CApp::OnInputFocus();
void CApp::OnKeyDown(int);
void CApp::OnKeyUp(int);
void CApp::OnLButtonDown(int, int);
void CApp::OnLButtonUp(int, int);
void CApp::OnLanguageChange();
void CApp::OnLoop();
void CApp::OnMButtonDown(int, int);
void CApp::OnMouseMove(int, int, int, int, bool, bool, bool);
void CApp::OnRButtonDown(int, int);
void CApp::OnRButtonUp(int, int);
void CApp::OnRender();
void CApp::OnRequestExit();
void CApp::OnResume();
void CApp::OnSuspend();
void CApp::OnTextEvent(CEvent::TextEvent);
void CApp::OnTextInput(int);
void CApp::OnTouchCancel(int, int, int, int, int);
void CApp::OnTouchDown(int, int, int);
void CApp::ParseArgs(int, char const**);
bool CApp::Restart();
bool CApp::SetupWindow();
Point CApp::TranslateMouse(int, int);
void CApp::UpdateFullScreen();
void CApp::UpdateWindowSettings();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CApp.h:
void CApp::~CApp();
void CApp::~CApp();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CEvent.h:
void CEvent::OnWindowResize(int, int);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CApp.cpp:
void rapidxml::parse_error_handler(char const*, void*);
int sil_main(int, char const**);
static void SILEventHandler(EventType const*);
static void _GLOBAL__sub_I__ZN8rapidxml19parse_error_handlerEPKcPv();
static void __tcf_1();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/BossShip.cpp:
void BossShip::BossShip(SpaceManager*);
void BossShip::ClearLocation();
bool BossShip::Defeated();
LocationEvent *BossShip::GetEvent();
LocationEvent *BossShip::GetSubEvent();
bool BossShip::IncomingFire();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/BossShip.h:
bool BossShip::IsBoss();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/BossShip.cpp:
void BossShip::LoadBoss(int);
void BossShip::OnLoop();
void BossShip::Restart();
void BossShip::SaveBoss(int);
void BossShip::StartStage();
void BossShip::~BossShip();
void BossShip::~BossShip();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipManager.h:
bool ShipManager::GetIsDying();
bool ShipManager::GetIsJumping();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<StatusEffect, std::allocator<StatusEffect> >::_M_emplace_back_aux<StatusEffect const&>(StatusEffect const&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/BossShip.cpp:
static void _GLOBAL__sub_I__ZN8BossShipC2EP12SpaceManager();
static void __tcf_0();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
string Blueprint::GetNameLong[abi:cxx11]() const;
string Blueprint::GetNameShort[abi:cxx11]() const;
int Blueprint::GetType() const;
void Blueprint::RenderIcon(float) const;
void Blueprint::~Blueprint();
void Blueprint::~Blueprint();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.cpp:
void CompleteShip::AddBoarders(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool);
CrewMember *CompleteShip::AddCrewMember(CrewBlueprint, bool);
void CompleteShip::AddCrewMember(CrewMember*, int);
CrewMember *CompleteShip::AddCrewMember(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool);
Drone *CompleteShip::AddDrone(DroneBlueprint const*, int);
void CompleteShip::CompleteShip(SpaceManager*, bool, int);
int CompleteShip::CountCrew(bool);
bool CompleteShip::DeadCrew();
std::vector<CrewMember*, std::allocator<CrewMember*> > CompleteShip::GetTeleportingParty();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.h:
bool CompleteShip::IncomingFire();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.cpp:
void CompleteShip::InitiateTeleport(int, int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.h:
bool CompleteShip::IsBoss();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.cpp:
void CompleteShip::Jump();
void CompleteShip::KillRandomCrew();
void CompleteShip::LoadState(int);
void CompleteShip::OnCleanup();
void CompleteShip::OnInit(ShipBlueprint const*, int);
void CompleteShip::OnLoop();
void CompleteShip::OnRender();
void CompleteShip::OnRenderShip(bool, bool);
void CompleteShip::OnRenderSpace();
void CompleteShip::PauseLoop();
void CompleteShip::Restart();
void CompleteShip::SaveState(int);
void CompleteShip::SetEnemyShip(CompleteShip*);
void CompleteShip::SetShip(ShipManager*);
std::vector<CrewMember*, std::allocator<CrewMember*> > CompleteShip::TeleportCrew(int, bool);
void CompleteShip::~CompleteShip();
void CompleteShip::~CompleteShip();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
bool CrewMember::IsDead();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_tree.h:
void std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, PowerProfile>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, PowerProfile> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, PowerProfile> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, PowerProfile> >*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CompleteShip.cpp:
static void _GLOBAL__sub_I__ZN12CompleteShipC2EP12SpaceManagerbi();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.cpp:
void AsteroidGenerator::AsteroidGenerator();
Projectile *AsteroidGenerator::GetNextAsteroid();
void AsteroidGenerator::GetNextState();
void AsteroidGenerator::Initialize(int, int, bool);
void AsteroidGenerator::LoadAsteroids(int);
void AsteroidGenerator::OnLoop();
void AsteroidGenerator::SaveAsteroids(int);
void AsteroidGenerator::SetNumShips(int);
void AsteroidGenerator::UpdateState();
static void _GLOBAL__sub_I__ZN17AsteroidGeneratorC2Ev();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int Projectile::GetSelfId();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.cpp:
void ProjectileFactory::ClearAiming();
void ProjectileFactory::ClearProjectiles();
void ProjectileFactory::Fire(std::vector<Pointf, std::allocator<Pointf> >, int);
bool ProjectileFactory::FireNextShot();
void ProjectileFactory::ForceCoolup();
int ProjectileFactory::GetBoostLevel();
Projectile *ProjectileFactory::GetProjectile();
bool ProjectileFactory::IsChargedGoal();
Projectile *ProjectileFactory::LoadProjectile(int);
void ProjectileFactory::LoadState(int);
int ProjectileFactory::NumTargetsRequired();
void ProjectileFactory::OnRender(float, bool);
void ProjectileFactory::ProjectileFactory(WeaponBlueprint const*, int);
bool ProjectileFactory::QueuedShots();
bool ProjectileFactory::ReadyToFire();
void ProjectileFactory::ReconnectProjectile(Projectile*);
void ProjectileFactory::RenderChargeBar(float);
void ProjectileFactory::Restart();
void ProjectileFactory::SaveProjectile(Projectile*, int);
void ProjectileFactory::SaveState(int);
void ProjectileFactory::SelectChargeGoal();
void ProjectileFactory::SetAutoFire(bool);
void ProjectileFactory::SetCooldownModifier(float);
void ProjectileFactory::SetCurrentShip(Targetable*);
void ProjectileFactory::SetHacked(int);
void ProjectileFactory::SetInvisibleMode();
void ProjectileFactory::SetMount(WeaponMount);
void ProjectileFactory::SetPowered(bool);
int ProjectileFactory::SpendMissiles();
int ProjectileFactory::StringToWeapon(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void ProjectileFactory::Update();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
void ProjectileFactory::~ProjectileFactory();
void ProjectileFactory::~ProjectileFactory();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipObject.h:
void ShipObject::~ShipObject();
void ShipObject::~ShipObject();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
bool Targetable::IsCloaked();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<Pointf, std::allocator<Pointf> >::_M_emplace_back_aux<Pointf>(Pointf&&);
std::vector<Pointf, std::allocator<Pointf> > &std::vector<Pointf, std::allocator<Pointf> >::operator=(std::vector<Pointf, std::allocator<Pointf> > const&);
void std::vector<Projectile*, std::allocator<Projectile*> >::_M_emplace_back_aux<Projectile* const&>(Projectile* const&);
std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&);
std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > &std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::operator=(std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > const&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.cpp:
static void _GLOBAL__sub_I__ZN17ProjectileFactoryC2EPK15WeaponBlueprinti();
static void __tcf_0();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.cpp:
void HandAnimation::HandAnimation();
void HandAnimation::OnInit();
void HandAnimation::OnRender();
void HandAnimation::OnUpdate();
void HandAnimation::Start(Point, Point);
void HandAnimation::Stop();
void TutorialManager::AdvanceState();
void TutorialManager::AdvanceState();
bool TutorialManager::AllowJumping();
bool TutorialManager::AllowUpgrades();
bool TutorialManager::CheckState();
LocationEvent *TutorialManager::GetEvent();
bool TutorialManager::IsState(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
bool TutorialManager::IsStateAfter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
bool TutorialManager::IsStateBefore(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void TutorialManager::LinkMap(StarMap*);
void TutorialManager::LoadTutorial();
bool TutorialManager::MouseClick();
void TutorialManager::MouseMove(int, int);
void TutorialManager::OnInit(ShipManager*, CommandGui*, CrewControl*, Upgrades*, CombatControl*, SystemControl*, TabbedWindow*);
void TutorialManager::OnLanguageChange();
void TutorialManager::OnLoop();
void TutorialManager::OnRender();
bool TutorialManager::OnTouch(TouchAction, int, int, int, int, int);
bool TutorialManager::QuitTutorial();
bool TutorialManager::Running();
void TutorialManager::Start();
const int TutorialManager::StateValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void TutorialManager::Stop();
void TutorialManager::TutorialManager();
void TutorialManager::UpdateDescBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);
void TutorialManager::~TutorialManager();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
rapidxml::xml_node<char> *rapidxml::xml_document<char>::parse_element<0>(char*&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_tree.h:
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::iterator std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&);
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::iterator std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&);
void std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >*);
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::iterator std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&);
void std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >*);
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_map.h:
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, StateInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::mapped_type &std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, StateInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, StateInfo> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<ArrowDescription, std::allocator<ArrowDescription> >::_M_emplace_back_aux<ArrowDescription>(ArrowDescription&&);
std::vector<ArrowDescription, std::allocator<ArrowDescription> > &std::vector<ArrowDescription, std::allocator<ArrowDescription> >::operator=(std::vector<ArrowDescription, std::allocator<ArrowDescription> > const&);
void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.cpp:
static TextString GetText(rapidxml::xml_node<char>*);
static void _GLOBAL__sub_I__ZN13HandAnimationC2Ev();
static void __tcf_0();
static void __tcf_1();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.cpp:
bool NebulaCloud::CreateNewCloud();
void NebulaCloud::NebulaCloud(Point, bool);
void NebulaCloud::OnLoop();
void NebulaCloud::OnRender(GL_Color);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int Projectile::GetOwnerId();
int Projectile::GetSpaceId();
void Projectile::Kill();
void Projectile::SetMovingTarget(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
int SpaceDrone::GetOwnerId();
int SpaceDrone::GetSpaceId();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.cpp:
void SpaceManager::AddProjectile(Projectile*);
void SpaceManager::AddShip(ShipManager*);
void SpaceManager::Clear();
void SpaceManager::ClearEnvironment();
void SpaceManager::ClearProjectiles();
bool SpaceManager::DangerousEnvironment();
GL_Color SpaceManager::GetColorTint();
float SpaceManager::GetFlashOpacity();
bool SpaceManager::GetScreenShake();
SpaceDrone *SpaceManager::GetSelectedDrone(int, int, int);
void SpaceManager::LoadSpace(int);
void SpaceManager::MouseMove(int, int, int);
void SpaceManager::OnInit();
void SpaceManager::OnLoop();
void SpaceManager::OnLoopNebulas();
void SpaceManager::OnRenderAsteroids(int, float);
void SpaceManager::OnRenderBackground();
void SpaceManager::OnRenderFleet();
void SpaceManager::OnRenderForeground();
void SpaceManager::OnRenderProjectiles(int, int);
void SpaceManager::Restart();
void SpaceManager::SaveSpace(int);
void SpaceManager::SetDangerZone(int);
void SpaceManager::SetFireLevel(bool);
void SpaceManager::SetNebula(bool);
void SpaceManager::SetPlanetaryDefense(bool, int);
void SpaceManager::SetPulsarLevel(bool);
void SpaceManager::SetStorm(bool);
void SpaceManager::SpaceManager();
void SpaceManager::StartAsteroids(int, bool);
ImageDesc SpaceManager::SwitchBackground(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);
ImageDesc SpaceManager::SwitchBeacon();
void SpaceManager::SwitchImages(ImageDesc, ImageDesc, ImageDesc);
ImageDesc SpaceManager::SwitchPlanet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);
void SpaceManager::TransferProjectile(Projectile*);
void SpaceManager::UpdatePDS();
void SpaceManager::UpdatePlanetImage();
void SpaceManager::UpdateProjectile(Projectile*);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<Animation, std::allocator<Animation> >::_M_emplace_back_aux<Animation>(Animation&&);
std::vector<Animation, std::allocator<Animation> >::iterator std::vector<Animation, std::allocator<Animation> >::_M_erase(__gnu_cxx::__normal_iterator<Animation*, std::vector<Animation, std::allocator<Animation> > >);
void std::vector<NebulaCloud, std::allocator<NebulaCloud> >::_M_emplace_back_aux<NebulaCloud>(NebulaCloud&&);
void std::vector<NebulaCloud, std::allocator<NebulaCloud> >::_M_insert_aux<NebulaCloud>(__gnu_cxx::__normal_iterator<NebulaCloud*, std::vector<NebulaCloud, std::allocator<NebulaCloud> > >, NebulaCloud&&);
void std::vector<Point, std::allocator<Point> >::_M_emplace_back_aux<Point const&>(Point const&);
void std::vector<Projectile*, std::allocator<Projectile*> >::_M_emplace_back_aux<Projectile*>(Projectile*&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.cpp:
static void _GLOBAL__sub_I__ZN12SpaceManagerC2Ev();
static void __tcf_0();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void BoarderPodDrone::BlowUp(bool);
void BoarderPodDrone::BoarderPodDrone(int, int, DroneBlueprint const*);
bool BoarderPodDrone::CanBeDeployed();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool BoarderPodDrone::CanBeRecovered();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
CollisionResponse BoarderPodDrone::CollisionMoving(Pointf, Pointf, Damage, bool);
bool BoarderPodDrone::Destroyed();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
CrewDrone *BoarderPodDrone::GetBoardingDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
string BoarderPodDrone::GetTooltip[abi:cxx11]();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool BoarderPodDrone::HideUnderOwner();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void BoarderPodDrone::LoadState(int);
void BoarderPodDrone::OnLoop();
void BoarderPodDrone::PickDestination();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void BoarderPodDrone::RandomizeStartingPosition();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
bool BoarderPodDrone::RecallOnJump();
void BoarderPodDrone::RenderDrone();
void BoarderPodDrone::SaveState(int);
void BoarderPodDrone::SetCurrentLocation(Pointf);
void BoarderPodDrone::SetDeployed(bool);
void BoarderPodDrone::SetDestroyed(bool, bool);
void BoarderPodDrone::SetHacked(int);
void BoarderPodDrone::SetMovementTarget(Targetable*);
void BoarderPodDrone::SetPowered(bool);
void BoarderPodDrone::~BoarderPodDrone();
void BoarderPodDrone::~BoarderPodDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
CollisionResponse Collideable::CollisionMoving(Pointf, Pointf, Damage, bool);
bool Collideable::DamageArea(Pointf, Damage, bool);
bool Collideable::DamageBeam(Pointf, Pointf, Damage);
bool Collideable::DamageShield(Pointf, Damage, bool);
bool Collideable::GetDodged();
int Collideable::GetOwnerId();
int Collideable::GetSelfId();
int Collideable::GetSpaceId();
Pointf Collideable::GetSuperShield();
void Collideable::SetTempVision(Pointf);
bool Collideable::ValidTargetLocation(Pointf);
void Collideable::~Collideable();
void Collideable::~Collideable();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
bool CombatDrone::CanBeDeployed();
void CombatDrone::CombatDrone(int, int, DroneBlueprint const*);
string CombatDrone::GetTooltip[abi:cxx11]();
bool CombatDrone::HasTarget();
void CombatDrone::LoadState(int);
void CombatDrone::OnLoop();
void CombatDrone::PickDestination();
void CombatDrone::PickTarget();
void CombatDrone::RenderDrone();
void CombatDrone::RenderDrone();
void CombatDrone::SaveState(int);
void CombatDrone::SetWeaponTarget(Targetable*);
bool CombatDrone::ValidTargetObject(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void CombatDrone::~CombatDrone();
void CombatDrone::~CombatDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
void CrewDrone::SetCurrentShip(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void DefenseDrone::DefenseDrone(int, int, DroneBlueprint const*);
string DefenseDrone::GetTooltip[abi:cxx11]();
bool DefenseDrone::HasTarget();
void DefenseDrone::OnLoop();
void DefenseDrone::PickDestination();
void DefenseDrone::PickTarget();
void DefenseDrone::RenderDrone();
void DefenseDrone::SetDeployed(bool);
void DefenseDrone::SetMovementTarget(Targetable*);
void DefenseDrone::SetPowered(bool);
void DefenseDrone::SetWeaponTarget(Targetable*);
bool DefenseDrone::ValidTargetObject(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void DefenseDrone::~DefenseDrone();
void DefenseDrone::~DefenseDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.h:
bool Drone::CanBeDeployed();
bool Drone::Destroyed();
bool Drone::GetDeployed();
int Drone::GetDroneHealth();
Slot Drone::GetDroneSlot();
std::__cxx11::string Drone::GetName[abi:cxx11]();
bool Drone::GetPowered();
int Drone::GetRequiredPower();
Point Drone::GetWorldLocation();
bool Drone::NeedsRoom();
void Drone::OnDestoy();
void Drone::OnInit();
void Drone::RenderIcon();
void Drone::SetCurrentShip(int);
void Drone::SetInstantPowered();
void Drone::SetPowered(bool);
void Drone::SetSlot(int, int);
void Drone::SetWorldLocation(Point);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
Projectile *ShipRepairDrone::GetNextProjectile();
string ShipRepairDrone::GetTooltip[abi:cxx11]();
bool ShipRepairDrone::HasTarget();
void ShipRepairDrone::OnLoop();
void ShipRepairDrone::RenderDrone();
void ShipRepairDrone::SetDeployed(bool);
void ShipRepairDrone::SetMovementTarget(Targetable*);
void ShipRepairDrone::SetWeaponTarget(Targetable*);
void ShipRepairDrone::ShipRepairDrone(int, int, DroneBlueprint const*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void ShipRepairDrone::~ShipRepairDrone();
void ShipRepairDrone::~ShipRepairDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::BlowUp(bool);
bool SpaceDrone::BlowingUp();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool SpaceDrone::CanBeRecovered();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
CollisionResponse SpaceDrone::CollisionMoving(Pointf, Pointf, Damage, bool);
bool SpaceDrone::ContainsPoint(int, int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool SpaceDrone::DamageArea(Pointf, Damage, bool);
bool SpaceDrone::DamageBeam(Pointf, Pointf, Damage);
CrewDrone *SpaceDrone::GetBoardingDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
Projectile *SpaceDrone::GetNextProjectile();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
Pointf SpaceDrone::GetRandomTargettingPoint(bool);
int SpaceDrone::GetSelfId();
Globals::Ellipse SpaceDrone::GetShieldShape();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
Pointf SpaceDrone::GetSpeed();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool SpaceDrone::GetStunned();
string SpaceDrone::GetTooltip[abi:cxx11]();
float SpaceDrone::GetWeaponCooldown();
Pointf SpaceDrone::GetWorldCenterPoint();
bool SpaceDrone::HasTarget();
bool SpaceDrone::HideUnderOwner();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::Ionize(int);
void SpaceDrone::LoadState(int);
void SpaceDrone::MouseMove(int, int);
void SpaceDrone::OnLoop();
void SpaceDrone::OnRender(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void SpaceDrone::PickDestination();
void SpaceDrone::PickTarget();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::RandomizeStartingPosition();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool SpaceDrone::RecallOnJump();
void SpaceDrone::RenderDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::SaveState(int);
void SpaceDrone::SetCurrentLocation(Pointf);
void SpaceDrone::SetDeployed(bool);
void SpaceDrone::SetDestination(float, float);
void SpaceDrone::SetMovementTarget(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void SpaceDrone::SetWeaponTarget(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::SpaceDrone(int, int, DroneBlueprint const*);
float SpaceDrone::UpdateAimingAngle(Pointf, float, float);
bool SpaceDrone::UpdateExplosion();
void SpaceDrone::UpdateLocation();
void SpaceDrone::UpdatePoweredDown();
bool SpaceDrone::ValidTarget();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
bool SpaceDrone::ValidTargetObject(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
void SpaceDrone::~SpaceDrone();
void SpaceDrone::~SpaceDrone();
Projectile *SuperShieldDrone::GetNextProjectile();
string SuperShieldDrone::GetTooltip[abi:cxx11]();
float SuperShieldDrone::GetWeaponCooldown();
bool SuperShieldDrone::HasTarget();
void SuperShieldDrone::LoadState(int);
void SuperShieldDrone::OnLoop();
void SuperShieldDrone::RenderDrone();
void SuperShieldDrone::SaveState(int);
void SuperShieldDrone::SetMovementTarget(Targetable*);
void SuperShieldDrone::SetShieldSystem(Shields*);
void SuperShieldDrone::SetWeaponTarget(Targetable*);
void SuperShieldDrone::SuperShieldDrone(int, int, DroneBlueprint const*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
void SuperShieldDrone::~SuperShieldDrone();
void SuperShieldDrone::~SuperShieldDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
void Targetable::DamageTarget(Pointf, Damage);
std::vector<Pointf, std::allocator<Pointf> > Targetable::GetAllTargettingPoints();
bool Targetable::GetIsDying();
bool Targetable::GetIsJumping();
int Targetable::GetOwnerId();
Pointf Targetable::GetRandomTargettingPoint(bool);
int Targetable::GetSelfId();
Globals::Rect Targetable::GetShape();
ShieldPower Targetable::GetShieldPower();
Globals::Ellipse Targetable::GetShieldShape();
int Targetable::GetSpaceId();
Pointf Targetable::GetSpeed();
Pointf Targetable::GetWorldCenterPoint();
bool Targetable::ValidTarget();
void Targetable::~Targetable();
void Targetable::~Targetable();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<float, std::allocator<float> >::_M_emplace_back_aux<float>(float&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
static void _GLOBAL__sub_I__ZN10SpaceDroneC2EiiPK14DroneBlueprint();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
void AchievementTracker::AchievementTracker();
bool AchievementTracker::CheckCrystalUnlock();
void AchievementTracker::CheckShipAchievements(int, bool);
void AchievementTracker::ForceUnlock(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int);
CAchievement *AchievementTracker::GetAchievement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
bool AchievementTracker::GetFlag(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
int AchievementTracker::GetFlagValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
std::vector<CAchievement*, std::allocator<CAchievement*> > AchievementTracker::GetShipAchievements(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
int AchievementTracker::GetShipMarker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void AchievementTracker::LoadAchievementDescriptions();
void AchievementTracker::LoadGame(int);
void AchievementTracker::LoadProfile(int, int);
void AchievementTracker::OnLanguageChange();
void AchievementTracker::OnLoop();
void AchievementTracker::OnRender();
void AchievementTracker::ResetFlags();
void AchievementTracker::SaveGame(int);
void AchievementTracker::SaveProfile(int);
void AchievementTracker::SetAchievement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool);
void AchievementTracker::SetFlag(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void AchievementTracker::SetInfoBox(CAchievement*, InfoBox*);
void AchievementTracker::SetSectorEight();
void AchievementTracker::SetTooltip(CAchievement*);
void AchievementTracker::SetVictoryAchievement();
void AchievementTracker::UnlockShip(int, int);
void AchievementTracker::WipeProfile();
void AchievementTracker::~AchievementTracker();
void CAchievement::CAchievement();
void CAchievement::OnRender(Point, int, bool);
void CAchievement::~CAchievement();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
string TextLibrary::FormatText<TextString>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, TextString);
string TextString::GetText[abi:cxx11]() const;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
rapidxml::xml_node<char> *rapidxml::xml_document<char>::parse_element<8>(char*&);
rapidxml::xml_node<char> *rapidxml::xml_document<char>::parse_node<8>(char*&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_tree.h:
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::iterator std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.tcc:
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<CAchievement*, std::allocator<CAchievement*> >::_M_emplace_back_aux<CAchievement* const&>(CAchievement* const&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
static void _GLOBAL__sub_I__ZN18AchievementTracker7TrackerE();
static void __tcf_0();
static void __tcf_1();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
void BeamWeapon::BeamWeapon(BeamWeapon const&);
void BeamWeapon::BeamWeapon(Pointf, int, int, Pointf, Pointf, int, Targetable*, float);
void BeamWeapon::CollisionCheck(Collideable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.h:
CollisionResponse BeamWeapon::CollisionMoving(Pointf, Pointf, Damage, bool);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
bool BeamWeapon::Dead();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.h:
void BeamWeapon::EnterDestinationSpace();
int BeamWeapon::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
void BeamWeapon::LoadProjectile(int);
void BeamWeapon::OnRenderSpecific(int);
void BeamWeapon::OnUpdate();
void BeamWeapon::SaveProjectile(int);
void BeamWeapon::SetMovingTarget(Targetable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.h:
void BeamWeapon::SetWeaponAnimation(WeaponAnimation*);
void BeamWeapon::~BeamWeapon();
void BeamWeapon::~BeamWeapon();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int Projectile::ForceRenderLayer();
Pointf Projectile::GetRandomTargettingPoint(bool);
Pointf Projectile::GetSpeed();
Pointf Projectile::GetWorldCenterPoint();
void Projectile::SetDamage(Damage);
void Projectile::SetDestinationSpace(int);
void Projectile::SetSpin(float);
bool Projectile::ValidTarget();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<Animation, std::allocator<Animation> >::_M_emplace_back_aux<Animation const&>(Animation const&);
void std::vector<Animation, std::allocator<Animation> >::emplace_back<Animation>(Animation&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BeamWeapon.cpp:
static void _GLOBAL__sub_I__ZN10BeamWeaponC2E6PointfiiS0_S0_iP10Targetablef();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool BoarderDrone::CanFight();
bool BoarderDrone::CanSabotage();
float BoarderDrone::GetDamageMultiplier();
int BoarderDrone::GetMaxHealth();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void BoarderDrone::Jump();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool BoarderDrone::ReadyToFight();
void BoarderDrone::~BoarderDrone();
void BoarderDrone::~BoarderDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
bool CrewAnimation::CustomDeath();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void CrewDrone::BlowUp(bool);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool CrewDrone::CanBurn();
bool CrewDrone::CanFight();
bool CrewDrone::CanMan();
bool CrewDrone::CanRepair();
bool CrewDrone::CanSabotage();
bool CrewDrone::CanStim();
bool CrewDrone::CanSuffocate();
bool CrewDrone::CanTeleport();
bool CrewDrone::CountForVictory();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void CrewDrone::CrewDrone(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, TextString const&, int, DroneBlueprint const*, CrewAnimation*);
bool CrewDrone::Destroyed();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool CrewDrone::Functional();
bool CrewDrone::GetControllable();
int CrewDrone::GetDroneHealth();
Slot CrewDrone::GetDroneSlot();
bool CrewDrone::GetIntruder();
int CrewDrone::GetMaxHealth();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
float CrewDrone::GetMoveSpeedMultipler();
Point CrewDrone::GetWorldLocation();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool CrewDrone::IsDrone();
void CrewDrone::Jump();
void CrewDrone::LoadState(int);
bool CrewDrone::NeedsRoom();
void CrewDrone::OnDestoy();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void CrewDrone::OnLoop();
void CrewDrone::OnRender(bool);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool CrewDrone::PermanentDeath();
bool CrewDrone::ProvidesVision();
bool CrewDrone::ReadyToFight();
void CrewDrone::SaveState(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void CrewDrone::SetDeployed(bool);
void CrewDrone::SetInstantPowered();
void CrewDrone::SetPowered(bool);
void CrewDrone::SetWorldLocation(Point);
bool CrewDrone::ShipDamage(float);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
void CrewDrone::~CrewDrone();
void CrewDrone::~CrewDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
void CrewMember::ActivatePower();
int CrewMember::BlockRoom();
bool CrewMember::ExactTarget();
bool CrewMember::FireFightingSoundEffect();
float CrewMember::GetDamageMultiplier();
float CrewMember::GetFireRepairMultiplier();
Point CrewMember::GetPosition() const;
std::pair<float, float> CrewMember::GetPowerCooldown();
int CrewMember::GetPriority();
float CrewMember::GetRepairSpeed();
Damage CrewMember::GetRoomDamage();
string CrewMember::GetSpecies[abi:cxx11]();
float CrewMember::GetSuffocationModifier();
string CrewMember::GetUniqueRepairing[abi:cxx11]();
bool CrewMember::HasSpecialPower();
bool CrewMember::InsideRoom(int);
bool CrewMember::IsAnaerobic();
bool CrewMember::IsCloned();
bool CrewMember::IsCrew();
bool CrewMember::IsTelepathic();
bool CrewMember::MultiShots();
bool CrewMember::OutOfGame();
bool CrewMember::PowerReady();
bool CrewMember::ProvidesPower();
void CrewMember::ResetPower();
bool CrewMember::ValidTarget(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.h:
bool Drone::CanBeRecovered();
bool Drone::GetStunned();
bool Drone::RecallOnJump();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
int IonDrone::BlockRoom();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool IonDrone::CanFight();
bool IonDrone::CanSabotage();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
int IonDrone::GetMaxHealth();
Damage IonDrone::GetRoomDamage();
void IonDrone::IonDrone(int, DroneBlueprint const*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
bool IonDrone::ReadyToFight();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void IonDrone::SetDeployed(bool);
void IonDrone::UpdateRepair();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
void IonDrone::~IonDrone();
void IonDrone::~IonDrone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
bool IonDroneAnimation::FireShot();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
int IonDroneAnimation::GetFiringFrame();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
void IonDroneAnimation::IonDroneAnimation(int, Pointf, bool);
void IonDroneAnimation::OnRender(float, int, bool);
void IonDroneAnimation::OnRenderProps();
void IonDroneAnimation::OnUpdateEffects();
void IonDroneAnimation::Restart();
void IonDroneAnimation::UpdateShooting();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
void IonDroneAnimation::~IonDroneAnimation();
void IonDroneAnimation::~IonDroneAnimation();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
bool RepairAnimation::FireShot();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.h:
int RepairAnimation::GetFiringFrame();
void RepairAnimation::~RepairAnimation();
void RepairAnimation::~RepairAnimation();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/CrewDrone.cpp:
static void _GLOBAL__sub_I__ZN9CrewDroneC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK10TextStringiPK14DroneBlueprintP13CrewAnimation();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.cpp:
void ScoreKeeper::AddCrew();
void ScoreKeeper::AddDefeatedShips();
void ScoreKeeper::AddExploredLocations();
void ScoreKeeper::AddScrapCollected(int);
void ScoreKeeper::AddStat(int, int);
void ScoreKeeper::AddTopScore(TopScore, int);
void ScoreKeeper::AddTopScore(TopScore, int);
int ScoreKeeper::AddTopScore(TopScore, std::vector<TopScore, std::allocator<TopScore> >&);
int ScoreKeeper::CalculateScore();
int ScoreKeeper::CalculateSectorScore();
void ScoreKeeper::CheckCrystalUnlock();
void ScoreKeeper::CheckTypes();
void ScoreKeeper::CycleLeft();
void ScoreKeeper::CycleRight();
string ScoreKeeper::GetShipBlueprint[abi:cxx11](int);
std::pair<int, int> ScoreKeeper::GetShipId(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
bool ScoreKeeper::GetShipUnlocked(int, int);
int ScoreKeeper::GetTopScore();
bool ScoreKeeper::KeyDown(int);
void ScoreKeeper::LoadCurrent(int, int);
void ScoreKeeper::LoadGame(int);
void ScoreKeeper::LoadVersionFour(int, int);
void ScoreKeeper::LoadVersionOne(int);
void ScoreKeeper::LoadVersionThree(int);
void ScoreKeeper::LoadVersionTwo(int);
void ScoreKeeper::MouseClick(int, int);
void ScoreKeeper::MouseMove(int, int);
void ScoreKeeper::OnInit();
void ScoreKeeper::OnRender(bool);
void ScoreKeeper::OnTouch(TouchAction, int, int, int, int, int);
void ScoreKeeper::Open(bool);
void ScoreKeeper::RenderTopScores(std::vector<TopScore, std::allocator<TopScore> >&, Point, int);
void ScoreKeeper::Reset();
void ScoreKeeper::Save(bool);
void ScoreKeeper::SaveGame(int);
void ScoreKeeper::SaveScores(int, std::vector<TopScore, std::allocator<TopScore> >&);
void ScoreKeeper::ScoreKeeper();
void ScoreKeeper::SetSector(int);
void ScoreKeeper::SetShipBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void ScoreKeeper::SetShipName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void ScoreKeeper::SetVictory(bool);
void ScoreKeeper::SetupTopShip(int);
void ScoreKeeper::UnlockShip(int, int, bool, bool);
void ScoreKeeper::UnlockShip(int, int, bool, bool);
void ScoreKeeper::UpdateCrewStat(SCrewStats);
void ScoreKeeper::WipeProfile(bool);
void ScoreKeeper::~ScoreKeeper();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
void TopScore::TopScore(TopScore const&);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.h:
void _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > * const, const char *, const std::allocator<char> &);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/basic_string.tcc:
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<GenericButton*, std::allocator<GenericButton*> >::_M_emplace_back_aux<GenericButton*>(GenericButton*&&);
void std::vector<TopScore, std::allocator<TopScore> >::_M_emplace_back_aux<TopScore const&>(TopScore const&);
void std::vector<TopScore, std::allocator<TopScore> >::_M_insert_aux<TopScore const&>(__gnu_cxx::__normal_iterator<TopScore*, std::vector<TopScore, std::allocator<TopScore> > >, TopScore const&);
void std::vector<TopScore, std::allocator<TopScore> >::_M_insert_aux<TopScore>(__gnu_cxx::__normal_iterator<TopScore*, std::vector<TopScore, std::allocator<TopScore> > >, TopScore&&);
void std::vector<std::pair<CAchievement*, Point>, std::allocator<std::pair<CAchievement*, Point> > >::_M_emplace_back_aux<std::pair<CAchievement*, Point> >(std::pair<CAchievement*, Point>&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
std::__cxx11::string to_string<int>(int const&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.cpp:
static void _GLOBAL__sub_I__ZN11ScoreKeeper6KeeperE();
static void __tcf_0();
static void __tcf_1();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BombProjectile.cpp:
void BombProjectile::BombProjectile(Pointf, int, int, Pointf);
void BombProjectile::CollisionCheck(Collideable*);
CollisionResponse BombProjectile::CollisionMoving(Pointf, Pointf, Damage, bool);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BombProjectile.h:
int BombProjectile::GetOwnerId();
int BombProjectile::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BombProjectile.cpp:
void BombProjectile::LoadProjectile(int);
void BombProjectile::OnRenderSpecific(int);
void BombProjectile::OnUpdate();
void BombProjectile::SaveProjectile(int);
void BombProjectile::~BombProjectile();
void BombProjectile::~BombProjectile();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void Projectile::SetWeaponAnimation(WeaponAnimation*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/BombProjectile.cpp:
static void _GLOBAL__sub_I__ZN14BombProjectileC2E6PointfiiS0_();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Missile.h:
int Missile::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Missile.cpp:
void Missile::Missile(Missile const&);
void Missile::Missile(Pointf, int, int, Pointf, float);
void Missile::OnRenderSpecific(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Missile.h:
void Missile::~Missile();
void Missile::~Missile();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Missile.cpp:
static void _GLOBAL__sub_I__ZN7MissileC2E6PointfiiS0_f();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.cpp:
bool HackingDrone::CanBeDeployed();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.h:
bool HackingDrone::CanBeRecovered();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.cpp:
Pointf HackingDrone::CheckAxis(Pointf, Pointf);
CollisionResponse HackingDrone::CollisionMoving(Pointf, Pointf, Damage, bool);
string HackingDrone::GetTooltip[abi:cxx11]();
void HackingDrone::HackingDrone(int, int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.h:
bool HackingDrone::HideUnderOwner();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.cpp:
void HackingDrone::LoadState(int);
void HackingDrone::OnLoop();
void HackingDrone::PickDestination();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.h:
void HackingDrone::RandomizeStartingPosition();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.cpp:
bool HackingDrone::RecallOnJump();
void HackingDrone::RenderDrone();
void HackingDrone::SaveState(int);
void HackingDrone::SetCurrentLocation(Pointf);
void HackingDrone::SetDeployed(bool);
void HackingDrone::SetDestroyed(bool, bool);
void HackingDrone::SetMovementTarget(Targetable*);
void HackingDrone::~HackingDrone();
void HackingDrone::~HackingDrone();

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/vector.tcc:
void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/HackingDrone.cpp:
static void _GLOBAL__sub_I__ZN12HackingDroneC2Eii();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void Asteroid::Asteroid(Pointf, int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int Asteroid::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void Asteroid::OnRenderSpecific(int);
void Asteroid::OnUpdate();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void Asteroid::~Asteroid();
void Asteroid::~Asteroid();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void CrewLaser::CrewLaser(Point, Pointf);
void CrewLaser::OnRender(GL_Color);
void CrewLaser::OnUpdate();
void CrewLaser::SetColor(int, int, int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void CrewLaser::~CrewLaser();
void CrewLaser::~CrewLaser();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void LaserBlast::ComputeHeading();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int LaserBlast::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void LaserBlast::LoadProjectile(int);
void LaserBlast::OnInit();
void LaserBlast::OnRenderSpecific(int);
void LaserBlast::OnUpdate();
void LaserBlast::SaveProjectile(int);
void LaserBlast::SetSpin(float);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void LaserBlast::~LaserBlast();
void LaserBlast::~LaserBlast();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void PDSFire::CollisionCheck(Collideable*);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
CollisionResponse PDSFire::CollisionMoving(Pointf, Pointf, Damage, bool);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
int PDSFire::ForceRenderLayer();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int PDSFire::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void PDSFire::LoadProjectile(int);
void PDSFire::OnRenderSpecific(int);
void PDSFire::OnUpdate();
void PDSFire::PDSFire(Point, int, Pointf);
void PDSFire::SaveProjectile(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void PDSFire::~PDSFire();
void PDSFire::~PDSFire();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
bool Projectile::AtTarget();
void Projectile::CollisionCheck(Collideable*);
CollisionResponse Projectile::CollisionMoving(Pointf, Pointf, Damage, bool);
void Projectile::ComputeHeading();
bool Projectile::Dead();
void Projectile::EnterDestinationSpace();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
int Projectile::GetType();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void Projectile::Initialize(WeaponBlueprint const*);
void Projectile::Initialize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);
void Projectile::LoadProjectile(int);
void Projectile::OnRender(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void Projectile::OnRenderSpecific(int);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
void Projectile::OnUpdate();
void Projectile::OnUpdate();
void Projectile::Projectile(Pointf, int, int, Pointf);
Pointf Projectile::RandomSidePoint();
Pointf Projectile::RandomSidePoint(int);
void Projectile::SaveProjectile(int);
void Projectile::SetTarget(Pointf);
bool Projectile::StartedDeath();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
void Projectile::~Projectile();
void Projectile::~Projectile();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.cpp:
static void _GLOBAL__sub_I__ZN10ProjectileC2E6PointfiiS0_();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/WeaponAnimation.cpp:
void WeaponAnimation::ComputeDirection();
void WeaponAnimation::Explode();
bool WeaponAnimation::FireShot();
Point WeaponAnimation::GetFireLocation();
Pointf WeaponAnimation::GetSlide();
void WeaponAnimation::LoadState(int);
void WeaponAnimation::OnInit();
void WeaponAnimation::OnRender(float);
void WeaponAnimation::RenderChargeBar(float);
void WeaponAnimation::RenderIcon();
void WeaponAnimation::SaveState(int);
void WeaponAnimation::SetBoostAnimation(Animation);
void WeaponAnimation::SetBoostLevel(int);
void WeaponAnimation::SetChargeImage(GL_Texture*);
void WeaponAnimation::SetChargedLevel(float);
void WeaponAnimation::SetDirection(int);
void WeaponAnimation::SetFireLevel(float);
void WeaponAnimation::SetFireTime(float);
void WeaponAnimation::SetHacked(int);
void WeaponAnimation::SetMirror(bool);
void WeaponAnimation::SetMount(WeaponMount);
void WeaponAnimation::SetPowered(bool);
void WeaponAnimation::SetRotation(bool);
bool WeaponAnimation::StartFire();
void WeaponAnimation::StopFiring();
void WeaponAnimation::Update();
void WeaponAnimation::WeaponAnimation();
void WeaponAnimation::WeaponAnimation(GL_Texture*, AnimationDescriptor, int, int, Point, Point);
static void _GLOBAL__sub_I__ZN15WeaponAnimationC2Ev();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.cpp:
void Drone::BlowUp(bool);
float Drone::GetRebuildProgress();
void Drone::LoadState(int);
void Drone::OnLoop();
bool Drone::Rebuilding();
void Drone::SaveState(int);
void Drone::SetDeployed(bool);
void Drone::SetDestroyed(bool, bool);
void Drone::SetHacked(int);
void Drone::UpdateRebuilding();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.h:
void Drone::~Drone();
void Drone::~Drone();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Drone.cpp:
static void _GLOBAL__sub_I__ZN5Drone12SetDestroyedEbb();

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.cpp:
bool ShipGraph::Adjacent(Point, Point);
bool ShipGraph::Adjacent(int, int, int, int);
void ShipGraph::ComputeCenter();
int ShipGraph::ConnectedGridSquares(Point, Point);
int ShipGraph::ConnectedGridSquares(int, int, int, int);
const Door *ShipGraph::ConnectingDoor(Point, Point);
const Door *ShipGraph::ConnectingDoor(int, int, int, int);
std::vector<int, std::allocator<int> > ShipGraph::ConnectivityDFS(int);
std::vector<int, std::allocator<int> > ShipGraph::ConnectivityDFSHelper(int, std::vector<int, std::allocator<int> >, int);
bool ShipGraph::ContainsPoint(int, int);
float ShipGraph::ConvertToLocalAngle(float);
Pointf ShipGraph::ConvertToLocalPosition(Pointf, bool);
float ShipGraph::ConvertToWorldAngle(float);
Pointf ShipGraph::ConvertToWorldPosition(Pointf);
Path ShipGraph::Dijkstra(Point, Point, int);
int ShipGraph::DoorCount(int);
Path ShipGraph::FindPath(Point, Point, int);
Slot ShipGraph::GetClosestSlot(Point, int, bool);
std::vector<int, std::allocator<int> > ShipGraph::GetConnectedRooms(int, bool);
std::vector<Door const*, std::allocator<Door const*> > ShipGraph::GetDoors(int);
Point ShipGraph::GetIntoRoom(int, Point);
int ShipGraph::GetNumSlots(int);
const bool ShipGraph::GetRoomBlackedOut(int) const;
const Pointf ShipGraph::GetRoomCenter(int);
std::vector<int, std::allocator<int> > ShipGraph::GetRoomNeighbors(int);
const float ShipGraph::GetRoomOxygen(int) const;
const Globals::Rect ShipGraph::GetRoomShape(int);
int ShipGraph::GetSelectedRoom(int, int, bool);
int ShipGraph::GetShipId();
ShipGraph &ShipGraph::GetShipInfo(int);
Point ShipGraph::GetSlotRenderPosition(int, int, bool);
Point ShipGraph::GetSlotWorldPosition(int, int);
bool ShipGraph::IsRoomConnected(int, int);
void ShipGraph::OnInit(std::vector<Room const*, std::allocator<Room const*> >, std::vector<Door const*, std::allocator<Door const*> >);
int ShipGraph::PopClosestDoor(std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >);
void ShipGraph::Restart();
int ShipGraph::RoomCount();
std::vector<Point, std::allocator<Point> > ShipGraph::RoomSquares(int);
Point ShipGraph::TranslateFromGrid(Point)Quit (expect signal SIGINT when the program is resumed)
Quit (expect signal SIGINT when the program is resumed)
No frame selected.
Scope for CrewMember::GetNewGoal:
Symbol this is multi-location:
  Range 0x471fb0-0x471fc9: a variable in $ecx
  Range 0x471fc9-0x47214a: a variable in $ebx
  Range 0x47214a-0x472152: a complex DWARF expression:
     0: DW_OP_GNU_entry_value
       2: DW_OP_reg1 [$ecx]
     3: DW_OP_stack_value

  Range 0x472152-0x47263e: a variable in $ebx
, length 4.
No frame selected.
Dump of assembler code for function CrewMember::GetNewGoal():
   0x00471fb0 <+0>:	push   %edi
   0x00471fb1 <+1>:	lea    0x8(%esp),%edi
   0x00471fb5 <+5>:	and    $0xfffffff0,%esp
   0x00471fb8 <+8>:	pushl  -0x4(%edi)
   0x00471fbb <+11>:	push   %ebp
   0x00471fbc <+12>:	mov    %esp,%ebp
   0x00471fbe <+14>:	push   %edi
   0x00471fbf <+15>:	push   %esi
   0x00471fc0 <+16>:	push   %ebx
   0x00471fc1 <+17>:	mov    %ecx,%ebx
   0x00471fc3 <+19>:	sub    $0x4c,%esp
   0x00471fc6 <+22>:	mov    0x64(%ecx),%ecx
   0x00471fc9 <+25>:	test   %ecx,%ecx
   0x00471fcb <+27>:	je     0x471fd2 <CrewMember::GetNewGoal()+34>
   0x00471fcd <+29>:	call   0x465860 <Door::FakeClose()>
   0x00471fd2 <+34>:	movss  0x82cb4c,%xmm0
   0x00471fda <+42>:	movl   $0x0,0x64(%ebx)
   0x00471fe1 <+49>:	ucomiss 0x54(%ebx),%xmm0
   0x00471fe5 <+53>:	jp     0x471ff2 <CrewMember::GetNewGoal()+66>
   0x00471fe7 <+55>:	mov    $0x0,%eax
   0x00471fec <+60>:	je     0x472146 <CrewMember::GetNewGoal()+406>
   0x00471ff2 <+66>:	mov    0x40(%ebx),%eax
   0x00471ff5 <+69>:	cmp    %eax,0x44(%ebx)
   0x00471ff8 <+72>:	je     0x472273 <CrewMember::GetNewGoal()+707>
   0x00471ffe <+78>:	mov    (%eax),%edi
   0x00472000 <+80>:	mov    %edi,%ecx
   0x00472002 <+82>:	call   0x465f80 <Door::GetCenterPoint() const>
   0x00472007 <+87>:	mov    %eax,-0x30(%ebp)
   0x0047200a <+90>:	mov    0x78(%ebx),%eax
   0x0047200d <+93>:	mov    %edi,%ecx
   0x0047200f <+95>:	mov    %edx,-0x38(%ebp)
   0x00472012 <+98>:	mov    %eax,(%esp)
   0x00472015 <+101>:	call   0x465b70 <Door::GetEntryWay(int) const>
   0x0047201a <+106>:	lea    -0x20(%ebp),%ecx
   0x0047201d <+109>:	sub    $0x4,%esp
   0x00472020 <+112>:	mov    %eax,-0x2c(%ebp)
   0x00472023 <+115>:	cvttss2si 0xc(%ebx),%eax
   0x00472028 <+120>:	mov    %eax,0x4(%esp)
   0x0047202c <+124>:	cvttss2si 0x8(%ebx),%eax
   0x00472031 <+129>:	mov    %eax,(%esp)
   0x00472034 <+132>:	mov    %edx,%esi
   0x00472036 <+134>:	mov    %edx,-0x34(%ebp)
   0x00472039 <+137>:	call   0x585e60 <Point::Point(int, int)>
   0x0047203e <+142>:	mov    -0x20(%ebp),%eax
   0x00472041 <+145>:	mov    -0x1c(%ebp),%edx
   0x00472044 <+148>:	sub    $0x8,%esp
   0x00472047 <+151>:	mov    %eax,(%esp)
   0x0047204a <+154>:	mov    %edx,0x4(%esp)
   0x0047204e <+158>:	call   0x45b1f0 <ShipGraph::TranslateToGrid(Point)>
   0x00472053 <+163>:	mov    %edx,-0x24(%ebp)
   0x00472056 <+166>:	mov    -0x2c(%ebp),%edx
   0x00472059 <+169>:	mov    %esi,0x4(%esp)
   0x0047205d <+173>:	mov    %eax,-0x28(%ebp)
   0x00472060 <+176>:	mov    %edx,(%esp)
   0x00472063 <+179>:	call   0x45b1f0 <ShipGraph::TranslateToGrid(Point)>
   0x00472068 <+184>:	lea    -0x28(%ebp),%ecx
   0x0047206b <+187>:	mov    %eax,(%esp)
   0x0047206e <+190>:	mov    %edx,0x4(%esp)
   0x00472072 <+194>:	call   0x585fd0 <Point::equals(Point) const>
   0x00472077 <+199>:	sub    $0x8,%esp
   0x0047207a <+202>:	test   %al,%al
   0x0047207c <+204>:	je     0x4720b5 <CrewMember::GetNewGoal()+261>
   0x0047207e <+206>:	mov    -0x2c(%ebp),%edx
   0x00472081 <+209>:	cmp    %edx,-0x30(%ebp)
   0x00472084 <+212>:	movzbl 0x248(%edi),%eax
   0x0047208b <+219>:	jge    0x472255 <CrewMember::GetNewGoal()+677>
   0x00472091 <+225>:	test   %al,%al
   0x00472093 <+227>:	je     0x472152 <CrewMember::GetNewGoal()+418>
   0x00472099 <+233>:	cmp    %edx,-0x30(%ebp)
   0x0047209c <+236>:	jle    0x472440 <CrewMember::GetNewGoal()+1168>
   0x004720a2 <+242>:	movb   $0x1,-0x3a(%ebp)
   0x004720a6 <+246>:	movb   $0x1,-0x3b(%ebp)
   0x004720aa <+250>:	movb   $0x0,-0x39(%ebp)
   0x004720ae <+254>:	xor    %esi,%esi
   0x004720b0 <+256>:	jmp    0x472174 <CrewMember::GetNewGoal()+452>
   0x004720b5 <+261>:	mov    (%ebx),%eax
   0x004720b7 <+263>:	mov    0x8(%eax),%eax
   0x004720ba <+266>:	cmp    $0x742610,%eax
   0x004720bf <+271>:	jne    0x4724c5 <CrewMember::GetNewGoal()+1301>
   0x004720c5 <+277>:	lea    -0x20(%ebp),%ecx
   0x004720c8 <+280>:	cvttss2si 0xc(%ebx),%eax
   0x004720cd <+285>:	mov    %eax,0x4(%esp)
   0x004720d1 <+289>:	cvttss2si 0x8(%ebx),%eax
   0x004720d6 <+294>:	mov    %eax,(%esp)
   0x004720d9 <+297>:	call   0x585e60 <Point::Point(int, int)>
   0x004720de <+302>:	mov    -0x20(%ebp),%eax
   0x004720e1 <+305>:	mov    -0x1c(%ebp),%edx
   0x004720e4 <+308>:	sub    $0x8,%esp
   0x004720e7 <+311>:	mov    %eax,%esi
   0x004720e9 <+313>:	mov    0x160(%ebx),%eax
   0x004720ef <+319>:	mov    %edx,-0x30(%ebp)
   0x004720f2 <+322>:	mov    0x78(%ebx),%edi
   0x004720f5 <+325>:	mov    %eax,(%esp)
   0x004720f8 <+328>:	call   0x45b660 <ShipGraph::GetShipInfo(int)>
   0x004720fd <+333>:	mov    -0x30(%ebp),%edx
   0x00472100 <+336>:	mov    %esi,0x4(%esp)
   0x00472104 <+340>:	mov    %eax,%ecx
   0x00472106 <+342>:	mov    %edi,(%esp)
   0x00472109 <+345>:	mov    %edx,0x8(%esp)
   0x0047210d <+349>:	call   0x45ae50 <ShipGraph::GetIntoRoom(int, Point)>
   0x00472112 <+354>:	sub    $0xc,%esp
   0x00472115 <+357>:	cmp    $0xffffffff,%eax
   0x00472118 <+360>:	pxor   %xmm0,%xmm0
   0x0047211c <+364>:	je     0x472310 <CrewMember::GetNewGoal()+864>
   0x00472122 <+370>:	cmp    $0xffffffff,%edx
   0x00472125 <+373>:	je     0x472310 <CrewMember::GetNewGoal()+864>
   0x0047212b <+379>:	cvtsi2ss %eax,%xmm0
   0x0047212f <+383>:	movss  %xmm0,0x18(%ebx)
   0x00472134 <+388>:	pxor   %xmm0,%xmm0
   0x00472138 <+392>:	cvtsi2ss %edx,%xmm0
   0x0047213c <+396>:	movss  %xmm0,0x1c(%ebx)
   0x00472141 <+401>:	mov    $0x1,%eax
   0x00472146 <+406>:	lea    -0xc(%ebp),%esp
   0x00472149 <+409>:	pop    %ebx
   0x0047214a <+410>:	pop    %esi
   0x0047214b <+411>:	pop    %edi
   0x0047214c <+412>:	pop    %ebp
   0x0047214d <+413>:	lea    -0x8(%edi),%esp
   0x00472150 <+416>:	pop    %edi
   0x00472151 <+417>:	ret    
   0x00472152 <+418>:	mov    -0x34(%ebp),%esi
   0x00472155 <+421>:	mov    -0x38(%ebp),%ecx
   0x00472158 <+424>:	movb   $0x0,-0x3b(%ebp)
   0x0047215c <+428>:	movb   $0x0,-0x3a(%ebp)
   0x00472160 <+432>:	cmp    %esi,%ecx
   0x00472162 <+434>:	setl   %dl
   0x00472165 <+437>:	cmp    %dl,%al
   0x00472167 <+439>:	setb   %al
   0x0047216a <+442>:	cmp    %esi,%ecx
   0x0047216c <+444>:	mov    %al,-0x39(%ebp)
   0x0047216f <+447>:	setg   %al
   0x00472172 <+450>:	mov    %eax,%esi
   0x00472174 <+452>:	mov    0x4(%ebx),%eax
   0x00472177 <+455>:	mov    %edi,%ecx
   0x00472179 <+457>:	mov    %eax,(%esp)
   0x0047217c <+460>:	call   0x465a90 <Door::IsSealed(int) const>
   0x00472181 <+465>:	sub    $0x4,%esp
   0x00472184 <+468>:	test   %al,%al
   0x00472186 <+470>:	je     0x4721d0 <CrewMember::GetNewGoal()+544>
   0x00472188 <+472>:	cmpb   $0x0,0x53d(%ebx)
   0x0047218f <+479>:	je     0x47219a <CrewMember::GetNewGoal()+490>
   0x00472191 <+481>:	cmpb   $0x0,0x22c(%edi)
   0x00472198 <+488>:	je     0x4721d0 <CrewMember::GetNewGoal()+544>
   0x0047219a <+490>:	mov    0x1dc(%ebx),%eax
   0x004721a0 <+496>:	test   %eax,%eax
   0x004721a2 <+498>:	je     0x472474 <CrewMember::GetNewGoal()+1220>
   0x004721a8 <+504>:	mov    %edi,0x1dc(%ebx)
   0x004721ae <+510>:	movl   $0x0,0x4(%esp)
   0x004721b6 <+518>:	mov    %ebx,%ecx
   0x004721b8 <+520>:	mov    %edi,(%esp)
   0x004721bb <+523>:	call   0x471e80 <CrewMember::SetCurrentTarget(CrewTarget*, bool)>
   0x004721c0 <+528>:	sub    $0x8,%esp
   0x004721c3 <+531>:	jmp    0x472141 <CrewMember::GetNewGoal()+401>
   0x004721c8 <+536>:	nop
   0x004721c9 <+537>:	lea    0x0(%esi,%eiz,1),%esi
   0x004721d0 <+544>:	movl   $0x0,0x1dc(%ebx)
   0x004721da <+554>:	movl   $0x0,0x4(%esp)
   0x004721e2 <+562>:	mov    %ebx,%ecx
   0x004721e4 <+564>:	movl   $0x0,(%esp)
   0x004721eb <+571>:	call   0x471e80 <CrewMember::SetCurrentTarget(CrewTarget*, bool)>
   0x004721f0 <+576>:	sub    $0x8,%esp
   0x004721f3 <+579>:	cmpb   $0x0,0x248(%edi)
   0x004721fa <+586>:	jne    0x472330 <CrewMember::GetNewGoal()+896>
   0x00472200 <+592>:	pxor   %xmm1,%xmm1
   0x00472204 <+596>:	movss  0x8(%ebx),%xmm2
   0x00472209 <+601>:	movaps %xmm2,%xmm0
   0x0047220c <+604>:	movss  0x82cb10,%xmm3
   0x00472214 <+612>:	cvtsi2ssl -0x2c(%ebp),%xmm1
   0x00472219 <+617>:	subss  %xmm1,%xmm0
   0x0047221d <+621>:	andps  %xmm3,%xmm0
   0x00472220 <+624>:	ucomiss 0x82cbc8,%xmm0
   0x00472227 <+631>:	ja     0x472460 <CrewMember::GetNewGoal()+1200>
   0x0047222d <+637>:	mov    -0x34(%ebp),%esi
   0x00472230 <+640>:	cmp    %esi,-0x38(%ebp)
   0x00472233 <+643>:	mov    %esi,%eax
   0x00472235 <+645>:	jge    0x4725d3 <CrewMember::GetNewGoal()+1571>
   0x0047223b <+651>:	pxor   %xmm0,%xmm0
   0x0047223f <+655>:	sub    $0x23,%eax
   0x00472242 <+658>:	movss  %xmm2,0x18(%ebx)
   0x00472247 <+663>:	cvtsi2ss %eax,%xmm0
   0x0047224b <+667>:	movss  %xmm0,0x1c(%ebx)
   0x00472250 <+672>:	jmp    0x47237a <CrewMember::GetNewGoal()+970>
   0x00472255 <+677>:	test   %al,%al
   0x00472257 <+679>:	je     0x472152 <CrewMember::GetNewGoal()+418>
   0x0047225d <+685>:	cmp    %edx,-0x30(%ebp)
   0x00472260 <+688>:	jle    0x472453 <CrewMember::GetNewGoal()+1187>
   0x00472266 <+694>:	movb   $0x1,-0x3a(%ebp)
   0x0047226a <+698>:	movb   $0x0,-0x3b(%ebp)
   0x0047226e <+702>:	jmp    0x4720aa <CrewMember::GetNewGoal()+250>
   0x00472273 <+707>:	mov    (%ebx),%eax
   0x00472275 <+709>:	mov    0x8(%eax),%eax
   0x00472278 <+712>:	cmp    $0x742610,%eax
   0x0047227d <+717>:	jne    0x4724f0 <CrewMember::GetNewGoal()+1344>
   0x00472283 <+723>:	lea    -0x20(%ebp),%ecx
   0x00472286 <+726>:	cvttss2si 0xc(%ebx),%eax
   0x0047228b <+731>:	mov    %eax,0x4(%esp)
   0x0047228f <+735>:	cvttss2si 0x8(%ebx),%eax
   0x00472294 <+740>:	mov    %eax,(%esp)
   0x00472297 <+743>:	call   0x585e60 <Point::Point(int, int)>
   0x0047229c <+748>:	mov    -0x20(%ebp),%edi
   0x0047229f <+751>:	mov    -0x1c(%ebp),%edx
   0x004722a2 <+754>:	sub    $0x8,%esp
   0x004722a5 <+757>:	mov    0x160(%ebx),%eax
   0x004722ab <+763>:	mov    0x78(%ebx),%esi
   0x004722ae <+766>:	mov    %edx,-0x2c(%ebp)
   0x004722b1 <+769>:	mov    %eax,(%esp)
   0x004722b4 <+772>:	call   0x45b660 <ShipGraph::GetShipInfo(int)>
   0x004722b9 <+777>:	mov    -0x2c(%ebp),%edx
   0x004722bc <+780>:	mov    %esi,(%esp)
   0x004722bf <+783>:	mov    %eax,%ecx
   0x004722c1 <+785>:	mov    %edi,0x4(%esp)
   0x004722c5 <+789>:	mov    %edx,0x8(%esp)
   0x004722c9 <+793>:	call   0x45ae50 <ShipGraph::GetIntoRoom(int, Point)>
   0x004722ce <+798>:	sub    $0xc,%esp
   0x004722d1 <+801>:	cmp    $0xffffffff,%eax
   0x004722d4 <+804>:	mov    %eax,%esi
   0x004722d6 <+806>:	setne  %al
   0x004722d9 <+809>:	cmp    $0xffffffff,%edx
   0x004722dc <+812>:	setne  %cl
   0x004722df <+815>:	and    %cl,%al
   0x004722e1 <+817>:	je     0x4723d4 <CrewMember::GetNewGoal()+1060>
   0x004722e7 <+823>:	pxor   %xmm0,%xmm0
   0x004722eb <+827>:	cvtsi2ss %esi,%xmm0
   0x004722ef <+831>:	movss  %xmm0,0x18(%ebx)
   0x004722f4 <+836>:	pxor   %xmm0,%xmm0
   0x004722f8 <+840>:	cvtsi2ss %edx,%xmm0
   0x004722fc <+844>:	movss  %xmm0,0x1c(%ebx)
   0x00472301 <+849>:	jmp    0x472146 <CrewMember::GetNewGoal()+406>
   0x00472306 <+854>:	lea    0x0(%esi),%esi
   0x00472309 <+857>:	lea    0x0(%edi,%eiz,1),%edi
   0x00472310 <+864>:	cvtsi2ssl -0x2c(%ebp),%xmm0
   0x00472315 <+869>:	movss  %xmm0,0x18(%ebx)
   0x0047231a <+874>:	pxor   %xmm0,%xmm0
   0x0047231e <+878>:	cvtsi2ssl -0x34(%ebp),%xmm0
   0x00472323 <+883>:	movss  %xmm0,0x1c(%ebx)
   0x00472328 <+888>:	jmp    0x472141 <CrewMember::GetNewGoal()+401>
   0x0047232d <+893>:	lea    0x0(%esi),%esi
   0x00472330 <+896>:	pxor   %xmm1,%xmm1
   0x00472334 <+900>:	movss  0x82cb10,%xmm3
   0x0047233c <+908>:	movss  0xc(%ebx),%xmm2
   0x00472341 <+913>:	movaps %xmm2,%xmm0
   0x00472344 <+916>:	cvtsi2ssl -0x34(%ebp),%xmm1
   0x00472349 <+921>:	subss  %xmm1,%xmm0
   0x0047234d <+925>:	andps  %xmm3,%xmm0
   0x00472350 <+928>:	ucomiss 0x82cbc8,%xmm0
   0x00472357 <+935>:	ja     0x4723c0 <CrewMember::GetNewGoal()+1040>
   0x00472359 <+937>:	mov    -0x2c(%ebp),%esi
   0x0047235c <+940>:	cmp    %esi,-0x30(%ebp)
   0x0047235f <+943>:	jge    0x472605 <CrewMember::GetNewGoal()+1621>
   0x00472365 <+949>:	pxor   %xmm0,%xmm0
   0x00472369 <+953>:	sub    $0x23,%esi
   0x0047236c <+956>:	movss  %xmm2,0x1c(%ebx)
   0x00472371 <+961>:	cvtsi2ss %esi,%xmm0
   0x00472375 <+965>:	movss  %xmm0,0x18(%ebx)
   0x0047237a <+970>:	cmpb   $0x0,0x18(%edi)
   0x0047237e <+974>:	jne    0x472393 <CrewMember::GetNewGoal()+995>
   0x00472380 <+976>:	cmpb   $0x0,0x1e8(%edi)
   0x00472387 <+983>:	jne    0x472393 <CrewMember::GetNewGoal()+995>
   0x00472389 <+985>:	mov    %edi,0x64(%ebx)
   0x0047238c <+988>:	mov    %edi,%ecx
   0x0047238e <+990>:	call   0x465780 <Door::FakeOpen()>
   0x00472393 <+995>:	mov    0x40(%ebx),%ecx
   0x00472396 <+998>:	mov    0x44(%ebx),%eax
   0x00472399 <+1001>:	lea    0x4(%ecx),%edx
   0x0047239c <+1004>:	cmp    %edx,%eax
   0x0047239e <+1006>:	je     0x4723b1 <CrewMember::GetNewGoal()+1025>
   0x004723a0 <+1008>:	mov    %eax,%esi
   0x004723a2 <+1010>:	sub    %edx,%esi
   0x004723a4 <+1012>:	mov    %esi,%edi
   0x004723a6 <+1014>:	sar    $0x2,%edi
   0x004723a9 <+1017>:	test   %edi,%edi
   0x004723ab <+1019>:	jne    0x4725b3 <CrewMember::GetNewGoal()+1539>
   0x004723b1 <+1025>:	sub    $0x4,%eax
   0x004723b4 <+1028>:	mov    %eax,0x44(%ebx)
   0x004723b7 <+1031>:	jmp    0x472141 <CrewMember::GetNewGoal()+401>
   0x004723bc <+1036>:	lea    0x0(%esi,%eiz,1),%esi
   0x004723c0 <+1040>:	movss  0x8(%ebx),%xmm0
   0x004723c5 <+1045>:	movss  %xmm1,0x1c(%ebx)
   0x004723ca <+1050>:	movss  %xmm0,0x18(%ebx)
   0x004723cf <+1055>:	jmp    0x472141 <CrewMember::GetNewGoal()+401>
   0x004723d4 <+1060>:	pxor   %xmm1,%xmm1
   0x004723d8 <+1064>:	movss  0x82cb10,%xmm4
   0x004723e0 <+1072>:	pxor   %xmm2,%xmm2
   0x004723e4 <+1076>:	movss  0x8(%ebx),%xmm0
   0x004723e9 <+1081>:	cvtsi2ssl 0x4c(%ebx),%xmm1
   0x004723ee <+1086>:	cvtsi2ssl 0x50(%ebx),%xmm2
   0x004723f3 <+1091>:	movss  0x82cb20,%xmm3
   0x004723fb <+1099>:	subss  %xmm1,%xmm0
   0x004723ff <+1103>:	movss  %xmm1,0x18(%ebx)
   0x00472404 <+1108>:	movss  %xmm2,0x1c(%ebx)
   0x00472409 <+1113>:	andps  %xmm4,%xmm0
   0x0047240c <+1116>:	ucomiss %xmm0,%xmm3
   0x0047240f <+1119>:	jbe    0x472141 <CrewMember::GetNewGoal()+401>
   0x00472415 <+1125>:	movss  0xc(%ebx),%xmm0
   0x0047241a <+1130>:	subss  %xmm2,%xmm0
   0x0047241e <+1134>:	andps  %xmm4,%xmm0
   0x00472421 <+1137>:	ucomiss %xmm0,%xmm3
   0x00472424 <+1140>:	jbe    0x472141 <CrewMember::GetNewGoal()+401>
   0x0047242a <+1146>:	movss  %xmm1,0x8(%ebx)
   0x0047242f <+1151>:	movl   $0xbf800000,0x54(%ebx)
   0x00472436 <+1158>:	movss  %xmm2,0xc(%ebx)
   0x0047243b <+1163>:	jmp    0x472146 <CrewMember::GetNewGoal()+406>
   0x00472440 <+1168>:	movb   $0x1,-0x3b(%ebp)
   0x00472444 <+1172>:	movb   $0x0,-0x3a(%ebp)
   0x00472448 <+1176>:	xor    %esi,%esi
   0x0047244a <+1178>:	movb   $0x0,-0x39(%ebp)
   0x0047244e <+1182>:	jmp    0x472174 <CrewMember::GetNewGoal()+452>
   0x00472453 <+1187>:	movb   $0x0,-0x3a(%ebp)
   0x00472457 <+1191>:	movb   $0x0,-0x3b(%ebp)
   0x0047245b <+1195>:	jmp    0x4720aa <CrewMember::GetNewGoal()+250>
   0x00472460 <+1200>:	movss  0xc(%ebx),%xmm0
   0x00472465 <+1205>:	movss  %xmm1,0x18(%ebx)
   0x0047246a <+1210>:	movss  %xmm0,0x1c(%ebx)
   0x0047246f <+1215>:	jmp    0x472141 <CrewMember::GetNewGoal()+401>
   0x00472474 <+1220>:	mov    %esi,%eax
   0x00472476 <+1222>:	test   %al,%al
   0x00472478 <+1224>:	je     0x4724d0 <CrewMember::GetNewGoal()+1312>
   0x0047247a <+1226>:	mov    -0x38(%ebp),%eax
   0x0047247d <+1229>:	pxor   %xmm0,%xmm0
   0x00472481 <+1233>:	sub    $0xb,%eax
   0x00472484 <+1236>:	cvtsi2ss %eax,%xmm0
   0x00472488 <+1240>:	cmpb   $0x0,-0x3a(%ebp)
   0x0047248c <+1244>:	movss  %xmm0,0x1c(%ebx)
   0x00472491 <+1249>:	jne    0x472544 <CrewMember::GetNewGoal()+1428>
   0x00472497 <+1255>:	cmpb   $0x0,-0x3b(%ebp)
   0x0047249b <+1259>:	jne    0x472544 <CrewMember::GetNewGoal()+1428>
   0x004724a1 <+1265>:	pxor   %xmm0,%xmm0
   0x004724a5 <+1269>:	cvtsi2ssl -0x30(%ebp),%xmm0
   0x004724aa <+1274>:	mov    %esi,%eax
   0x004724ac <+1276>:	movss  %xmm0,0x18(%ebx)
   0x004724b1 <+1281>:	test   %al,%al
   0x004724b3 <+1283>:	jne    0x472500 <CrewMember::GetNewGoal()+1360>
   0x004724b5 <+1285>:	cmpb   $0x0,-0x39(%ebp)
   0x004724b9 <+1289>:	jne    0x472500 <CrewMember::GetNewGoal()+1360>
   0x004724bb <+1291>:	movss  %xmm0,0x18(%ebx)
   0x004724c0 <+1296>:	jmp    0x4721a8 <CrewMember::GetNewGoal()+504>
   0x004724c5 <+1301>:	mov    %ebx,%ecx
   0x004724c7 <+1303>:	call   *%eax
   0x004724c9 <+1305>:	mov    %eax,%esi
   0x004724cb <+1307>:	jmp    0x4720e9 <CrewMember::GetNewGoal()+313>
   0x004724d0 <+1312>:	cmpb   $0x0,-0x39(%ebp)
   0x004724d4 <+1316>:	je     0x4725a5 <CrewMember::GetNewGoal()+1525>
   0x004724da <+1322>:	mov    -0x38(%ebp),%eax
   0x004724dd <+1325>:	pxor   %xmm0,%xmm0
   0x004724e1 <+1329>:	add    $0xb,%eax
   0x004724e4 <+1332>:	cvtsi2ss %eax,%xmm0
   0x004724e8 <+1336>:	jmp    0x472488 <CrewMember::GetNewGoal()+1240>
   0x004724ea <+1338>:	lea    0x0(%esi),%esi
   0x004724f0 <+1344>:	mov    %ebx,%ecx
   0x004724f2 <+1346>:	call   *%eax
   0x004724f4 <+1348>:	mov    %eax,%edi
   0x004724f6 <+1350>:	jmp    0x4722a5 <CrewMember::GetNewGoal()+757>
   0x004724fb <+1355>:	nop
   0x004724fc <+1356>:	lea    0x0(%esi,%eiz,1),%esi
   0x00472500 <+1360>:	cmpb   $0x0,0x8cb7a0
   0x00472507 <+1367>:	jne    0x4725ed <CrewMember::GetNewGoal()+1597>
   0x0047250d <+1373>:	call   0x62ede0 <random32>
   0x00472512 <+1378>:	mov    %eax,%ecx
   0x00472514 <+1380>:	mov    %ecx,%eax
   0x00472516 <+1382>:	mov    $0x78787879,%edx
   0x0047251b <+1387>:	imul   %edx
   0x0047251d <+1389>:	mov    %ecx,%eax
   0x0047251f <+1391>:	sar    $0x1f,%eax
   0x00472522 <+1394>:	pxor   %xmm0,%xmm0
   0x00472526 <+1398>:	sar    $0x3,%edx
   0x00472529 <+1401>:	sub    %eax,%edx
   0x0047252b <+1403>:	mov    %edx,%eax
   0x0047252d <+1405>:	shl    $0x4,%eax
   0x00472530 <+1408>:	add    %eax,%edx
   0x00472532 <+1410>:	mov    -0x30(%ebp),%eax
   0x00472535 <+1413>:	sub    %edx,%ecx
   0x00472537 <+1415>:	lea    -0x8(%ecx,%eax,1),%eax
   0x0047253b <+1419>:	cvtsi2ss %eax,%xmm0
   0x0047253f <+1423>:	jmp    0x4724bb <CrewMember::GetNewGoal()+1291>
   0x00472544 <+1428>:	cmpb   $0x0,0x8cb7a0
   0x0047254b <+1435>:	jne    0x4725f9 <CrewMember::GetNewGoal()+1609>
   0x00472551 <+1441>:	call   0x62ede0 <random32>
   0x00472556 <+1446>:	mov    %eax,%ecx
   0x00472558 <+1448>:	mov    %ecx,%eax
   0x0047255a <+1450>:	mov    $0x78787879,%edx
   0x0047255f <+1455>:	imul   %edx
   0x00472561 <+1457>:	mov    %ecx,%eax
   0x00472563 <+1459>:	sar    $0x1f,%eax
   0x00472566 <+1462>:	pxor   %xmm0,%xmm0
   0x0047256a <+1466>:	sar    $0x3,%edx
   0x0047256d <+1469>:	sub    %eax,%edx
   0x0047256f <+1471>:	mov    %edx,%eax
   0x00472571 <+1473>:	shl    $0x4,%eax
   0x00472574 <+1476>:	add    %eax,%edx
   0x00472576 <+1478>:	mov    -0x38(%ebp),%eax
   0x00472579 <+1481>:	sub    %edx,%ecx
   0x0047257b <+1483>:	cmpb   $0x0,-0x3a(%ebp)
   0x0047257f <+1487>:	lea    -0x8(%ecx,%eax,1),%eax
   0x00472583 <+1491>:	cvtsi2ss %eax,%xmm0
   0x00472587 <+1495>:	movss  %xmm0,0x1c(%ebx)
   0x0047258c <+1500>:	je     0x472621 <CrewMember::GetNewGoal()+1649>
   0x00472592 <+1506>:	mov    -0x30(%ebp),%eax
   0x00472595 <+1509>:	pxor   %xmm0,%xmm0
   0x00472599 <+1513>:	sub    $0xb,%eax
   0x0047259c <+1516>:	cvtsi2ss %eax,%xmm0
   0x004725a0 <+1520>:	jmp    0x4724aa <CrewMember::GetNewGoal()+1274>
   0x004725a5 <+1525>:	pxor   %xmm0,%xmm0
   0x004725a9 <+1529>:	cvtsi2ssl -0x38(%ebp),%xmm0
   0x004725ae <+1534>:	jmp    0x472488 <CrewMember::GetNewGoal()+1240>
   0x004725b3 <+1539>:	mov    %esi,0x8(%esp)
   0x004725b7 <+1543>:	mov    %edx,0x4(%esp)
   0x004725bb <+1547>:	mov    %ecx,(%esp)
   0x004725be <+1550>:	call   0x71e758 <memmove>
   0x004725c3 <+1555>:	mov    0x44(%ebx),%eax
   0x004725c6 <+1558>:	jmp    0x4723b1 <CrewMember::GetNewGoal()+1025>
   0x004725cb <+1563>:	mov    -0x34(%ebp),%eax
   0x004725ce <+1566>:	movss  0x8(%ebx),%xmm2
   0x004725d3 <+1571>:	pxor   %xmm0,%xmm0
   0x004725d7 <+1575>:	add    $0x22,%eax
   0x004725da <+1578>:	movss  %xmm2,0x18(%ebx)
   0x004725df <+1583>:	cvtsi2ss %eax,%xmm0
   0x004725e3 <+1587>:	movss  %xmm0,0x1c(%ebx)
   0x004725e8 <+1592>:	jmp    0x47237a <CrewMember::GetNewGoal()+970>
   0x004725ed <+1597>:	call   0x71e728 <rand>
   0x004725f2 <+1602>:	mov    %eax,%ecx
   0x004725f4 <+1604>:	jmp    0x472514 <CrewMember::GetNewGoal()+1380>
   0x004725f9 <+1609>:	call   0x71e728 <rand>
   0x004725fe <+1614>:	mov    %eax,%ecx
   0x00472600 <+1616>:	jmp    0x472558 <CrewMember::GetNewGoal()+1448>
   0x00472605 <+1621>:	jle    0x4725cb <CrewMember::GetNewGoal()+1563>
   0x00472607 <+1623>:	pxor   %xmm0,%xmm0
   0x0047260b <+1627>:	add    $0x22,%esi
   0x0047260e <+1630>:	movss  %xmm2,0x1c(%ebx)
   0x00472613 <+1635>:	cvtsi2ss %esi,%xmm0
   0x00472617 <+1639>:	movss  %xmm0,0x18(%ebx)
   0x0047261c <+1644>:	jmp    0x47237a <CrewMember::GetNewGoal()+970>
   0x00472621 <+1649>:	cmpb   $0x0,-0x3b(%ebp)
   0x00472625 <+1653>:	je     0x4724a1 <CrewMember::GetNewGoal()+1265>
   0x0047262b <+1659>:	mov    -0x30(%ebp),%eax
   0x0047262e <+1662>:	pxor   %xmm0,%xmm0
   0x00472632 <+1666>:	add    $0xb,%eax
   0x00472635 <+1669>:	cvtsi2ss %eax,%xmm0
   0x00472639 <+1673>:	jmp    0x4724aa <CrewMember::GetNewGoal()+1274>
End of assembler dump.
No frame selected.
No stack.
Undefined command: "bt-".  Try "help".
No stack.
No frame selected.
Starting program: C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light/FTLGame.exe 
[New Thread 5680.0x24f8]
[New Thread 5680.0x31c0]
[New Thread 5680.0x1f48]
[New Thread 5680.0x7a8]
Error while mapping shared library sections:
`C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light\bassmix.dll': not in executable format: File format not recognized
Error while mapping shared library sections:
`C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light\bass.dll': not in executable format: File format not recognized
[New Thread 5680.0x1318]
[New Thread 5680.0x2eac]
[New Thread 5680.0x2afc]
[New Thread 5680.0x4b8]
[New Thread 5680.0x36c8]
[New Thread 5680.0x219c]
[New Thread 5680.0x3f20]
warning: onecore\com\combase\objact\objact.cxx(834)\combase.dll!762775E9: (caller: 76275FCB) ReturnHr(1) tid(24f8) 800401F0 CoInitialize has not been called.

[New Thread 5680.0x2160]
[New Thread 5680.0x2e88]
[New Thread 5680.0x2c14]
[New Thread 5680.0x1a1c]
[New Thread 5680.0x32f0]
[New Thread 5680.0x2ec8]
[New Thread 5680.0x3c04]
[Inferior 1 (process 5680) exited normally]
No frame selected.
type = class CApp : public CEvent {
  private:
    bool Running;
    bool shift_held;
    CommandGui *gui;
    WorldManager *world;
    MainMenu menu;
    LanguageChooser langChooser;
    int screen_x;
    int screen_y;
    int modifier_x;
    int modifier_y;
    bool fullScreenLastState;
    bool minimized;
    bool minLastState;
    bool focus;
    bool focusLastState;
    bool steamOverlay;
    bool steamOverlayLastState;
    bool rendering;
    bool gameLogic;
    float mouseModifier_x;
    float mouseModifier_y;
    GL_FrameBuffer *framebuffer;
    bool fboSupport;
    int x_bar;
    int y_bar;
    bool lCtrl;
    bool useFrameBuffer;
    bool manualResolutionError;
    int manualResErrorX;
    int manualResErrorY;
    bool nativeFullScreenError;
    bool fbStretchError;
    std::__cxx11::string lastLanguage;
    bool inputFocus;
    bool useDirect3D;

  public:
    CApp();
  private:
    void GenInputEvents();
  public:
    int OnExecute();
    void ParseArgs(int, const char **);
    bool OnInit();
    virtual void OnEvent(const EventType *);
    void OnLoop();
    bool OnLoad();
    void OnRender();
    void OnCleanup();
    void OnSuspend();
    void OnResume();
    virtual void OnRequestExit();
    virtual void OnLButtonUp(int, int);
    virtual void OnLButtonDown(int, int);
    virtual void OnRButtonUp(int, int);
    virtual void OnRButtonDown(int, int);
    virtual void OnMButtonDown(int, int);
    virtual void OnMouseMove(int, int, int, int, bool, bool, bool);
    virtual void OnKeyUp(SDLKey);
    virtual void OnKeyDown(SDLKey);
    virtual void OnTextInput(int);
    virtual void OnTextEvent(CEvent::TextEvent);
    virtual void OnTouchDown(int, int, int);
    virtual void OnTouchMove(int, int, int, int, int);
    virtual void OnTouchUp(int, int, int, int, int);
    virtual void OnTouchCancel(int, int, int, int, int);
    virtual void OnExit();
    bool SetupWindow();
    void UpdateFullScreen();
    void UpdateWindowSettings();
    virtual void OnInputFocus();
    virtual void OnInputBlur();
    virtual void OnLanguageChange();
    Point TranslateMouse(int, int);
    bool Restart();
}
No frame selected.
Breakpoint 1 at 0x403713: CApp::OnExecute. (2 locations)
Starting program: C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light/FTLGame.exe 
[New Thread 12968.0x3bd8]
[New Thread 12968.0x2318]
[New Thread 12968.0x28b8]
[New Thread 12968.0x397c]
Error while mapping shared library sections:
`C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light\bassmix.dll': not in executable format: File format not recognized
Error while mapping shared library sections:
`C:\Program Files (x86)\Steam\steamapps\common\FTL Faster Than Light\bass.dll': not in executable format: File format not recognized
Warning:
Cannot insert breakpoint 1.
Error accessing memory address 0x403700: Input/output error.

#0  0x77ede963 in ?? ()
#0  0x77ede963 in ?? ()
#0  0x77ede963 in ?? ()
No symbol table info available.
A debugging session is active.

	Inferior 1 [process 12968] will be killed.

Quit anyway? (y or n) error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5
All defined variables:

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/crtexe.c:
HINSTANCE __mingw_winmain_hInstance;
_TCHAR *__mingw_winmain_lpCmdLine;
DWORD __mingw_winmain_nShowCmd;
_PIFV mingw_pcinit;
_PVFV mingw_pcppinit;
static int argc;
static int argret;
static char **argv;
static char **envp;
static int has_cctor;
static int mainret;
static int managedapp;
static _startupinfo startinfo;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MainMenu.h:
const float MainMenu::glowytimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/CApp.cpp:
static CApp *p_theApp;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.h:
const int Sector::SECTOR_CIVILIAN;
const int Sector::SECTOR_HOSTILE;
const int Sector::SECTOR_NEBULA;
const int Sector::SECTOR_TYPES;
const int Sector::SECTOR_UNKNOWN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.cpp:
TutorialManager TutorialManager::Tutorial;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.h:
const int SpaceDrone::TYPE_COMBAT;
const int SpaceDrone::TYPE_DEFENSE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
static const float SHIELD_ANIM_LENGTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceDrone.cpp:
static const float SUPER_SHIELD_TIME[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
AchievementTracker AchievementTracker::Tracker;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
static const int FLAGS[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.cpp:
static const int TYPE_A_FLAG;
static const int TYPE_B_FLAG;
static const int TYPE_C_FLAG;
static const int TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.cpp:
ScoreKeeper ScoreKeeper::Keeper;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml_print.hpp:
static const int rapidxml::print_no_indenting;
static const int rapidxml::print_no_indenting;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
const int Projectile::DIR_ALL;
const int Projectile::DIR_BOTTOM;
const int Projectile::DIR_HORIZONTAL;
const int Projectile::DIR_LEFT;
const int Projectile::DIR_NUMBER_OF_DIRECTIONS;
const int Projectile::DIR_RIGHT;
const int Projectile::DIR_TOP;
const int Projectile::DIR_VERTICAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.cpp:
std::vector<ShipGraph, std::allocator<ShipGraph> > ShipGraph::ship_graphs;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.cpp:
CrewMemberFactory CrewMemberFactory::Factory;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipObject.cpp:
std::vector<ShipInfo, std::allocator<ShipInfo> > ShipObject::shipInfoList;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int BLAST_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int DOOR_HEALTH_1[3];
static const int DOOR_HEALTH_2[3];
static const int DOOR_HEALTH_3[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int LOCKDOWN_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.cpp:
static const int SUPER_BLAST_HEALTH;
static const int SUPER_DUPER_BLAST_HEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Ship.cpp:
GL_Texture *Ship::doorSheet;
GL_Texture *Ship::doorSheetLarge;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Ship.cpp:
static const bool PERMANENT_EXPLOSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ParticleEmitter.h:
const int ParticleEmitter::MAX_PARTICLES;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/iostream:
static std::ios_base::Init std::__ioinit;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Store.h:
const int Store::STORE_AUGMENTS;
const int Store::STORE_CREW;
const int Store::STORE_DRONES;
const int Store::STORE_ITEMS;
const int Store::STORE_NONE;
const int Store::STORE_SYSTEMS;
const int Store::STORE_TOTAL;
const int Store::STORE_WEAPONS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
Point SystemControl::drone_position;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
Point SystemControl::weapon_position;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.cpp:
static PowerBarCache powerBarCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MainMenu.h:
const float MainMenu::glowytimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemBox.h:
const int CooldownSystemBox::COOLDOWN_LEVELS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemBox.h:
const float SystemBox::DRAG_SCALE;
const int SystemBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/MouseControl.cpp:
MouseControl MouseControl::Mouse;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point achievementsTitleLoc;
static const Point advancedOffButtonLoc;
static const Point advancedOnButtonLoc;
static const Point advancedTitleLoc;
static const Point augmentsTitleLoc;
static const Point crewTitleLoc;
static const Point dronesTitleLoc;
static const Point easyButtonLoc;
static const Point enableAdvancedLoc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point hardButtonLoc;
static const Point infoBoxLoc;
static const Point layoutTitleLoc;
static const Point listButtonLoc;
static const Point nameButtonLoc;
static const Point noDronesLoc;
static const Point noWeaponsLoc;
static const Point normalButtonLoc;
static const Point randomLoc;
static const Point repairingLoc1;
static const Point repairingLoc2;
static const Point selectBoxLoc;
static const Point shipNameLoc;
static const Point shipTitleLoc;
static const Point showButtonLoc;
static const Point startButtonLoc;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipBuilder.cpp:
static const Point typingLoc;
static const Point walkingManLoc;
static const Point weaponsTitleLoc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewBox.h:
const int CrewBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.h:
const int WeaponBox::COOLDOWN_WIDTH;
const int WeaponBox::NAME_OFFSET_X;
const int WeaponBox::NAME_OFFSET_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.cpp:
GL_Texture *WeaponBox::arrow_off;
GL_Texture *WeaponBox::arrow_on;
GL_Texture *WeaponBox::charge_off;
GL_Texture *WeaponBox::charge_on;
GL_Texture *WeaponBox::charge_use;
GL_Texture *WeaponBox::clock_off;
GL_Texture *WeaponBox::clock_on;
GL_Primitive *WeaponBox::missileIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponBox.cpp:
static const int NAME_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ArmamentBox.h:
const int ArmamentBox::BOX_FULL_HEIGHT;
const int ArmamentBox::BOX_HEIGHT;
const int ArmamentBox::BOX_WIDTH;
const int ArmamentBox::HOTKEY_WIDTH;
const int ArmamentBox::ICON_HEIGHT;
const int ArmamentBox::ICON_WIDTH;
const int ArmamentBox::MAX_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewBox.h:
const int CrewBox::ICON_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipSelect.cpp:
GL_Texture *ShipButton::achievementBox;
GL_Texture *ShipButton::achievementBoxSelected;
GL_Texture *ShipButton::achievementImages[5][2];
bool UnlockArrow::arrowImagesLoaded;
GL_Texture *UnlockArrow::arrows[2][2];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/FTLButton.h:
const float FTLButton::blink_speed;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/InfoBox.cpp:
const GL_Color InfoBox::detailsBarOff;
const GL_Color InfoBox::detailsBarOn;
GL_Texture *InfoBox::detailsBoxCenter;
GL_Texture *InfoBox::detailsBoxLeft;
GL_Texture *InfoBox::detailsBoxRight;
GL_Texture *InfoBox::scrapIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/InfoBox.cpp:
static const int descriptionFont;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/WeaponControl.cpp:
GL_Texture *WeaponControl::beam_piece_red;
GL_Texture *WeaponControl::beam_piece_yellow;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/DroneBox.h:
const int DroneBox::NAME_OFFSET_X;
const int DroneBox::NAME_OFFSET_Y;
const int DroneBox::NAME_WIDTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/DroneBox.cpp:
GL_Primitive *DroneBox::droneIcon;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ArmamentControl.h:
const int ArmamentControl::BOX_SPACING_X;
const int ArmamentControl::BOX_SPACING_Y;
const int ArmamentControl::SMALL_BOX_OFFSET_X;
const int ArmamentControl::SMALL_BOX_POSITION_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/TouchTooltip.h:
const int TouchTooltip::SNAP_SPEED;
const int TouchTooltip::TOOLTIP_BORDER_X_INNER;
const int TouchTooltip::TOOLTIP_BORDER_X_OUTER;
const int TouchTooltip::TOOLTIP_BORDER_X_TOTAL;
const int TouchTooltip::TOOLTIP_BORDER_Y;
const int TouchTooltip::TOOLTIP_FONT;
const int TouchTooltip::TOOLTIP_GLOW_SIZE;
const int TouchTooltip::TOOLTIP_WIDTH;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/OptionsScreen.cpp:
static const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > languageList;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CEvent.cpp:
double CEvent::lastEventTime;
int CEvent::mouseX;
int CEvent::mouseY;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType-SIL.cpp:
static freetype::TextCache freetype::textCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.cpp:
SettingValues Settings::settings;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/AnimationControl.cpp:
AnimationControl AnimationControl::Animations;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int FileHelper::MAGIC_FD;
static const int FileHelper::MAGIC_FD;
static bool FileHelper::bLittleEndian;
static HANDLE FileHelper::currentFile;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int MAGIC_FD_BASE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int SAVE_FILE_READ_FD;
static const int SAVE_FILE_WRITE_FD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int SAVE_QUIT;
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FileHelper.cpp:
static const int STATS_READ_FD;
static const int STATS_WRITE_FD;
static std::vector<unsigned char, std::allocator<unsigned char> > saveFileData;
static unsigned int saveFileReadPos;
static std::vector<unsigned char, std::allocator<unsigned char> > statsFileData;
static unsigned int statsFileReadPos;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static std::vector<GL_Color, std::allocator<GL_Color> > colorTints;
static GL_Color currentColor;
static bool forceAntialias;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static Matrix4f matrix_stack[16];
static unsigned int matrix_stack_top;
static Matrix4f modelview_matrix;
static int primTypeForRender;
static std::vector<ScissorRegion, std::allocator<ScissorRegion> > scissorStack;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.cpp:
static std::vector<StencilState, std::allocator<StencilState> > stencilStack;
static StencilState stencilState;
static std::vector<GL_Vert, std::allocator<GL_Vert> > verticesForRender;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CFPS.cpp:
CFPS CFPS::FPSControl;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.cpp:
EventSystem EventSystem::EventManager;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Animation.cpp:
static PCache primitiveCache;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ResourceControl.cpp:
ResourceControl ResourceControl::GlobalResources;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.cpp:
TextLibrary Globals::Library;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.cpp:
RandomNumberGenerator Globals::RNG;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.cpp:
SoundControl SoundControl::Sounds;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.cpp:
EventGenerator EventGenerator::Generator;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
string itemStrings[abi:cxx11][3];
string resourceStrings[abi:cxx11][3];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int LOW;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int MEDIUM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/RewardGenerator.cpp:
static const int RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/GeneratorConstants.h:
static const int baseScrapReward;
static const int droneValues[3][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/GeneratorConstants.h:
static const int fuelValues[3][2];
static const float itemDropRates[3];
static const int missileValues[3][2];
static const int scrapPerSector;
static const float scrapVariance[3][2];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventsParser.cpp:
EventsParser EventsParser::Parser;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_upcase[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml_print.hpp:
static const int rapidxml::print_no_indenting;
static const int rapidxml::print_no_indenting;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventsParser.cpp:
static string text_data;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.h:
const int Sector::SECTOR_CIVILIAN;
const int Sector::SECTOR_HOSTILE;
const int Sector::SECTOR_NEBULA;
const int Sector::SECTOR_TYPES;
const int Sector::SECTOR_UNKNOWN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int BASED_DESTROYED_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int DANGER_ZONE_END;
static const int DANGER_ZONE_MOVE;
static const int DANGER_ZONE_RADIUS;
static const int DANGER_ZONE_START;
static const int DANGER_ZONE_TEX_CENTER;
static const int DANGER_ZONE_TEX_EDGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/StarMap.cpp:
static const int START_SIZE_X;
static const int START_SIZE_Y;
static const int STAR_GRID_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
BlueprintManager BlueprintManager::Blueprints;
GL_Texture *BlueprintManager::skillIcons[6][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
const int WeaponBlueprint::BOOST_COOLDOWN;
const int WeaponBlueprint::BOOST_DAMAGE;
const int WeaponBlueprint::BOOST_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
static const int RANDOM_SKILLS[8][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.cpp:
static string text_data;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AsteroidGenerator.h:
const int AsteroidGenerator::STATE_BARRAGE;
const int AsteroidGenerator::STATE_CALM;
const int AsteroidGenerator::STATE_COUNT;
const int AsteroidGenerator::STATE_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AI/CombatAI.h:
const int CombatAI::RANDOM;
const int CombatAI::STANCE_DISABLE;
const int CombatAI::STANCE_KILL_CREW;
const int CombatAI::STANCE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CombatControl.h:
const int CombatControl::SHIELD_CIRCLE_SIZE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CommandGui.h:
const int CommandGui::SHIP_CENTER_Y;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/CrewControl.h:
const float CrewControl::TOUCH_SELECT_DELAY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int EventDamage::TYPE_BOTH;
const int EventDamage::TYPE_BREACH;
const int EventDamage::TYPE_FIRE;
const int EventDamage::TYPE_NONE;
const int EventDamage::TYPE_RANDOM;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int ResourceEvent::UPGRADE_MAX;
const int ResourceEvent::UPGRADE_MISSING;
const int ResourceEvent::UPGRADE_NONE;
const int ResourceEvent::UPGRADE_SUCCESS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ShipStatus.h:
const int ShipStatus::HOVER_DRONES;
const int ShipStatus::HOVER_ENERGY;
const int ShipStatus::HOVER_EVADE;
const int ShipStatus::HOVER_FUEL;
const int ShipStatus::HOVER_HULL;
const int ShipStatus::HOVER_MISSILES;
const int ShipStatus::HOVER_OXYGEN;
const int ShipStatus::HOVER_SCRAP;
const int ShipStatus::HOVER_SHIELDS;
const int ShipStatus::MAX_SHIELDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/SpaceManager.h:
const int SpaceManager::horizontalShips;
const int SpaceManager::totalShips;
const int SpaceManager::verticalShips;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
const int StatusEffect::TARGET_ALL;
const int StatusEffect::TARGET_ENEMY;
const int StatusEffect::TARGET_PLAYER;
const int StatusEffect::TYPE_CLEAR;
const int StatusEffect::TYPE_DIVIDE;
const int StatusEffect::TYPE_LIMIT;
const int StatusEffect::TYPE_LOSS;
const int StatusEffect::TYPE_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/TutorialManager.h:
const int TutorialManager::SHIP_INTRODUCTION;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int DAMAGE_HULL;
static const int DAMAGE_SHIELD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/EventGenerator.h:
static const int ENV_ASTEROIDS;
static const int ENV_AVOIDED;
static const int ENV_NEBULA;
static const int ENV_NONE;
static const int ENV_PDS;
static const int ENV_PDS_FRIENDLY;
static const int ENV_PULSAR;
static const int ENV_STORM;
static const int ENV_SUN;
static const int ENV_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/WorldManager.cpp:
static const int EVENT_AUGMENT_FULL;
static const int EVENT_CLONED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/WorldManager.cpp:
static const int EVENT_EQUIP_FULL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int NO_MISSILE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/ShipGenerator.h:
static const int UPGRADE_DEFENSIVE;
static const int UPGRADE_NONE;
static const int UPGRADE_OFFENSIVE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/HackingSystem.cpp:
static const float HACKING_EFFECT_TIMER[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.h:
const int MindSystem::MIND_CONTROL;
const int MindSystem::MIND_NONE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const float DAMAGE_BOOST[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const float HEALTH_BOOST[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/MindSystem.cpp:
static const int MIND_CONTROL_COUNT[4];
static const int MIND_CONTROL_LOCK[4];
static const float MIND_CONTROL_TIMER[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.h:
const int Shields::ACTIVE_NO_POWER;
const int Shields::ACTIVE_SHIELD;
const int Shields::CHARGING_SHIELD;
const int Shields::UNACTIVE_SHIELD;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.cpp:
GL_Primitive *Shields::shieldsDownPrimitive;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/Shields.cpp:
static const float barrierCharge;
static const float barrierTimer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ProjectileFactory.h:
const int ProjectileFactory::FACTORY_BEAMS;
const int ProjectileFactory::FACTORY_BOMBS;
const int ProjectileFactory::FACTORY_BURST;
const int ProjectileFactory::FACTORY_LASER_BLAST;
const int ProjectileFactory::FACTORY_MISSILES;
const int ProjectileFactory::FACTORY_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/ShipSystem.h:
const int ShipSystem::STATUS_ACTIVE;
const int ShipSystem::STATUS_DAMAGED;
const int ShipSystem::STATUS_DESTROYED;
const int ShipSystem::STATUS_INACTIVE;
const int ShipSystem::STATUS_IONED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/ShipSystem.cpp:
GL_Primitive *ShipSystem::fireImage;
GL_Primitive *ShipSystem::glowBlue;
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ShipSystem::ComputerGlowInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ShipSystem::ComputerGlowInfo> > > ShipSystem::glowInfo[abi:cxx11];
GL_Primitive *ShipSystem::glowRed;
GL_Primitive *ShipSystem::glowWhite;
GL_Primitive *ShipSystem::lockBlue;
GL_Primitive *ShipSystem::lockHack;
GL_Primitive *ShipSystem::lockWhite;
GL_Primitive *ShipSystem::manningBarIon;
GL_Primitive *ShipSystem::manningBarLargeIon;
GL_Primitive *ShipSystem::manningBarLargeOff;
GL_Primitive *ShipSystem::manningBarLargeOn;
GL_Primitive *ShipSystem::manningBarOff;
GL_Primitive *ShipSystem::manningBarOn;
GL_Primitive *ShipSystem::manningGreen;
GL_Primitive *ShipSystem::manningOutline;
GL_Primitive *ShipSystem::manningWhite;
GL_Primitive *ShipSystem::manningYellow;
GL_Primitive *ShipSystem::sabotageImage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/SystemControl.h:
const int SystemControl::MAX_POWER_LEVEL;
const int SystemControl::height;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_attribute_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_digits[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_node_name[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws[256];
const unsigned char rapidxml::internal::lookup_tables<0>::lookup_whitespace[256];

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/rapidxml/rapidxml.hpp:
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_comment_nodes;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_declaration_node;
static const int rapidxml::parse_default;
static const int rapidxml::parse_default;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_doctype_node;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_fastest;
static const int rapidxml::parse_full;
static const int rapidxml::parse_full;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_data_nodes;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_element_values;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_entity_translation;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_string_terminators;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_no_utf8;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_non_destructive;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_normalize_whitespace;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_pi_nodes;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_trim_whitespace;
static const int rapidxml::parse_validate_closing_tags;
static const int rapidxml::parse_validate_closing_tags;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/CloneSystem.cpp:
static const int CLONE_HEALTH[4];
static const float CLONE_TIME[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMemberFactory.h:
static const int CREW_ALL;
static const int CREW_ENEMY;
static const int CREW_PLAYER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.h:
const int PowerManager::POWER_BOOST;
const int PowerManager::POWER_OFF;
const int PowerManager::POWER_ON;
const int PowerManager::TOTAL_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/PowerManager.cpp:
std::vector<PowerManager, std::allocator<PowerManager> > PowerManager::powerManagers;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;
static const int HANGAR;
static const int LOAD_GAME;
static const int MAIN_MENU;
static const int MAX_SECTOR;
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;
static const int STATS;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/Selectable.h:
const int Selectable::STATE_NOT_SELECTED;
const int Selectable::STATE_POTENTIAL;
const int Selectable::STATE_SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipSystems/TeleportSystem.h:
const int TeleportSystem::TELE_ARRIVE;
const int TeleportSystem::TELE_LEAVE;
const int TeleportSystem::TELE_NONE;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/font/core.c:
static IDArray fonts;
static IDArray texts;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/font/freetype.c:
uint8_t sil_freetype_antialias;
float sil_freetype_outline;
static struct FT_MemoryRec_ freetype_allocator;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/base.c:
static int display_height;
static GraphicsDisplayModeList *display_mode_list;
static GraphicsDisplayModeList *display_mode_list_no_refresh;
static int display_width;
static uint8_t has_windowed_mode;
static uint8_t initted;
static int num_display_devices;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/framebuffer.c:
static IDArray framebuffers;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/primitive.c:
static uint8_t in_primitive;
static int primitive_count;
static float *primitive_data;
static int primitive_data_bufsize;
static float primitive_data_static_buffer[256];
static uint8_t primitive_error;
static uint32_t primitive_format[4];
static uint8_t primitive_has_color;
static uint8_t primitive_has_texcoord;
static int primitive_size;
static GraphicsPrimitiveType primitive_type;
static IDArray primitives;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/shader.c:
static IDArray shader_pipelines;
static IDArray shaders;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/state.c:
static int viewport_height;
static int viewport_width;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/graphics/texture.c:
static IDArray textures;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/input.c:
static InputEvent coalesce_event;
static uint8_t coalesce_movement;
static int coalesce_mutex;
static struct {
    int next_in;
    int next_out;
    InputEvent buffer[1024];
} event_buffer;
static InputEventCallback event_callback;
static SysInputInfo info;
static uint8_t initted;
static JoystickInfo joystick_state[10];
static int key_modifier_state;
static uint8_t key_state[146];
static int last_key_pressed;
static int mouse_hscroll;
static uint8_t mouse_left;
static uint8_t mouse_middle;
static uint8_t mouse_right;
static int mouse_vscroll;
static float mouse_x;
static float mouse_y;
static int num_touches;
static int32_t text_buffer[1000];
static int text_buffer_len;
static int text_buffer_pos;
static uint8_t text_input_on;
static TouchState touches[32];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/math/dtrig.c:
static const float dsinf_table[24];
static const float dtanf_table[12];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/math/matrix.c:
const Matrix4f mat4_identity;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/movie/core.c:
static IDArray movies;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/random.c:
static uint64_t random_state;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/resource/core.c:
int bgdecomp_workqueue;
static const uint8_t TEST_block_load;
static const char * const TEST_override_path_prefix;
static const uint8_t TEST_silent_sync;
static const int8_t TEST_sync_order;
static int bgdecomp_buffer_size;
static int bgdecomp_on;
static int bgdecomp_threshold;
static PackageModuleInfo *packages;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/core.c:
static int allocate_channel_mutex;
static Channel *channels;
static uint8_t device_opened;
static uint8_t enable_headphone_disconnect;
static uint8_t enable_interpolation;
static uint8_t global_pause;
static uint8_t initted;
static int num_channels;
static int playback_rate;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/decode.c:
static struct {
    const SoundFormat format;
    SoundDecodeOpenFunc *open;
} decode_handlers[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sound/mixer.c:
static float base_volume;
static MixerChannelInfo *copy_channels;
static int mix_rate;
static MixerChannelInfo *mixer_channels;
static int mixer_initted;
static int mixer_mutex;
static int num_channels;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/thread.c:
const uint8_t TEST_fail_create_semaphore;
SysMutexID threads_mutex;
static const uint8_t TEST_fail_create_condvar;
static const uint8_t TEST_fail_create_thread;
static IDArray condvars;
static IDArray mutexes;
static IDArray semaphores;
static IDArray threads;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/time.c:
static uint64_t sys_epoch;
static uint32_t sys_unit;
static double sys_unit_in_sec;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/userdata.c:
static uint8_t flip_image_for_save;
static char *game_title;
static char *next_override_path;
static int num_stats;
static IDArray param_blocks;
static char *program_name;
static struct {
    UserStatInfo info;
    double value;
    uint8_t updated;
} *stats;
static int stats_mutex;
static char *userdata_path;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/utility/strformat.c:
static uint8_t fullwidth_enabled;
static uint8_t plus_as_fullwidth;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/utility/tinflate.c:
static const unsigned long crc32_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/workqueue.c:
static IDArray workqueues;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dsa.c:
GLuint opengl_current_texture_unit;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl.c:
static uint8_t has_debug_output;
static uint8_t has_dsa;
static uint8_t has_framebuffers;
static uint8_t has_separate_shaders;
static uint8_t has_shader_binaries;
static uint8_t has_texture_storage;
static uint8_t has_vertex_attrib_int;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl-funcs.h:
static void (*pglActiveTexture)(GLenum);
static void (*pglAttachShader)(GLuint, GLuint);
static void (*pglBindAttribLocation)(GLuint, GLuint, const GLchar *);
static void (*pglBindBuffer)(GLenum, GLuint);
static void (*pglBindFragDataLocation)(GLuint, GLuint, const GLchar *);
static void (*pglBindFramebuffer)(GLenum, GLuint);
static void (*pglBindProgramPipeline)(GLuint);
static void (*pglBindRenderbuffer)(GLenum, GLuint);
static void (*pglBindTexture)(GLenum, GLuint);
static void (*pglBindTextureUnit)(GLuint, GLuint);
static void (*pglBindVertexArray)(GLuint);
static void (*pglBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
static void (*pglBlendEquation)(GLenum);
static void (*pglBlendFunc)(GLenum, GLenum);
static void (*pglBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
static void (*pglBufferData)(GLenum, GLsizeiptr, const GLvoid *, GLenum);
static void (*pglBufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid *);
static GLenum (*pglCheckFramebufferStatus)(GLenum);
static GLenum (*pglCheckNamedFramebufferStatus)(GLuint, GLenum);
static void (*pglClear)(GLbitfield);
static void (*pglClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
static void (*pglClearDepth)(GLclampd);
static void (*pglClearStencil)(GLint);
static void (*pglColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
static void (*pglCompileShader)(GLuint);
static void (*pglCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
static void (*pglCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const GLvoid *);
static void (*pglCompressedTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const void *);
static void (*pglCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
static void (*pglCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*pglCopyTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*pglCreateFramebuffers)(GLsizei, GLuint *);
static GLuint (*pglCreateProgram)(void);
static void (*pglCreateProgramPipelines)(GLsizei, GLuint *);
static void (*pglCreateRenderbuffers)(GLsizei, GLuint *);
static GLuint (*pglCreateShader)(GLenum);
static void (*pglCreateTextures)(GLenum, GLsizei, GLuint *);
static void (*pglCullFace)(GLenum);
static void (*pglDebugMessageCallback)(GLDEBUGPROC, const void *);
static void (*pglDebugMessageControl)(GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean);
static void (*pglDebugMessageInsert)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *);
static void (*pglDeleteBuffers)(GLsizei, const GLuint *);
static void (*pglDeleteFramebuffers)(GLsizei, const GLuint *);
static void (*pglDeleteProgram)(GLuint);
static void (*pglDeleteProgramPipelines)(GLsizei, const GLuint *);
static void (*pglDeleteRenderbuffers)(GLsizei, const GLuint *);
static void (*pglDeleteShader)(GLuint);
static void (*pglDeleteTextures)(GLsizei, const GLuint *);
static void (*pglDeleteVertexArrays)(GLsizei, const GLuint *);
static void (*pglDepthFunc)(GLenum);
static void (*pglDepthMask)(GLboolean);
static void (*pglDepthRange)(GLclampd, GLclampd);
static void (*pglDetachShader)(GLuint, GLuint);
static void (*pglDisable)(GLenum);
static void (*pglDisableVertexAttribArray)(GLuint);
static void (*pglDrawArrays)(GLenum, GLint, GLsizei);
static void (*pglDrawElements)(GLenum, GLsizei, GLenum, const GLvoid *);
static void (*pglEnable)(GLenum);
static void (*pglEnableVertexAttribArray)(GLuint);
static void (*pglFinish)(void);
static void (*pglFlush)(void);
static void (*pglFramebufferRenderbuffer)(GLenum, GLenum, GLenum, GLuint);
static void (*pglFramebufferTexture2D)(GLenum, GLenum, GLenum, GLuint, GLint);
static void (*pglFrontFace)(GLenum);
static void (*pglGenBuffers)(GLsizei, GLuint *);
static void (*pglGenFramebuffers)(GLsizei, GLuint *);
static void (*pglGenProgramPipelines)(GLsizei, GLuint *);
static void (*pglGenRenderbuffers)(GLsizei, GLuint *);
static void (*pglGenTextures)(GLsizei, GLuint *);
static void (*pglGenVertexArrays)(GLsizei, GLuint *);
static void (*pglGenerateMipmap)(GLenum);
static void (*pglGenerateTextureMipmap)(GLuint);
static GLenum (*pglGetError)(void);
static void (*pglGetFloatv)(GLenum, GLfloat *);
static void (*pglGetFramebufferAttachmentParameteriv)(GLenum, GLenum, GLenum, GLint *);
static void (*pglGetIntegerv)(GLenum, GLint *);
static void (*pglGetNamedBufferSubData)(GLuint, GLintptr, GLsizeiptr, void *);
static void (*pglGetProgramBinary)(GLuint, GLsizei, GLsizei *, GLenum *, void *);
static void (*pglGetProgramInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetProgramPipelineInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetProgramPipelineiv)(GLuint, GLenum, GLint *);
static void (*pglGetProgramiv)(GLuint, GLenum, GLint *);
static void (*pglGetShaderInfoLog)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetShaderSource)(GLuint, GLsizei, GLsizei *, GLchar *);
static void (*pglGetShaderiv)(GLuint, GLenum, GLint *);
static const GLubyte *(*pglGetString)(GLenum);
static const GLubyte *(*pglGetStringi)(GLenum, GLuint);
static void (*pglGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid *);
static void (*pglGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat *);
static void (*pglGetTextureImage)(GLuint, GLint, GLenum, GLenum, GLsizei, void *);
static GLint (*pglGetUniformLocation)(GLuint, const GLchar *);
static void (*pglInvalidateFramebuffer)(GLenum, GLsizei, const GLenum *);
static void (*pglInvalidateNamedFramebufferData)(GLuint, GLsizei, const GLenum *);
static GLboolean (*pglIsEnabled)(GLenum);
static GLboolean (*pglIsProgram)(GLuint);
static GLboolean (*pglIsShader)(GLuint);
static void (*pglLinkProgram)(GLuint);
static void (*pglNamedFramebufferRenderbuffer)(GLuint, GLenum, GLenum, GLuint);
static void (*pglNamedFramebufferTexture)(GLuint, GLenum, GLuint, GLint);
static void (*pglNamedRenderbufferStorage)(GLuint, GLenum, GLsizei, GLsizei);
static void (*pglPixelStorei)(GLenum, GLint);
static void (*pglProgramBinary)(GLuint, GLenum, const void *, GLsizei);
static void (*pglProgramParameteri)(GLuint, GLenum, GLint);
static void (*pglProgramUniform1f)(GLuint, GLint, GLfloat);
static void (*pglProgramUniform1i)(GLuint, GLint, GLint);
static void (*pglProgramUniform2fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniform3fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniform4fv)(GLuint, GLint, GLsizei, const GLfloat *);
static void (*pglProgramUniformMatrix4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglRasterPos2i)(GLint, GLint);
static void (*pglReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *);
static void (*pglRenderbufferStorage)(GLenum, GLenum, GLsizei, GLsizei);
static void (*pglScissor)(GLint, GLint, GLsizei, GLsizei);
static void (*pglShaderSource)(GLuint, GLsizei, const GLchar * const *, const GLint *);
static void (*pglStencilFunc)(GLenum, GLint, GLuint);
static void (*pglStencilOp)(GLenum, GLenum, GLenum);
static void (*pglTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
static void (*pglTexParameteri)(GLenum, GLenum, GLint);
static void (*pglTexStorage2D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
static void (*pglTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
static void (*pglTextureParameteri)(GLuint, GLenum, GLint);
static void (*pglTextureStorage2D)(GLuint, GLsizei, GLenum, GLsizei, GLsizei);
static void (*pglTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);
static void (*pglUniform1f)(GLint, GLfloat);
static void (*pglUniform1fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform1i)(GLint, GLint);
static void (*pglUniform1iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform2f)(GLint, GLfloat, GLfloat);
static void (*pglUniform2fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform2i)(GLint, GLint, GLint);
static void (*pglUniform2iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
static void (*pglUniform3fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform3i)(GLint, GLint, GLint, GLint);
static void (*pglUniform3iv)(GLint, GLsizei, const GLint *);
static void (*pglUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
static void (*pglUniform4fv)(GLint, GLsizei, const GLfloat *);
static void (*pglUniform4i)(GLint, GLint, GLint, GLint, GLint);
static void (*pglUniform4iv)(GLint, GLsizei, const GLint *);
static void (*pglUniformMatrix2fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat *);
static void (*pglUseProgram)(GLuint);
static void (*pglUseProgramStages)(GLuint, GLbitfield, GLuint);
static void (*pglValidateProgram)(GLuint);
static void (*pglValidateProgramPipeline)(GLuint);
static void (*pglVertexAttribIPointer)(GLuint, GLint, GLenum, GLsizei, const GLvoid *);
static void (*pglVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid *);
static void (*pglViewport)(GLint, GLint, GLsizei, GLsizei);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/dyngl.c:
static void (*saved_glBindTextureUnit)(GLuint, GLuint);
static GLenum (*saved_glCheckNamedFramebufferStatus)(GLuint, GLenum);
static void (*saved_glCompressedTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, 
    const void *);
static void (*saved_glCopyTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
static void (*saved_glCreateFramebuffers)(GLsizei, GLuint *);
static void (*saved_glCreateProgramPipelines)(GLsizei, GLuint *);
static void (*saved_glCreateRenderbuffers)(GLsizei, GLuint *);
static void (*saved_glCreateTextures)(GLenum, GLsizei, GLuint *);
static void (*saved_glGenerateTextureMipmap)(GLuint);
static void (*saved_glGetTextureImage)(GLuint, GLint, GLenum, GLenum, GLsizei, void *);
static void (*saved_glInvalidateNamedFramebufferData)(GLuint, GLsizei, const GLenum *);
static void (*saved_glNamedFramebufferRenderbuffer)(GLuint, GLenum, GLenum, GLuint);
static void (*saved_glNamedFramebufferTexture)(GLuint, GLenum, GLuint, GLint);
static void (*saved_glNamedRenderbufferStorage)(GLuint, GLenum, GLsizei, GLsizei);
static void (*saved_glTextureParameteri)(GLuint, GLenum, GLint);
static void (*saved_glTextureStorage2D)(GLuint, GLsizei, GLenum, GLsizei, GLsizei);
static void (*saved_glTextureSubImage2D)(GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/framebuffer.c:
static OpenGLSysFramebuffer *current_framebuffer;
static GLuint default_framebuffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/graphics.c:
unsigned int opengl_device_generation;
int opengl_window_height;
int opengl_window_width;
int (*shader_compile_context_callback)(void);
static DeleteInfo *delete_info;
static uint8_t delete_info_fixed_size;
static int delete_info_len;
static int delete_info_size;
static uint32_t features_avail;
static uint32_t formats_supported;
static int glsl_major_version;
static int glsl_minor_version;
static int major_version;
static int minor_version;
static int opengl_thread;
static uint8_t wrapped_dsa;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/primitive.c:
static GLuint current_index_buffer;
static GLuint current_vertex_buffer;
static int immediate_vbo_sizes[128];
static GLuint immediate_vertex_buffers[128];
static int next_immediate_vbo;
static GLuint single_quad_index_buffer;
static const uint16_t single_quad_indices[6];
static uint8_t vertex_attrib_enabled[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader.c:
static char *attribute_bindings[256];
static uint8_t binary_retrievable_hint;
static OpenGLSysShaderPipeline *current_pipeline;
static int num_attribute_bindings;
static int standard_attribute_bindings[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader-gen.c:
static ShaderInfo *current_shader;
static ShaderSourceCallback *fragment_shader_source_callback;
static int num_user_attribs;
static int num_user_uniforms;
static ShaderKeyCallback *shader_key_callback;
static char **user_attrib_names;
static int8_t *user_attrib_sizes;
static UserUniformInfo *user_uniforms;
static ShaderSourceCallback *vertex_shader_source_callback;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/shader-table.c:
static uint8_t allow_dynamic_resize;
static uint64_t last_used_counter;
static TableEntry *shader_table;
static int shader_table_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/opengl/state.c:
OpenGLSysTexture *opengl_current_texture;
GLuint opengl_current_texture_id;
uint8_t opengl_framebuffer_changed;
Vector4f opengl_primitive_color;
uint8_t opengl_primitive_color_used;
uint8_t opengl_shader_objects_enabled;
static uint8_t alpha_reference_changed;
static GraphicsComparisonType alpha_test_comparison;
static uint8_t alpha_test_enabled;
static float alpha_test_reference;
static GLenum blend_alpha_dest;
static uint8_t blend_alpha_enabled;
static GLenum blend_alpha_src;
static Vector4f blend_color;
static GLenum blend_dest;
static uint8_t blend_enabled;
static GLenum blend_op;
static GLenum blend_src;
static int clip_bottom;
static uint8_t clip_enabled;
static int clip_height;
static int clip_left;
static int clip_width;
static uint8_t color_write_alpha;
static uint8_t color_write_blue;
static uint8_t color_write_green;
static uint8_t color_write_red;
static float depth_far;
static float depth_near;
static GLenum depth_test_comparison;
static uint8_t depth_test_enabled;
static uint8_t depth_write_enabled;
static uint8_t face_cull_cw;
static uint8_t face_cull_enabled;
static uint8_t fog_changed;
static Vector4f fog_color;
static uint8_t fog_enabled;
static float fog_end;
static Vector2f fog_params;
static float fog_start;
static Vector4f fog_transform;
static uint8_t fog_transform_changed;
static Matrix4f model_matrix;
static uint8_t model_matrix_changed;
static uint8_t model_matrix_is_identity;
static float point_size;
static uint8_t point_size_changed;
static uint8_t primitive_color_changed;
static Matrix4f projection_matrix;
static uint8_t projection_matrix_changed;
static GLenum stencil_comparison;
static unsigned int stencil_mask;
static GLenum stencil_op_dfail;
static GLenum stencil_op_dpass;
static GLenum stencil_op_sfail;
static unsigned int stencil_reference;
static uint8_t stencil_test_enabled;
static Vector2f texture_offset;
static uint8_t texture_offset_changed;
static uint8_t texture_offset_is_zero;
static Matrix4f transformation_matrix;
static uint8_t transformation_matrix_changed;
static Matrix4f view_matrix;
static uint8_t view_matrix_changed;
static int viewport_bottom;
static int viewport_height;
static int viewport_left;
static int viewport_width;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/misc/ioqueue.c:
static SysCondVarID enqueue_event;
static int first_pending;
static SysThreadID io_thread_id;
static int last_pending;
static int64_t read_limit;
static IORequest *requests;
static int requests_last_used;
static SysMutexID requests_mutex;
static int requests_size;
static uint8_t thread_stop_flag;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/misc/joystick-db.c:
static const JoystickDesc joystick_db[80];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/condvar.c:
void (*p_InitializeConditionVariable)(PCONDITION_VARIABLE);
BOOL (*p_SleepConditionVariableCS)(PCONDITION_VARIABLE, PCRITICAL_SECTION, DWORD);
void (*p_WakeAllConditionVariable)(PCONDITION_VARIABLE);
void (*p_WakeConditionVariable)(PCONDITION_VARIABLE);

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-base.c:
ID3D11DeviceContext *d3d_context;
ID3D11Device *d3d_device;
unsigned int d3d_device_generation;
D3D_FEATURE_LEVEL d3d_feature_level;
const char *d3dcompiler_name;
HRESULT (*p_D3DCompile)(LPCVOID, SIZE_T, LPCSTR, const D3D_SHADER_MACRO *, ID3DInclude *, LPCSTR, LPCSTR, UINT, UINT, 
    ID3DBlob **, ID3DBlob **);
HRESULT (*p_D3DReflect)(LPCVOID, SIZE_T, const IID * const, void **);
static HMODULE d3d11_handle;
static ID3D11Texture2D *d3d_default_rendertarget;
static ID3D11RenderTargetView *d3d_default_rtview;
static ID3D11Texture2D *d3d_depthbuffer;
static DXGI_FORMAT d3d_depthformat;
static ID3D11DepthStencilView *d3d_depthview;
static IDXGISwapChain *d3d_swapchain;
static HMODULE d3dcompiler_handle;
static PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN p_D3D11CreateDeviceAndSwapChain;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-framebuffer.c:
static D3DSysFramebuffer *current_framebuffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-inputlayout.c:
static ILCacheEntry il_cache[8191];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-primitive.c:
static char attrib_name[32][16];
static ID3D11Buffer *single_quad_index_buffer;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
uint8_t d3d_shader_objects_enabled;
static char *attribute_bindings[32];
static D3DSysShaderPipeline *current_pipeline;
static UINT debug_flag;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-defshaders.i:
static const D3DPrecompiledShader default_ps_bytecode[5][3][2][5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
static ID3D11PixelShader *default_ps_cache[5][3][2][5];
static ID3D11Buffer *default_ps_uniforms;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-defshaders.i:
static const D3DPrecompiledShader default_vs_bytecode[3][5][3][2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-shader.c:
static ID3D11VertexShader *default_vs_cache[3][5][3][2];
static ID3D11Buffer *default_vs_uniforms;
static uint8_t gen_shaders_installed;
static int num_attribute_bindings;
static UINT opt_flag;
static uint8_t save_shader_binaries;
static int standard_attribute_bindings[3];
static const char * conststandard_attribute_names[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-state.c:
static GraphicsComparisonType alpha_comparison;
static uint8_t alpha_test_enabled;
static D3D11_BLEND_DESC blend;
static Vector4f blend_color;
static uint8_t blend_dirty;
static uint8_t blend_separate_alpha;
static D3D11_RECT clip_region;
static uint8_t clip_region_dirty;
static int default_rt_height;
static int default_rt_width;
static uint8_t depth_write;
static D3D11_DEPTH_STENCIL_DESC depthstencil;
static uint8_t depthstencil_dirty;
static uint8_t fixed_color_used;
static uint8_t fog_enabled;
static float fog_end;
static uint8_t fog_range_dirty;
static float fog_start;
static Matrix4f model_matrix;
static uint8_t model_matrix_is_identity;
static Matrix4f projection_matrix;
static D3DPixelUniformBlock ps_data;
static uint8_t ps_data_dirty;
static D3D11_RASTERIZER_DESC raster;
static uint8_t raster_dirty;
static int safe_clear_color_uniform;
static D3DSysShaderPipeline *safe_clear_pipeline;
static uint8_t stencil_ref;
static uint8_t tex_offset_used;
static uint8_t transform_matrix_dirty;
static Matrix4f view_matrix;
static D3D11_VIEWPORT viewport;
static uint8_t viewport_dirty;
static D3DVertexUniformBlock vs_data;
static uint8_t vs_data_dirty;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/d3d-texture.c:
static D3DSysTexture *current_texture[16];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/files.c:
static AsyncInfo async_info[100];
static SysMutexID async_info_mutex;
static const int async_info_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/graphics.c:
static uint8_t center_window;
static HANDLE create_window_event;
static int current_device;
static int current_mode;
static HWND current_window;
static uint8_t d3d_available;
static int depth_bits;
static int desired_opengl_major;
static int desired_opengl_minor;
static DEVMODE *device_modes;
static int device_to_use;
static struct {
    char name[32];
    int default_mode;
} *devices;
static uint8_t fullscreen;
static uint8_t grab_requested;
static SysGraphicsInfo graphics_info;
static uint8_t initted;
static int8_t minimize_fullscreen;
static int minmax_override_height;
static int minmax_override_width;
static uint8_t mouse_grabbed;
static uint8_t multisample;
static int multisample_samples;
static HMODULE opengl32_handle;
static HGLRC (*p_wglCreateContext)(HDC);
static BOOL (*p_wglDeleteContext)(HGLRC);
static HGLRC (*p_wglGetCurrentContext)(void);
static PROC (*p_wglGetProcAddress)(const char *);
static BOOL (*p_wglMakeCurrent)(HDC, HGLRC);
static PFNWGLSWAPINTERVALEXTPROC p_wglSwapIntervalEXT;
static uint8_t quit_requested;
static float refresh_rate;
static int saved_mode;
static HANDLE setpixelformat_event;
static uint8_t show_mouse_pointer;
static uint8_t single_threaded;
static int stencil_bits;
static uint8_t use_direct3d;
static uint8_t use_opengl_debug;
static uint8_t vsync;
static HGLRC wgl_context;
static HDC wgl_context_dc;
static ATOM wgl_pixel_format_hack_class;
static const char * const wgl_pixel_format_hack_class_name;
static ATOM window_class;
static const char * const window_class_name;
static int window_depth_bits;
static uint8_t window_focused;
static uint8_t window_fullscreen;
static int window_height;
static uint8_t window_is_d3d;
static int window_max_aspect_x;
static int window_max_aspect_y;
static int window_max_height;
static int window_max_width;
static int window_min_aspect_x;
static int window_min_aspect_y;
static int window_min_height;
static int window_min_width;
static uint8_t window_minimized;
static uint8_t window_resizable;
static int window_resize_last_height;
static int window_resize_last_width;
static int window_resize_new_height;
static int window_resize_new_width;
static uint8_t window_resize_pending;
static int window_samples;
static int window_stencil_bits;
static HANDLE window_thread;
static char *window_title;
static int window_width;
static int window_x;
static int window_y;
static DWORD windowed_style;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/input.c:
static InputEventCallback event_callback;
static HMODULE hid_module;
static uint8_t initted;
static CRITICAL_SECTION input_message_lock;
static RAWINPUTDEVICE joystick_descs[2];
static SysSemaphoreID joystick_discovery_stop_sem;
static SysThreadID joystick_discovery_thread_id;
static SysInputJoystick *joystick_info;
static SysMutexID joystick_mutex;
static JoystickInfo *joysticks;
static unsigned int next_touch_id;
static int num_joysticks;
static boolean (*p_HidD_GetProductString)(HANDLE, PVOID, DWORD);
static boolean (*p_HidD_GetSerialNumberString)(HANDLE, PVOID, DWORD);
static LONG (*p_HidP_GetCaps)(PHIDP_PREPARSED_DATA, PHIDP_CAPS);
static LONG (*p_HidP_GetSpecificButtonCaps)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PHIDP_BUTTON_CAPS, 
    PULONG, PHIDP_PREPARSED_DATA);
static LONG (*p_HidP_GetSpecificValueCaps)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PHIDP_VALUE_CAPS, PULONG, 
    PHIDP_PREPARSED_DATA);
static LONG (*p_HidP_GetUsageValue)(HIDP_REPORT_TYPE, USAGE, unsigned short, USAGE, PULONG, PHIDP_PREPARSED_DATA, 
    PCHAR, DWORD);
static LONG (*p_HidP_GetUsagesEx)(HIDP_REPORT_TYPE, unsigned short, PUSAGE_AND_PAGE, DWORD *, PHIDP_PREPARSED_DATA, 
    PCHAR, DWORD);
static DWORD (*p_XInputGetCapabilities)(DWORD, DWORD, XINPUT_CAPABILITIES *);
static DWORD (*p_XInputGetState)(DWORD, XINPUT_STATE *);
static DWORD (*p_XInputSetState)(DWORD, XINPUT_VIBRATION *);
static uint16_t pending_utf16_surrogate;
static uint8_t text_active;
static uint8_t touch_available;
static struct {
    int pointer;
    unsigned int id;
} touch_map[32];
static uint8_t touch_to_mouse;
static uint8_t vk_map[256];
static const struct {
    uint16_t flag;
    uint8_t name;
} xinput_button_map[10];
static HMODULE xinput_module;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/main.c:
static const uint8_t TEST_windows_no_main_abort;
static char executable_dir[4096];
static LPTOP_LEVEL_EXCEPTION_FILTER original_exception_handler;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/misc.c:
static int last_error_code;
static DWORD last_windows_error_code;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound.c:
static HANDLE avrt_dll;
static AudioDriver *driver;
static SysSemaphoreID latency_change_complete;
static SysSemaphoreID latency_change_requested;
static int playback_thread_id;
static uint8_t playback_thread_stop;
static float requested_latency;
static uint8_t sound_initted;
static int sound_rate;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound-wasapi.c:
AudioDriver windows_wasapi_driver;
static float base_latency;
static uint16_t *chosen_device_id;
static IAudioClient *client;
static HANDLE completion_event;
static BYTE *current_buffer;
static LONG default_device_changed;
static uint16_t *default_device_id;
static uint8_t device_buffer_empty;
static DeviceInfo *device_list;
static SysMutexID device_list_mutex;
static IMMDeviceEnumerator *enumerator;
static const CLSID local_CLSID_MMDeviceEnumerator;
static const IID local_IID_IAudioClient;
static const IID local_IID_IAudioClockAdjustment;
static const IID local_IID_IAudioRenderClient;
static const IID local_IID_IMMDeviceEnumerator;
static const IID local_IID_IMMEndpoint;
static const IID local_IID_IMMNotificationClient;
static const GUID local_KSDATAFORMAT_SUBTYPE_IEEE_FLOAT;
static const GUID local_KSDATAFORMAT_SUBTYPE_PCM;
static const PROPERTYKEY local_PKEY_Device_FriendlyName;
static int16_t *mixer_buffer;
static int mixer_buffer_len;
static SILNotificationClient notification_client;
static IAudioRenderClient *render_client;
static int sound_channels;
static int sound_rate;
static int wasapi_buffer_len;
static enum {FORMAT_S16 = 1, FORMAT_S32, FORMAT_F32} wasapi_format;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/sound-winmm.c:
int next_buffer;
AudioDriver windows_winmm_driver;
static int buffer_len;
static AudioBuffer *buffers;
static HANDLE completion_event;
static int num_buffers;
static int sound_rate;
static HWAVEOUT wave_device;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/thread.c:
static DWORD sys_thread_key;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/time.c:
static uint64_t last_time;
static int ticks_per_sec;
static uint64_t time_offset;
static uint8_t time_shift;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/src/sysdep/windows/userdata.c:
const char * const TEST_windows_userdata_path;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftrfork.c:
static const ft_raccess_guess_rec ft_raccess_guess_table[9];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/fttrigon.c:
static const FT_Angle ft_trig_arctan_table[22];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftoutln.c:
static const FT_Outline null_outline;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftglyph.c:
const FT_Glyph_Class ft_bitmap_glyph_class;
const FT_Glyph_Class ft_outline_glyph_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftinit.c:
static const FT_Module_Class * constft_default_modules[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
const FT_Module_Class psnames_module_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const unsigned char ft_adobe_glyph_list[55997];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
static const FT_Int ft_extra_glyph_name_offsets[10];
static const char ft_extra_glyph_names[85];
static const FT_UInt32 ft_extra_glyph_unicodes[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const short ft_mac_names[258];
static const short ft_sid_names[391];
static const char ft_standard_glyph_names[3696];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/psmodule.c:
static const FT_Service_PsCMapsRec pscmaps_interface;
static const FT_ServiceDescRec pscmaps_services[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/psnames/pstables.h:
static const unsigned short t1_expert_encoding[256];
static const unsigned short t1_standard_encoding[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
const FT_Module_Class sfnt_module_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/ttcmap.c:
const TT_CMap_ClassRec tt_cmap0_class_rec;
const TT_CMap_ClassRec tt_cmap10_class_rec;
const TT_CMap_ClassRec tt_cmap12_class_rec;
const TT_CMap_ClassRec tt_cmap13_class_rec;
const TT_CMap_ClassRec tt_cmap14_class_rec;
const TT_CMap_ClassRec tt_cmap2_class_rec;
const TT_CMap_ClassRec tt_cmap4_class_rec;
const TT_CMap_ClassRec tt_cmap6_class_rec;
const TT_CMap_ClassRec tt_cmap8_class_rec;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
static const SFNT_Interface sfnt_interface;
static const FT_Service_BDFRec sfnt_service_bdf;
static const FT_Service_GlyphDictRec sfnt_service_glyph_dict;
static const FT_Service_PsFontNameRec sfnt_service_ps_name;
static const FT_Service_SFNT_TableRec sfnt_service_sfnt_table;
static const FT_ServiceDescRec sfnt_services[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/ttcmap.c:
static const TT_CMap_Class tt_cmap_classes[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/sfnt/sfdriver.c:
static const FT_Service_TTCMapsRec tt_service_get_cmap_info;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftgrays.c:
const FT_Raster_Funcs ft_grays_raster;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftsmooth.c:
const FT_Renderer_Class ft_smooth_lcd_renderer_class;
const FT_Renderer_Class ft_smooth_lcdv_renderer_class;
const FT_Renderer_Class ft_smooth_renderer_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/smooth/ftgrays.c:
static const FT_Outline_Funcs func_interface;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttinterp.c:
const TT_GraphicsState tt_default_graphics_state;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttdriver.c:
const FT_Driver_ClassRec tt_driver_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttinterp.c:
static const FT_Byte Pop_Push_Count[256];
static const FT_Char opcode_length[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/truetype/ttdriver.c:
static const FT_Service_MultiMastersRec tt_service_gx_multi_masters;
static const FT_Service_PropertiesRec tt_service_properties;
static const FT_Service_TrueTypeEngineRec tt_service_truetype_engine;
static const FT_Service_TTGlyfRec tt_service_truetype_glyf;
static const FT_ServiceDescRec tt_services[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_arab_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_arab_nonbase_uniranges[19];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_arab_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_arab_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afmodule.c:
const FT_AutoHinter_InterfaceRec af_autofitter_interface;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_beng_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_beng_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_beng_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_beng_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afblue.c:
const char af_blue_strings[1904];
const AF_Blue_StringRec af_blue_stringsets[90];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afcjk.c:
const AF_WritingSystemClassRec af_cjk_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_c2cp_style_class;
const AF_StyleClassRec af_cyrl_c2sc_style_class;
const AF_StyleClassRec af_cyrl_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_cyrl_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_ordn_style_class;
const AF_StyleClassRec af_cyrl_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_cyrl_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_cyrl_sinf_style_class;
const AF_StyleClassRec af_cyrl_smcp_style_class;
const AF_StyleClassRec af_cyrl_subs_style_class;
const AF_StyleClassRec af_cyrl_sups_style_class;
const AF_StyleClassRec af_cyrl_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_cyrl_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_deva_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_deva_nonbase_uniranges[8];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_deva_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_deva_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afdummy.c:
const AF_WritingSystemClassRec af_dummy_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_c2cp_style_class;
const AF_StyleClassRec af_grek_c2sc_style_class;
const AF_StyleClassRec af_grek_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_grek_nonbase_uniranges[8];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_ordn_style_class;
const AF_StyleClassRec af_grek_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_grek_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_grek_sinf_style_class;
const AF_StyleClassRec af_grek_smcp_style_class;
const AF_StyleClassRec af_grek_subs_style_class;
const AF_StyleClassRec af_grek_sups_style_class;
const AF_StyleClassRec af_grek_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_grek_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_gujr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_gujr_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_gujr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_gujr_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_guru_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_guru_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_guru_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_guru_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_hani_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hani_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_hani_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hani_uniranges[31];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_hebr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hebr_nonbase_uniranges[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_hebr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_hebr_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afindic.c:
const AF_WritingSystemClassRec af_indic_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_khmr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khmr_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_khmr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khmr_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_khms_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khms_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_khms_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_khms_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_knda_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_knda_nonbase_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_knda_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_knda_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_lao_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_lao_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_lao_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_lao_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latb_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latb_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latb_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latb_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/aflatin.c:
const AF_WritingSystemClassRec af_latin_writing_system_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_c2cp_style_class;
const AF_StyleClassRec af_latn_c2sc_style_class;
const AF_StyleClassRec af_latn_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latn_nonbase_uniranges[17];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_ordn_style_class;
const AF_StyleClassRec af_latn_pcap_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latn_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latn_sinf_style_class;
const AF_StyleClassRec af_latn_smcp_style_class;
const AF_StyleClassRec af_latn_subs_style_class;
const AF_StyleClassRec af_latn_sups_style_class;
const AF_StyleClassRec af_latn_titl_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latn_uniranges[33];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_latp_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latp_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_latp_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_latp_uniranges[14];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_limb_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_limb_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_limb_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_limb_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_mlym_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mlym_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_mlym_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mlym_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_mymr_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mymr_nonbase_uniranges[13];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_mymr_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_mymr_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_none_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_none_nonbase_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_none_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_none_uniranges[1];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_orya_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_orya_nonbase_uniranges[7];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_orya_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_orya_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_ScriptClass af_script_classes[29];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sinh_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sinh_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sinh_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sinh_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_StyleClass af_style_classes[56];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sund_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sund_nonbase_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sund_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sund_uniranges[3];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_sylo_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sylo_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_sylo_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_sylo_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_taml_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_taml_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_taml_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_taml_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_telu_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_telu_nonbase_uniranges[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_telu_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_telu_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_thai_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_thai_nonbase_uniranges[4];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_thai_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_thai_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afstyles.h:
const AF_StyleClassRec af_tibt_dflt_style_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_tibt_nonbase_uniranges[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afscript.h:
const AF_ScriptClassRec af_tibt_script_class;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afranges.c:
const AF_Script_UniRangeRec af_tibt_uniranges[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afglobal.c:
const AF_WritingSystemClass af_writing_system_classes[5];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afmodule.c:
const FT_Module_Class autofit_module_class;
static const FT_Service_PropertiesRec af_service_properties;
static const FT_ServiceDescRec af_services[2];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/autofit/afwarp.c:
static const AF_WarpScore af_warper_weights[64];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/freetype/src/base/ftbitmap.c:
static const FT_Bitmap null_bitmap;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libnogg/src/decode/decode.c:
static const float floor1_inverse_db_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libnogg/src/decode/crc32.c:
uint32_t crc_table[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libpng/pngerror.c:
static const char png_digit[16];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/libpng/pngtrans.c:
static const png_byte fourbppswaptable[256];
static const png_byte onebppswaptable[256];
static const png_byte twobppswaptable[256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/crc32.h:
static const z_crc_t crc_table[8][256];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/deflate.c:
const char deflate_copyright[69];
static const config configuration_table[10];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/inftrees.c:
const char inflate_copyright[48];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
const uch _dist_code[512];
const uch _length_code[256];
static const int base_dist[30];
static const int base_length[29];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.c:
static const uch bl_order[19];
static const int extra_blbits[19];
static const int extra_dbits[30];
static const int extra_lbits[29];
static const static_tree_desc static_bl_desc;
static const static_tree_desc static_d_desc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
static const ct_data static_dtree[30];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.c:
static const static_tree_desc static_l_desc;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/trees.h:
static const ct_data static_ltree[288];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/lib/SIL/external/zlib/zutil.c:
const char * constz_errmsg[10];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID ALL_POWERSCHEMES_GUID;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID CLSID_CDirect3DRM;
const GUID CLSID_CDirect3DRMAnimation;
const GUID CLSID_CDirect3DRMAnimationSet;
const GUID CLSID_CDirect3DRMClippedVisual;
const GUID CLSID_CDirect3DRMDevice;
const GUID CLSID_CDirect3DRMFace;
const GUID CLSID_CDirect3DRMFrame;
const GUID CLSID_CDirect3DRMFrameInterpolator;
const GUID CLSID_CDirect3DRMLight;
const GUID CLSID_CDirect3DRMLightInterpolator;
const GUID CLSID_CDirect3DRMMaterial;
const GUID CLSID_CDirect3DRMMaterialInterpolator;
const GUID CLSID_CDirect3DRMMesh;
const GUID CLSID_CDirect3DRMMeshBuilder;
const GUID CLSID_CDirect3DRMMeshInterpolator;
const GUID CLSID_CDirect3DRMProgressiveMesh;
const GUID CLSID_CDirect3DRMShadow;
const GUID CLSID_CDirect3DRMTexture;
const GUID CLSID_CDirect3DRMTextureInterpolator;
const GUID CLSID_CDirect3DRMUserVisual;
const GUID CLSID_CDirect3DRMViewport;
const GUID CLSID_CDirect3DRMViewportInterpolator;
const GUID CLSID_CDirect3DRMWrap;
const GUID CLSID_CDirectXFile;
const GUID CLSID_DP8SP_BLUETOOTH;
const GUID CLSID_DP8SP_IPX;
const GUID CLSID_DP8SP_MODEM;
const GUID CLSID_DP8SP_SERIAL;
const GUID CLSID_DP8SP_TCPIP;
const GUID CLSID_DirectDraw;
const GUID CLSID_DirectDraw7;
const GUID CLSID_DirectDrawClipper;
const GUID CLSID_DirectDrawFactory2;
const GUID CLSID_DirectInput;
const GUID CLSID_DirectInput8;
const GUID CLSID_DirectInputDevice;
const GUID CLSID_DirectInputDevice8;
const GUID CLSID_DirectMusic;
const GUID CLSID_DirectMusicAudioPathConfig;
const GUID CLSID_DirectMusicBand;
const GUID CLSID_DirectMusicBandTrack;
const GUID CLSID_DirectMusicChordMap;
const GUID CLSID_DirectMusicChordMapTrack;
const GUID CLSID_DirectMusicChordTrack;
const GUID CLSID_DirectMusicCollection;
const GUID CLSID_DirectMusicCommandTrack;
const GUID CLSID_DirectMusicComposer;
const GUID CLSID_DirectMusicContainer;
const GUID CLSID_DirectMusicGraph;
const GUID CLSID_DirectMusicLoader;
const GUID CLSID_DirectMusicLyricsTrack;
const GUID CLSID_DirectMusicMarkerTrack;
const GUID CLSID_DirectMusicMelodyFormulationTrack;
const GUID CLSID_DirectMusicMotifTrack;
const GUID CLSID_DirectMusicMuteTrack;
const GUID CLSID_DirectMusicParamControlTrack;
const GUID CLSID_DirectMusicPatternTrack;
const GUID CLSID_DirectMusicPerformance;
const GUID CLSID_DirectMusicScript;
const GUID CLSID_DirectMusicScriptTrack;
const GUID CLSID_DirectMusicSegment;
const GUID CLSID_DirectMusicSegmentState;
const GUID CLSID_DirectMusicSegmentTriggerTrack;
const GUID CLSID_DirectMusicSeqTrack;
const GUID CLSID_DirectMusicSignPostTrack;
const GUID CLSID_DirectMusicSong;
const GUID CLSID_DirectMusicStyle;
const GUID CLSID_DirectMusicStyleTrack;
const GUID CLSID_DirectMusicSynth;
const GUID CLSID_DirectMusicSysExTrack;
const GUID CLSID_DirectMusicTempoTrack;
const GUID CLSID_DirectMusicTimeSigTrack;
const GUID CLSID_DirectMusicWaveTrack;
const GUID CLSID_DirectPlay;
const GUID CLSID_DirectPlay8Address;
const GUID CLSID_DirectPlay8Client;
const GUID CLSID_DirectPlay8LobbiedApplication;
const GUID CLSID_DirectPlay8LobbyClient;
const GUID CLSID_DirectPlay8NATResolver;
const GUID CLSID_DirectPlay8Peer;
const GUID CLSID_DirectPlay8Server;
const GUID CLSID_DirectPlay8ThreadPool;
const GUID CLSID_DirectPlayLobby;
const GUID CLSID_DirectPlayVoiceClient;
const GUID CLSID_DirectPlayVoiceServer;
const GUID CLSID_DirectPlayVoiceTest;
const GUID CLSID_DirectSound;
const GUID CLSID_DirectSound8;
const GUID CLSID_DirectSoundCapture;
const GUID CLSID_DirectSoundCapture8;
const GUID CLSID_DirectSoundFullDuplex;
const GUID CLSID_DirectSoundPrivate;
const GUID CLSID_DirectSoundWave;
const GUID DDVPTYPE_BROOKTREE;
const GUID DDVPTYPE_CCIR656;
const GUID DDVPTYPE_E_HREFH_VREFH;
const GUID DDVPTYPE_E_HREFH_VREFL;
const GUID DDVPTYPE_E_HREFL_VREFH;
const GUID DDVPTYPE_E_HREFL_VREFL;
const GUID DDVPTYPE_PHILIPS;
const GUID DPAID_ComPort;
const GUID DPAID_INet;
const GUID DPAID_INetPort;
const GUID DPAID_INetW;
const GUID DPAID_LobbyProvider;
const GUID DPAID_Modem;
const GUID DPAID_ModemW;
const GUID DPAID_Phone;
const GUID DPAID_PhoneW;
const GUID DPAID_ServiceProvider;
const GUID DPAID_TotalSize;
const GUID DPLPROPERTY_LobbyGuid;
const GUID DPLPROPERTY_MessagesSupported;
const GUID DPLPROPERTY_PlayerGuid;
const GUID DPLPROPERTY_PlayerScore;
const GUID DPSPGUID_IPX;
const GUID DPSPGUID_MODEM;
const GUID DPSPGUID_SERIAL;
const GUID DPSPGUID_TCPIP;
const GUID DPVCTGUID_ADPCM;
const GUID DPVCTGUID_GSM;
const GUID DPVCTGUID_NONE;
const GUID DPVCTGUID_SC03;
const GUID DPVCTGUID_SC06;
const GUID DPVCTGUID_TRUESPEECH;
const GUID DPVCTGUID_VR12;
const GUID DS3DALG_HRTF_FULL;
const GUID DS3DALG_HRTF_LIGHT;
const GUID DS3DALG_NO_VIRTUALIZATION;
const GUID DSDEVID_DefaultCapture;
const GUID DSDEVID_DefaultPlayback;
const GUID DSDEVID_DefaultVoiceCapture;
const GUID DSDEVID_DefaultVoicePlayback;
const GUID DSPROPSETID_DirectSoundDevice;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_ACDC_POWER_SOURCE;
const GUID GUID_ACTIVE_POWERSCHEME;
const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP;
const GUID GUID_ALLOW_AWAYMODE;
const GUID GUID_ALLOW_DISPLAY_REQUIRED;
const GUID GUID_ALLOW_RTC_WAKE;
const GUID GUID_ALLOW_STANDBY_STATES;
const GUID GUID_ALLOW_SYSTEM_REQUIRED;
const GUID GUID_APPLAUNCH_BUTTON;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_All_Objects;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_BACKGROUND_TASK_NOTIFICATION;
const GUID GUID_BATTERY_DISCHARGE_ACTION_0;
const GUID GUID_BATTERY_DISCHARGE_ACTION_1;
const GUID GUID_BATTERY_DISCHARGE_ACTION_2;
const GUID GUID_BATTERY_DISCHARGE_ACTION_3;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_0;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_1;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_2;
const GUID GUID_BATTERY_DISCHARGE_FLAGS_3;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_0;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_1;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_2;
const GUID GUID_BATTERY_DISCHARGE_LEVEL_3;
const GUID GUID_BATTERY_PERCENTAGE_REMAINING;
const GUID GUID_BATTERY_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_BandParam;
const GUID GUID_Buffer_3D_Dry;
const GUID GUID_Buffer_EnvReverb;
const GUID GUID_Buffer_Mono;
const GUID GUID_Buffer_Reverb;
const GUID GUID_Buffer_Stereo;
const GUID GUID_Button;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_CONSOLE_DISPLAY_STATE;
const GUID GUID_CRITICAL_POWER_TRANSITION;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_ChordParam;
const GUID GUID_Clear_All_Bands;
const GUID GUID_Clear_All_MelodyFragments;
const GUID GUID_ColorControlCallbacks;
const GUID GUID_CommandParam;
const GUID GUID_CommandParam2;
const GUID GUID_CommandParamNext;
const GUID GUID_ConnectToDLSCollection;
const GUID GUID_ConstantForce;
const GUID GUID_CustomForce;
const GUID GUID_D3DCallbacks2;
const GUID GUID_D3DCallbacks3;
const GUID GUID_D3DExtendedCaps;
const GUID GUID_D3DParseUnknownCommandCallback;
const GUID GUID_DDMoreCaps;
const GUID GUID_DDMoreSurfaceCaps;
const GUID GUID_DDStereoMode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_DEVICE_IDLE_POLICY;
const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS;
const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winioctl.h:
const GUID GUID_DEVINTERFACE_CDCHANGER;
const GUID GUID_DEVINTERFACE_CDROM;
const GUID GUID_DEVINTERFACE_COMPORT;
const GUID GUID_DEVINTERFACE_DISK;
const GUID GUID_DEVINTERFACE_FLOPPY;
const GUID GUID_DEVINTERFACE_MEDIUMCHANGER;
const GUID GUID_DEVINTERFACE_PARTITION;
const GUID GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR;
const GUID GUID_DEVINTERFACE_STORAGEPORT;
const GUID GUID_DEVINTERFACE_TAPE;
const GUID GUID_DEVINTERFACE_VOLUME;
const GUID GUID_DEVINTERFACE_WRITEONCEDISK;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_DISK_ADAPTIVE_POWERDOWN;
const GUID GUID_DISK_BURST_IGNORE_THRESHOLD;
const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT;
const GUID GUID_DISK_IDLE_TIMEOUT;
const GUID GUID_DISK_POWERDOWN_TIMEOUT;
const GUID GUID_DISK_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_DMUS_PROP_DLS1;
const GUID GUID_DMUS_PROP_DLS2;
const GUID GUID_DMUS_PROP_Effects;
const GUID GUID_DMUS_PROP_GM_Hardware;
const GUID GUID_DMUS_PROP_GS_Capable;
const GUID GUID_DMUS_PROP_GS_Hardware;
const GUID GUID_DMUS_PROP_INSTRUMENT2;
const GUID GUID_DMUS_PROP_LegacyCaps;
const GUID GUID_DMUS_PROP_MemorySize;
const GUID GUID_DMUS_PROP_SampleMemorySize;
const GUID GUID_DMUS_PROP_SamplePlaybackRate;
const GUID GUID_DMUS_PROP_SynthSink_DSOUND;
const GUID GUID_DMUS_PROP_SynthSink_WAVE;
const GUID GUID_DMUS_PROP_Volume;
const GUID GUID_DMUS_PROP_WavesReverb;
const GUID GUID_DMUS_PROP_WriteLatency;
const GUID GUID_DMUS_PROP_WritePeriod;
const GUID GUID_DMUS_PROP_XG_Capable;
const GUID GUID_DMUS_PROP_XG_Hardware;
const GUID GUID_DSCFX_CLASS_AEC;
const GUID GUID_DSCFX_CLASS_NS;
const GUID GUID_DSCFX_MS_AEC;
const GUID GUID_DSCFX_MS_NS;
const GUID GUID_DSCFX_SYSTEM_AEC;
const GUID GUID_DSCFX_SYSTEM_NS;
const GUID GUID_DSFX_STANDARD_CHORUS;
const GUID GUID_DSFX_STANDARD_COMPRESSOR;
const GUID GUID_DSFX_STANDARD_DISTORTION;
const GUID GUID_DSFX_STANDARD_ECHO;
const GUID GUID_DSFX_STANDARD_FLANGER;
const GUID GUID_DSFX_STANDARD_GARGLE;
const GUID GUID_DSFX_STANDARD_I3DL2REVERB;
const GUID GUID_DSFX_STANDARD_PARAMEQ;
const GUID GUID_DSFX_WAVES_REVERB;
const GUID GUID_Damper;
const GUID GUID_DefaultGMCollection;
const GUID GUID_DirectDrawPaletteStream;
const GUID GUID_DirectDrawSurfaceStream;
const GUID GUID_DirectMusicAllTypes;
const GUID GUID_DisableTempo;
const GUID GUID_DisableTimeSig;
const GUID GUID_Disable_Auto_Download;
const GUID GUID_Download;
const GUID GUID_DownloadToAudioPath;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN;
const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_EnableTempo;
const GUID GUID_EnableTimeSig;
const GUID GUID_Enable_Auto_Download;
const GUID GUID_Friction;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_GLOBAL_USER_PRESENCE;
const GUID GUID_HIBERNATE_FASTS4_POLICY;
const GUID GUID_HIBERNATE_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_HIDClass;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_IDLE_BACKGROUND_TASK;
const GUID GUID_IDLE_RESILIENCY_PERIOD;
const GUID GUID_IDLE_RESILIENCY_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_IDirectMusicBand;
const GUID GUID_IDirectMusicChordMap;
const GUID GUID_IDirectMusicStyle;
const GUID GUID_Inertia;
const GUID GUID_Joystick;
const GUID GUID_KernelCallbacks;
const GUID GUID_KernelCaps;
const GUID GUID_Key;
const GUID GUID_KeyboardClass;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_LIDCLOSE_ACTION;
const GUID GUID_LIDOPEN_POWERSTATE;
const GUID GUID_LIDSWITCH_STATE_CHANGE;
const GUID GUID_LOCK_CONSOLE_ON_WAKE;
const GUID GUID_MAX_POWER_SAVINGS;
const GUID GUID_MIN_POWER_SAVINGS;
const GUID GUID_MONITOR_POWER_ON;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_MediaClass;
const GUID GUID_MelodyFragment;
const GUID GUID_Miscellaneous2Callbacks;
const GUID GUID_MiscellaneousCallbacks;
const GUID GUID_MotionCompCallbacks;
const GUID GUID_MouseClass;
const GUID GUID_MuteParam;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_NOTIFICATION_CHORD;
const GUID GUID_NOTIFICATION_COMMAND;
const GUID GUID_NOTIFICATION_MEASUREANDBEAT;
const GUID GUID_NOTIFICATION_PERFORMANCE;
const GUID GUID_NOTIFICATION_RECOMPOSE;
const GUID GUID_NOTIFICATION_SEGMENT;
const GUID GUID_NTCallbacks;
const GUID GUID_NonLocalVidMemCaps;
const GUID GUID_OptSurfaceKmodeInfo;
const GUID GUID_OptSurfaceUmodeInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_PCIEXPRESS_ASPM_POLICY;
const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_POV;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_POWERBUTTON_ACTION;
const GUID GUID_POWERSCHEME_PERSONALITY;
const GUID GUID_PROCESSOR_ALLOW_THROTTLING;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME;
const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES;
const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD;
const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING;
const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY;
const GUID GUID_PROCESSOR_IDLESTATE_POLICY;
const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING;
const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD;
const GUID GUID_PROCESSOR_IDLE_DISABLE;
const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD;
const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM;
const GUID GUID_PROCESSOR_IDLE_TIME_CHECK;
const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD;
const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE;
const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD;
const GUID GUID_PROCESSOR_PARKING_PERF_STATE;
const GUID GUID_PROCESSOR_PERFSTATE_POLICY;
const GUID GUID_PROCESSOR_PERF_BOOST_MODE;
const GUID GUID_PROCESSOR_PERF_BOOST_POLICY;
const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY;
const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD;
const GUID GUID_PROCESSOR_PERF_DECREASE_TIME;
const GUID GUID_PROCESSOR_PERF_HISTORY;
const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY;
const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD;
const GUID GUID_PROCESSOR_PERF_INCREASE_TIME;
const GUID GUID_PROCESSOR_PERF_LATENCY_HINT;
const GUID GUID_PROCESSOR_PERF_TIME_CHECK;
const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP;
const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM;
const GUID GUID_PROCESSOR_THROTTLE_MINIMUM;
const GUID GUID_PROCESSOR_THROTTLE_POLICY;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_PerfAutoDownload;
const GUID GUID_PerfMasterGrooveLevel;
const GUID GUID_PerfMasterTempo;
const GUID GUID_PerfMasterVolume;
const GUID GUID_Play_Marker;
const GUID GUID_RampForce;
const GUID GUID_RhythmParam;
const GUID GUID_RxAxis;
const GUID GUID_RyAxis;
const GUID GUID_RzAxis;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_SESSION_DISPLAY_STATUS;
const GUID GUID_SESSION_USER_PRESENCE;
const GUID GUID_SLEEPBUTTON_ACTION;
const GUID GUID_SLEEP_IDLE_THRESHOLD;
const GUID GUID_SLEEP_SUBGROUP;
const GUID GUID_STANDBY_TIMEOUT;
const GUID GUID_SYSTEM_AWAYMODE;
const GUID GUID_SYSTEM_BUTTON_SUBGROUP;
const GUID GUID_SYSTEM_COOLING_POLICY;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_SawtoothDown;
const GUID GUID_SawtoothUp;
const GUID GUID_SeedVariations;
const GUID GUID_Sine;
const GUID GUID_Slider;
const GUID GUID_Spring;
const GUID GUID_Square;
const GUID GUID_StandardMIDIFile;
const GUID GUID_Synth_Default;
const GUID GUID_SysKeyboard;
const GUID GUID_SysKeyboardEm;
const GUID GUID_SysKeyboardEm2;
const GUID GUID_SysMouse;
const GUID GUID_SysMouseEm;
const GUID GUID_SysMouseEm2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_TYPICAL_POWER_SAVINGS;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_TempoParam;
const GUID GUID_TimeSignature;
const GUID GUID_Triangle;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_UNATTEND_SLEEP_TIMEOUT;
const GUID GUID_USERINTERFACEBUTTON_ACTION;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_Unknown;
const GUID GUID_Unload;
const GUID GUID_UnloadFromAudioPath;
const GUID GUID_UserModeDriverInfo;
const GUID GUID_UserModeDriverPassword;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS;
const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE;
const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN;
const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT;
const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT;
const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS;
const GUID GUID_VIDEO_DIM_TIMEOUT;
const GUID GUID_VIDEO_POWERDOWN_TIMEOUT;
const GUID GUID_VIDEO_SUBGROUP;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID GUID_Valid_Start_Time;
const GUID GUID_Variations;
const GUID GUID_VideoPortCallbacks;
const GUID GUID_VideoPortCaps;
const GUID GUID_XAxis;
const GUID GUID_YAxis;
const GUID GUID_ZAxis;
const GUID GUID_ZPixelFormats;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_AsyncIAdviseSink;
const GUID IID_AsyncIAdviseSink2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_AsyncIMultiQI;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_AsyncIUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAddrExclusionControl;
const GUID IID_IAddrTrackingControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IAdviseSink;
const GUID IID_IAdviseSink2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IAdviseSinkEx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAgileObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IApartmentShutdown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IAsyncManager;
const GUID IID_IAsyncRpcChannelBuffer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IAuthenticate;
const GUID IID_IAuthenticateEx;
const GUID IID_IBindCallbackRedirect;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IBindCtx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IBindHost;
const GUID IID_IBindProtocol;
const GUID IID_IBindStatusCallback;
const GUID IID_IBindStatusCallbackEx;
const GUID IID_IBinding;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IBlockingLock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ICallFactory;
const GUID IID_ICancelMethodCalls;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ICatalogFileInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IChannelHook;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IClassActivator;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_IClassFactory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IClassFactory2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IClientSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ICodeInstall;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IComThreadingInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IConnectionPoint;
const GUID IID_IConnectionPointContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IContinue;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ICreateErrorInfo;
const GUID IID_ICreateTypeInfo;
const GUID IID_ICreateTypeInfo2;
const GUID IID_ICreateTypeLib;
const GUID IID_ICreateTypeLib2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Asynchronous;
const GUID IID_ID3D10BlendState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10BlendState1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3dcommon.h:
const GUID IID_ID3D10Blob;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Buffer;
const GUID IID_ID3D10Counter;
const GUID IID_ID3D10DepthStencilState;
const GUID IID_ID3D10DepthStencilView;
const GUID IID_ID3D10Device;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10Device1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10DeviceChild;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10effect.h:
const GUID IID_ID3D10Effect;
const GUID IID_ID3D10EffectBlendVariable;
const GUID IID_ID3D10EffectConstantBuffer;
const GUID IID_ID3D10EffectDepthStencilVariable;
const GUID IID_ID3D10EffectDepthStencilViewVariable;
const GUID IID_ID3D10EffectMatrixVariable;
const GUID IID_ID3D10EffectPass;
const GUID IID_ID3D10EffectPool;
const GUID IID_ID3D10EffectRasterizerVariable;
const GUID IID_ID3D10EffectRenderTargetViewVariable;
const GUID IID_ID3D10EffectSamplerVariable;
const GUID IID_ID3D10EffectScalarVariable;
const GUID IID_ID3D10EffectShaderResourceVariable;
const GUID IID_ID3D10EffectShaderVariable;
const GUID IID_ID3D10EffectStringVariable;
const GUID IID_ID3D10EffectTechnique;
const GUID IID_ID3D10EffectType;
const GUID IID_ID3D10EffectVariable;
const GUID IID_ID3D10EffectVectorVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10GeometryShader;
const GUID IID_ID3D10InputLayout;
const GUID IID_ID3D10Multithread;
const GUID IID_ID3D10PixelShader;
const GUID IID_ID3D10Predicate;
const GUID IID_ID3D10Query;
const GUID IID_ID3D10RasterizerState;
const GUID IID_ID3D10RenderTargetView;
const GUID IID_ID3D10Resource;
const GUID IID_ID3D10SamplerState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10shader.h:
const GUID IID_ID3D10ShaderReflection;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1shader.h:
const GUID IID_ID3D10ShaderReflection1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10shader.h:
const GUID IID_ID3D10ShaderReflectionConstantBuffer;
const GUID IID_ID3D10ShaderReflectionType;
const GUID IID_ID3D10ShaderReflectionVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10ShaderResourceView;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10_1.h:
const GUID IID_ID3D10ShaderResourceView1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10effect.h:
const GUID IID_ID3D10StateBlock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d10.h:
const GUID IID_ID3D10Texture1D;
const GUID IID_ID3D10Texture2D;
const GUID IID_ID3D10Texture3D;
const GUID IID_ID3D10VertexShader;
const GUID IID_ID3D10View;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11Asynchronous;
const GUID IID_ID3D11BlendState;
const GUID IID_ID3D11Buffer;
const GUID IID_ID3D11ClassInstance;
const GUID IID_ID3D11ClassLinkage;
const GUID IID_ID3D11CommandList;
const GUID IID_ID3D11ComputeShader;
const GUID IID_ID3D11Counter;
const GUID IID_ID3D11DepthStencilState;
const GUID IID_ID3D11DepthStencilView;
const GUID IID_ID3D11Device;
const GUID IID_ID3D11DeviceChild;
const GUID IID_ID3D11DeviceContext;
const GUID IID_ID3D11DomainShader;
const GUID IID_ID3D11GeometryShader;
const GUID IID_ID3D11HullShader;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11sdklayers.h:
const GUID IID_ID3D11InfoQueue;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11InputLayout;
const GUID IID_ID3D11PixelShader;
const GUID IID_ID3D11Predicate;
const GUID IID_ID3D11Query;
const GUID IID_ID3D11RasterizerState;
const GUID IID_ID3D11RenderTargetView;
const GUID IID_ID3D11Resource;
const GUID IID_ID3D11SamplerState;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11shader.h:
const GUID IID_ID3D11ShaderReflection;
const GUID IID_ID3D11ShaderReflectionConstantBuffer;
const GUID IID_ID3D11ShaderReflectionType;
const GUID IID_ID3D11ShaderReflectionVariable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d11.h:
const GUID IID_ID3D11ShaderResourceView;
const GUID IID_ID3D11Texture1D;
const GUID IID_ID3D11Texture2D;
const GUID IID_ID3D11Texture3D;
const GUID IID_ID3D11UnorderedAccessView;
const GUID IID_ID3D11VertexShader;
const GUID IID_ID3D11View;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_ID3DXAnimationController;
const GUID IID_ID3DXAnimationMixer;
const GUID IID_ID3DXAnimationSet;
const GUID IID_ID3DXBaseMesh;
const GUID IID_ID3DXBuffer;
const GUID IID_ID3DXEffect;
const GUID IID_ID3DXEffectCompiler;
const GUID IID_ID3DXEffectPool;
const GUID IID_ID3DXInterpolator;
const GUID IID_ID3DXKeyFrameInterpolator;
const GUID IID_ID3DXMatrixStack;
const GUID IID_ID3DXMesh;
const GUID IID_ID3DXPMesh;
const GUID IID_ID3DXSPMesh;
const GUID IID_ID3DXSkinMesh;
const GUID IID_ID3DXTechnique;
const GUID IID_IDDVideoPortContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/dxgi.h:
const GUID IID_IDXGIAdapter;
const GUID IID_IDXGIAdapter1;
const GUID IID_IDXGIDevice;
const GUID IID_IDXGIDevice1;
const GUID IID_IDXGIDeviceSubObject;
const GUID IID_IDXGIFactory;
const GUID IID_IDXGIFactory1;
const GUID IID_IDXGIKeyedMutex;
const GUID IID_IDXGIObject;
const GUID IID_IDXGIOutput;
const GUID IID_IDXGIResource;
const GUID IID_IDXGISurface;
const GUID IID_IDXGISwapChain;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDataAdviseHolder;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IDataFilter;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDataObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3D;
const GUID IID_IDirect3D2;
const GUID IID_IDirect3D3;
const GUID IID_IDirect3D7;
const GUID IID_IDirect3D8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3D9;
const GUID IID_IDirect3D9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DBaseTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DBaseTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DCubeTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DCubeTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DDevice;
const GUID IID_IDirect3DDevice2;
const GUID IID_IDirect3DDevice3;
const GUID IID_IDirect3DDevice7;
const GUID IID_IDirect3DDevice8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DDevice9;
const GUID IID_IDirect3DDevice9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DExecuteBuffer;
const GUID IID_IDirect3DHALDevice;
const GUID IID_IDirect3DIndexBuffer8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DIndexBuffer9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DLight;
const GUID IID_IDirect3DMMXDevice;
const GUID IID_IDirect3DMaterial;
const GUID IID_IDirect3DMaterial2;
const GUID IID_IDirect3DMaterial3;
const GUID IID_IDirect3DNullDevice;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DPixelShader9;
const GUID IID_IDirect3DQuery9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DRGBDevice;
const GUID IID_IDirect3DRM;
const GUID IID_IDirect3DRM2;
const GUID IID_IDirect3DRM3;
const GUID IID_IDirect3DRMAnimation;
const GUID IID_IDirect3DRMAnimation2;
const GUID IID_IDirect3DRMAnimationArray;
const GUID IID_IDirect3DRMAnimationSet;
const GUID IID_IDirect3DRMAnimationSet2;
const GUID IID_IDirect3DRMClippedVisual;
const GUID IID_IDirect3DRMDevice;
const GUID IID_IDirect3DRMDevice2;
const GUID IID_IDirect3DRMDevice3;
const GUID IID_IDirect3DRMDeviceArray;
const GUID IID_IDirect3DRMFace;
const GUID IID_IDirect3DRMFace2;
const GUID IID_IDirect3DRMFaceArray;
const GUID IID_IDirect3DRMFrame;
const GUID IID_IDirect3DRMFrame2;
const GUID IID_IDirect3DRMFrame3;
const GUID IID_IDirect3DRMFrameArray;
const GUID IID_IDirect3DRMInterpolator;
const GUID IID_IDirect3DRMLight;
const GUID IID_IDirect3DRMLightArray;
const GUID IID_IDirect3DRMMaterial;
const GUID IID_IDirect3DRMMaterial2;
const GUID IID_IDirect3DRMMesh;
const GUID IID_IDirect3DRMMeshBuilder;
const GUID IID_IDirect3DRMMeshBuilder2;
const GUID IID_IDirect3DRMMeshBuilder3;
const GUID IID_IDirect3DRMObject;
const GUID IID_IDirect3DRMObject2;
const GUID IID_IDirect3DRMObjectArray;
const GUID IID_IDirect3DRMPicked2Array;
const GUID IID_IDirect3DRMPickedArray;
const GUID IID_IDirect3DRMProgressiveMesh;
const GUID IID_IDirect3DRMShadow;
const GUID IID_IDirect3DRMShadow2;
const GUID IID_IDirect3DRMTexture;
const GUID IID_IDirect3DRMTexture2;
const GUID IID_IDirect3DRMTexture3;
const GUID IID_IDirect3DRMUserVisual;
const GUID IID_IDirect3DRMViewport;
const GUID IID_IDirect3DRMViewport2;
const GUID IID_IDirect3DRMViewportArray;
const GUID IID_IDirect3DRMVisual;
const GUID IID_IDirect3DRMVisualArray;
const GUID IID_IDirect3DRMWinDevice;
const GUID IID_IDirect3DRMWrap;
const GUID IID_IDirect3DRampDevice;
const GUID IID_IDirect3DRefDevice;
const GUID IID_IDirect3DResource8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DResource9;
const GUID IID_IDirect3DStateBlock9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DSurface8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DSurface9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DSwapChain8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DSwapChain9;
const GUID IID_IDirect3DSwapChain9Ex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DTexture;
const GUID IID_IDirect3DTexture2;
const GUID IID_IDirect3DTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DTnLHalDevice;
const GUID IID_IDirect3DVertexBuffer;
const GUID IID_IDirect3DVertexBuffer7;
const GUID IID_IDirect3DVertexBuffer8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVertexBuffer9;
const GUID IID_IDirect3DVertexDeclaration9;
const GUID IID_IDirect3DVertexShader9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DViewport;
const GUID IID_IDirect3DViewport2;
const GUID IID_IDirect3DViewport3;
const GUID IID_IDirect3DVolume8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVolume9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirect3DVolumeTexture8;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3d9.h:
const GUID IID_IDirect3DVolumeTexture9;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirectDraw;
const GUID IID_IDirectDraw2;
const GUID IID_IDirectDraw4;
const GUID IID_IDirectDraw7;
const GUID IID_IDirectDrawClipper;
const GUID IID_IDirectDrawColorControl;
const GUID IID_IDirectDrawFactory2;
const GUID IID_IDirectDrawGammaControl;
const GUID IID_IDirectDrawOptSurface;
const GUID IID_IDirectDrawPalette;
const GUID IID_IDirectDrawPalette2;
const GUID IID_IDirectDrawSurface;
const GUID IID_IDirectDrawSurface2;
const GUID IID_IDirectDrawSurface3;
const GUID IID_IDirectDrawSurface4;
const GUID IID_IDirectDrawSurface7;
const GUID IID_IDirectDrawVideoPort;
const GUID IID_IDirectDrawVideoPortNotify;
const GUID IID_IDirectInput2A;
const GUID IID_IDirectInput2W;
const GUID IID_IDirectInput7A;
const GUID IID_IDirectInput7W;
const GUID IID_IDirectInput8A;
const GUID IID_IDirectInput8W;
const GUID IID_IDirectInputA;
const GUID IID_IDirectInputDevice2A;
const GUID IID_IDirectInputDevice2W;
const GUID IID_IDirectInputDevice7A;
const GUID IID_IDirectInputDevice7W;
const GUID IID_IDirectInputDevice8A;
const GUID IID_IDirectInputDevice8W;
const GUID IID_IDirectInputDeviceA;
const GUID IID_IDirectInputDeviceW;
const GUID IID_IDirectInputEffect;
const GUID IID_IDirectInputEffectDriver;
const GUID IID_IDirectInputJoyConfig;
const GUID IID_IDirectInputJoyConfig8;
const GUID IID_IDirectInputPIDDriver;
const GUID IID_IDirectInputW;
const GUID IID_IDirectMusic;
const GUID IID_IDirectMusic2;
const GUID IID_IDirectMusic8;
const GUID IID_IDirectMusicAudioPath;
const GUID IID_IDirectMusicBand;
const GUID IID_IDirectMusicBuffer;
const GUID IID_IDirectMusicChordMap;
const GUID IID_IDirectMusicCollection;
const GUID IID_IDirectMusicComposer;
const GUID IID_IDirectMusicContainer;
const GUID IID_IDirectMusicDownload;
const GUID IID_IDirectMusicDownloadedInstrument;
const GUID IID_IDirectMusicGetLoader;
const GUID IID_IDirectMusicGraph;
const GUID IID_IDirectMusicInstrument;
const GUID IID_IDirectMusicLoader;
const GUID IID_IDirectMusicLoader8;
const GUID IID_IDirectMusicObject;
const GUID IID_IDirectMusicPatternTrack;
const GUID IID_IDirectMusicPerformance;
const GUID IID_IDirectMusicPerformance2;
const GUID IID_IDirectMusicPerformance8;
const GUID IID_IDirectMusicPort;
const GUID IID_IDirectMusicPortDownload;
const GUID IID_IDirectMusicScript;
const GUID IID_IDirectMusicSegment;
const GUID IID_IDirectMusicSegment2;
const GUID IID_IDirectMusicSegment8;
const GUID IID_IDirectMusicSegmentState;
const GUID IID_IDirectMusicSegmentState8;
const GUID IID_IDirectMusicSong;
const GUID IID_IDirectMusicStyle;
const GUID IID_IDirectMusicStyle8;
const GUID IID_IDirectMusicThru;
const GUID IID_IDirectMusicTool;
const GUID IID_IDirectMusicTool8;
const GUID IID_IDirectMusicTrack;
const GUID IID_IDirectMusicTrack8;
const GUID IID_IDirectPlay;
const GUID IID_IDirectPlay2;
const GUID IID_IDirectPlay2A;
const GUID IID_IDirectPlay3;
const GUID IID_IDirectPlay3A;
const GUID IID_IDirectPlay4;
const GUID IID_IDirectPlay4A;
const GUID IID_IDirectPlay8Address;
const GUID IID_IDirectPlay8AddressIP;
const GUID IID_IDirectPlay8Client;
const GUID IID_IDirectPlay8LobbiedApplication;
const GUID IID_IDirectPlay8LobbyClient;
const GUID IID_IDirectPlay8NATResolver;
const GUID IID_IDirectPlay8Peer;
const GUID IID_IDirectPlay8Server;
const GUID IID_IDirectPlay8ThreadPool;
const GUID IID_IDirectPlayLobby;
const GUID IID_IDirectPlayLobby2;
const GUID IID_IDirectPlayLobby2A;
const GUID IID_IDirectPlayLobby3;
const GUID IID_IDirectPlayLobby3A;
const GUID IID_IDirectPlayLobbyA;
const GUID IID_IDirectPlayVoiceClient;
const GUID IID_IDirectPlayVoiceServer;
const GUID IID_IDirectPlayVoiceTest;
const GUID IID_IDirectSound;
const GUID IID_IDirectSound3DBuffer;
const GUID IID_IDirectSound3DListener;
const GUID IID_IDirectSound8;
const GUID IID_IDirectSoundBuffer;
const GUID IID_IDirectSoundBuffer8;
const GUID IID_IDirectSoundCapture;
const GUID IID_IDirectSoundCaptureBuffer;
const GUID IID_IDirectSoundCaptureBuffer8;
const GUID IID_IDirectSoundCaptureFXAec;
const GUID IID_IDirectSoundCaptureFXNoiseSuppress;
const GUID IID_IDirectSoundFXChorus;
const GUID IID_IDirectSoundFXCompressor;
const GUID IID_IDirectSoundFXDistortion;
const GUID IID_IDirectSoundFXEcho;
const GUID IID_IDirectSoundFXFlanger;
const GUID IID_IDirectSoundFXGargle;
const GUID IID_IDirectSoundFXI3DL2Reverb;
const GUID IID_IDirectSoundFXParamEq;
const GUID IID_IDirectSoundFXWavesReverb;
const GUID IID_IDirectSoundFullDuplex;
const GUID IID_IDirectSoundNotify;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDirectWriterLock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IDirectXFile;
const GUID IID_IDirectXFileBinary;
const GUID IID_IDirectXFileData;
const GUID IID_IDirectXFileDataReference;
const GUID IID_IDirectXFileEnumObject;
const GUID IID_IDirectXFileObject;
const GUID IID_IDirectXFileSaveObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IDispatch;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IDropSource;
const GUID IID_IDropSourceNotify;
const GUID IID_IDropTarget;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IDummyHICONIncluder;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IEncodingFilterFactory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IEnumConnectionPoints;
const GUID IID_IEnumConnections;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumFORMATETC;
const GUID IID_IEnumMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IEnumOLEVERB;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IEnumOleUndoUnits;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumSTATDATA;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/propidl.h:
const GUID IID_IEnumSTATPROPSETSTG;
const GUID IID_IEnumSTATPROPSTG;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IEnumSTATSTG;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IEnumString;
const GUID IID_IEnumUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IEnumVARIANT;
const GUID IID_IErrorInfo;
const GUID IID_IErrorLog;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IExternalConnection;
const GUID IID_IFastRundown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IFillLockBytes;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IFont;
const GUID IID_IFontDisp;
const GUID IID_IFontEventsDisp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IForegroundTransfer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IGetBindHandle;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IGlobalInterfaceTable;
const GUID IID_IGlobalOptions;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IHttpNegotiate;
const GUID IID_IHttpNegotiate2;
const GUID IID_IHttpNegotiate3;
const GUID IID_IHttpSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IInitializeSpy;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IInternalUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IInternet;
const GUID IID_IInternetBindInfo;
const GUID IID_IInternetBindInfoEx;
const GUID IID_IInternetHostSecurityManager;
const GUID IID_IInternetPriority;
const GUID IID_IInternetProtocol;
const GUID IID_IInternetProtocolEx;
const GUID IID_IInternetProtocolInfo;
const GUID IID_IInternetProtocolRoot;
const GUID IID_IInternetProtocolSink;
const GUID IID_IInternetProtocolSinkStackable;
const GUID IID_IInternetSecurityManager;
const GUID IID_IInternetSecurityManagerEx;
const GUID IID_IInternetSecurityManagerEx2;
const GUID IID_IInternetSecurityMgrSite;
const GUID IID_IInternetSession;
const GUID IID_IInternetThreadSwitch;
const GUID IID_IInternetZoneManager;
const GUID IID_IInternetZoneManagerEx;
const GUID IID_IInternetZoneManagerEx2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IKsControl;
const GUID IID_IKsFastClock;
const GUID IID_IKsPropertySet;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_ILayoutStorage;
const GUID IID_ILockBytes;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMalloc;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IMallocSpy;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMarshal;
const GUID IID_IMarshal2;
const GUID IID_IMarshalingStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IMessageFilter;
const GUID IID_IMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IMonikerProp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IMultiQI;
const GUID IID_INoMarshal;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IObjectWithSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleAdviseHolder;
const GUID IID_IOleCache;
const GUID IID_IOleCache2;
const GUID IID_IOleCacheControl;
const GUID IID_IOleClientSite;
const GUID IID_IOleContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleControl;
const GUID IID_IOleControlSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceActiveObject;
const GUID IID_IOleInPlaceFrame;
const GUID IID_IOleInPlaceObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleInPlaceObjectWindowless;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleInPlaceSiteEx;
const GUID IID_IOleInPlaceSiteWindowless;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleInPlaceUIWindow;
const GUID IID_IOleItemContainer;
const GUID IID_IOleLink;
const GUID IID_IOleObject;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IOleParentUndoUnit;
const GUID IID_IOleUndoManager;
const GUID IID_IOleUndoUnit;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IOleWindow;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IOplockStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IPSFactoryBuffer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IParseDisplayName;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPerPropertyBrowsing;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IPersist;
const GUID IID_IPersistFile;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistMemory;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IPersistMoniker;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistPropertyBag;
const GUID IID_IPersistPropertyBag2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IPersistStorage;
const GUID IID_IPersistStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPersistStreamInit;
const GUID IID_IPicture;
const GUID IID_IPicture2;
const GUID IID_IPictureDisp;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IPipeByte;
const GUID IID_IPipeDouble;
const GUID IID_IPipeLong;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPointerInactive;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/commdlg.h:
const GUID IID_IPrintDialogCallback;
const GUID IID_IPrintDialogServices;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IProcessInitControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IProcessLock;
const GUID IID_IProgressNotify;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IPropertyBag;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IPropertyBag2;
const GUID IID_IPropertyNotifySink;
const GUID IID_IPropertyPage;
const GUID IID_IPropertyPage2;
const GUID IID_IPropertyPageSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/propidl.h:
const GUID IID_IPropertySetStorage;
const GUID IID_IPropertyStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IProvideClassInfo;
const GUID IID_IProvideClassInfo2;
const GUID IID_IProvideMultipleClassInfo;
const GUID IID_IQuickActivate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IROTData;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_IRecordInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID IID_IReferenceClock;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IReleaseMarshalBuffers;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IRootStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IRpcChannelBuffer;
const GUID IID_IRpcChannelBuffer2;
const GUID IID_IRpcChannelBuffer3;
const GUID IID_IRpcHelper;
const GUID IID_IRpcOptions;
const GUID IID_IRpcProxyBuffer;
const GUID IID_IRpcStubBuffer;
const GUID IID_IRpcSyntaxNegotiate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IRunnableObject;
const GUID IID_IRunningObjectTable;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISequentialStream;
const GUID IID_IServerSecurity;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/servprov.h:
const GUID IID_IServiceProvider;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_ISimpleFrameSite;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_ISoftDistExt;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_ISpecifyPropertyPages;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IStdMarshalInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IStorage;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IStream;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ISupportErrorInfo;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISurrogate;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_ISurrogateService;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_ISynchronize;
const GUID IID_ISynchronizeContainer;
const GUID IID_ISynchronizeEvent;
const GUID IID_ISynchronizeHandle;
const GUID IID_ISynchronizeMutex;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IThumbnailExtractor;
const GUID IID_ITimeAndNoticeControl;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oaidl.h:
const GUID IID_ITypeChangeEvents;
const GUID IID_ITypeComp;
const GUID IID_ITypeFactory;
const GUID IID_ITypeInfo;
const GUID IID_ITypeInfo2;
const GUID IID_ITypeLib;
const GUID IID_ITypeLib2;
const GUID IID_ITypeMarshal;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/unknwnbase.h:
const GUID IID_IUnknown;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IUri;
const GUID IID_IUriBuilder;
const GUID IID_IUriBuilderFactory;
const GUID IID_IUriContainer;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidl.h:
const GUID IID_IUrlMon;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/oleidl.h:
const GUID IID_IViewObject;
const GUID IID_IViewObject2;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/ocidl.h:
const GUID IID_IViewObjectEx;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/objidlbase.h:
const GUID IID_IWaitMultiple;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/urlmon.h:
const GUID IID_IWinInetCacheHints;
const GUID IID_IWinInetCacheHints2;
const GUID IID_IWinInetFileStream;
const GUID IID_IWinInetHttpInfo;
const GUID IID_IWinInetHttpTimeouts;
const GUID IID_IWinInetInfo;
const GUID IID_IWindowForBindingUI;
const GUID IID_IWrappedProtocol;
const GUID IID_IZoneIdentifier;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID KSDATAFORMAT_SUBTYPE_DIRECTMUSIC;
const GUID KSDATAFORMAT_SUBTYPE_MIDI;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/winnt.h:
const GUID NO_SUBGROUP_GUID;
const GUID PPM_IDLESTATES_DATA_GUID;
const GUID PPM_IDLESTATE_CHANGE_GUID;
const GUID PPM_IDLE_ACCOUNTING_EX_GUID;
const GUID PPM_IDLE_ACCOUNTING_GUID;
const GUID PPM_PERFMON_PERFSTATE_GUID;
const GUID PPM_PERFSTATES_DATA_GUID;
const GUID PPM_PERFSTATE_CHANGE_GUID;
const GUID PPM_PERFSTATE_DOMAIN_CHANGE_GUID;
const GUID PPM_THERMALCONSTRAINT_GUID;
const GUID PPM_THERMAL_POLICY_CHANGE_GUID;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/libsrc/dxguid.c:
const GUID TID_D3DRMAnimation;
const GUID TID_D3DRMAnimationKey;
const GUID TID_D3DRMAnimationOptions;
const GUID TID_D3DRMAnimationSet;
const GUID TID_D3DRMAppData;
const GUID TID_D3DRMBoolean;
const GUID TID_D3DRMBoolean2d;
const GUID TID_D3DRMCamera;
const GUID TID_D3DRMColorRGB;
const GUID TID_D3DRMColorRGBA;
const GUID TID_D3DRMCoords2d;
const GUID TID_D3DRMExternalVisual;
const GUID TID_D3DRMFloatKeys;
const GUID TID_D3DRMFrame;
const GUID TID_D3DRMFramePosition;
const GUID TID_D3DRMFrameRotation;
const GUID TID_D3DRMFrameTransformMatrix;
const GUID TID_D3DRMFrameVelocity;
const GUID TID_D3DRMGuid;
const GUID TID_D3DRMIndexedColor;
const GUID TID_D3DRMInfo;
const GUID TID_D3DRMInlineData;
const GUID TID_D3DRMLight;
const GUID TID_D3DRMLightAttenuation;
const GUID TID_D3DRMLightPenumbra;
const GUID TID_D3DRMLightRange;
const GUID TID_D3DRMLightUmbra;
const GUID TID_D3DRMMaterial;
const GUID TID_D3DRMMaterialAmbientColor;
const GUID TID_D3DRMMaterialArray;
const GUID TID_D3DRMMaterialDiffuseColor;
const GUID TID_D3DRMMaterialEmissiveColor;
const GUID TID_D3DRMMaterialPower;
const GUID TID_D3DRMMaterialSpecularColor;
const GUID TID_D3DRMMaterialWrap;
const GUID TID_D3DRMMatrix4x4;
const GUID TID_D3DRMMesh;
const GUID TID_D3DRMMeshFace;
const GUID TID_D3DRMMeshFaceWraps;
const GUID TID_D3DRMMeshMaterialList;
const GUID TID_D3DRMMeshNormals;
const GUID TID_D3DRMMeshTextureCoords;
const GUID TID_D3DRMMeshVertexColors;
const GUID TID_D3DRMProgressiveMesh;
const GUID TID_D3DRMPropertyBag;
const GUID TID_D3DRMRightHanded;
const GUID TID_D3DRMStringProperty;
const GUID TID_D3DRMTextureFilename;
const GUID TID_D3DRMTextureReference;
const GUID TID_D3DRMTimedFloatKeys;
const GUID TID_D3DRMUrl;
const GUID TID_D3DRMVector;
const GUID TID_DXFILEHeader;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/virtdisk.h:
const GUID VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/debian/tmp/usr/i686-w64-mingw32/include/d3dcommon.h:
const GUID WKPDID_D3DDebugObjectName;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/atonexit.c:
_PVFV *__onexitbegin;
_PVFV *__onexitend;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/gccmain.c:
static int initialized;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/natstart.c:
volatile unsigned int __native_dllmain_reason;
volatile void *__native_startup_lock;
volatile __enative_startup_state __native_startup_state;
volatile unsigned int __native_vcclrit_reason;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/wildcard.c:
int _dowildcard;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/charmax.c:
_PIFV __mingw_pinit;
int _charmax;
int mingw_initcharmax;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/gs_support.c:
UINT_PTR __security_cookie;
UINT_PTR __security_cookie_complement;
static CONTEXT GS_ContextRecord;
static const EXCEPTION_POINTERS GS_ExceptionPointers;
static EXCEPTION_RECORD GS_ExceptionRecord;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/_newmode.c:
int _newmode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlssup.c:
const PIMAGE_TLS_CALLBACK __dyn_tls_init_callback;
PIMAGE_TLS_CALLBACK __xl_a;
PIMAGE_TLS_CALLBACK __xl_c;
PIMAGE_TLS_CALLBACK __xl_d;
PIMAGE_TLS_CALLBACK __xl_z;
char *_tls_end;
ULONG _tls_index;
char *_tls_start;
const IMAGE_TLS_DIRECTORY _tls_used;
int mingw_initltsdrot_force;
int mingw_initltsdyn_force;
int mingw_initltssuo_force;
static _PVFV __xd_a;
static _PVFV __xd_z;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/cinitexe.c:
_PVFV __xc_a[1];
_PVFV __xc_z[1];
_PVFV __xi_a[1];
_PVFV __xi_z[1];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/merr.c:
static fUserMathErr stUserMathErr;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/mingw_helpers.c:
int mingw_app_type;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/pseudo-reloc.c:
static int maxSections;
static sSecInfo *the_secs;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/xtxtmode.c:
int _fmode;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/crt_handler.c:
LPTOP_LEVEL_EXCEPTION_FILTER __mingw_oldexcpt_handler;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlsthrd.c:
static CRITICAL_SECTION __mingwthr_cs;
static volatile int __mingwthr_cs_init;
static volatile __mingwthr_key_t *key_dtor_list;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/tlsmcrt.c:
int _CRT_MT;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/crt/pseudo-reloc-list.c:
char __RUNTIME_PSEUDO_RELOC_LIST_END__;
char __RUNTIME_PSEUDO_RELOC_LIST__;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/mingw_matherr.c:
int _MINGW_INSTALL_DEBUG_MATHERR;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/strtold.c:
static const unsigned short __eone[6];
static const unsigned short __etens[13][6];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/wctype.c:
static const struct {
    const char *name;
    wctype_t flags;
} cmap[11];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/stdio/fseeko64.c:
static const struct oserr_map local_errtab[46];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/math/exp.def.h:
static long double c0;
static long double c1;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/strtodg.c:
static const int fivesbits[23];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/hd_init.c:
unsigned char __hexdig_D2A[256];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/gdtoa/misc.c:
const double __bigtens_D2A[5];
const double __tens_D2A[23];
const double __tinytens_D2A[5];
static long dtoa_CS_init;
static CRITICAL_SECTION dtoa_CritSec[2];
static __Bigint *freelist[10];
static __Bigint *p5s;
static double *pmem_next;
static double private_mem[288];

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/invalid_parameter_handler.c:
void (*(*_imp___get_invalid_parameter_handler)(void))(const wchar_t *, const wchar_t *, const wchar_t *, 
    unsigned int, uintptr_t);
void (*(*_imp___set_invalid_parameter_handler)(void (*)(const wchar_t *, const wchar_t *, const wchar_t *, 
    unsigned int, uintptr_t)))(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t);
static void (*handler)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t);

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/output_format.c:
f_get_output_format _imp___get_output_format;
f_set_output_format _imp___set_output_format;
static unsigned int last_value;

File /build/mingw-w64-_1w3Xm/mingw-w64-4.0.4/mingw-w64-crt/misc/lc_locale_func.c:
unsigned int (*_imp_____lc_codepage_func)(void);
static unsigned int *msvcrt__lc_codepage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int BoardingGoal::DAMAGE_ION;
const int BoardingGoal::DAMAGE_NORMAL;
const int BoardingGoal::TARGET_BOTH;
const int BoardingGoal::TARGET_CREWMEMBERS;
const int BoardingGoal::TARGET_SYSTEMS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
const int CAchievement::BOX_SELECTED;
const int CAchievement::BOX_UNSELECTED;
const int CAchievement::MINI_SELECTED;
const int CAchievement::MINI_UNSELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Collideable.h:
const int CollisionResponse::COLLISION_DODGE;
const int CollisionResponse::COLLISION_NONE;
const int CollisionResponse::COLLISION_SHIELD;
const int CollisionResponse::COLLISION_SOLID;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
const int CrewAnimation::ANIM_DYING;
const int CrewAnimation::ANIM_FIRING;
const int CrewAnimation::ANIM_PORTRAIT;
const int CrewAnimation::ANIM_PUNCHING;
const int CrewAnimation::ANIM_REPAIRING;
const int CrewAnimation::ANIM_RUNNING;
const int CrewAnimation::ANIM_SHOOTING;
const int CrewAnimation::ANIM_TELE;
const int CrewAnimation::ANIM_TYPING;
const int CrewAnimation::ANIM_WALKING;
const int CrewMember::FIRE_REPAIR;
const int CrewMember::HULL_BREACH_REPAIR;
const int CrewMember::MOVE_AIRLOCK;
const int CrewMember::MOVE_CLOSE_DOOR;
const int CrewMember::MOVE_NORMAL;
const int CrewMember::MOVE_OPEN_DOOR;
const int CrewMember::MOVE_REPAIR;
const int CrewMember::NOT_SELECTED;
const int CrewMember::OXYGEN_REPAIR;
const int CrewMember::POTENTIAL;
const int CrewMember::SELECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.cpp:
int CrewMember::iDeathCount;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
const float Globals::AI_Escape;
const float Globals::AlgaeDamage_Hull;
const float Globals::AlgaeDamage_System;
const int Globals::AlgaeDeathTimer_Max;
const int Globals::AlgaeDeathTimer_Min;
const float Globals::AlgaeDeathTimer_OxygenLevel;
const float Globals::AlgaeDeathTimer_Speed;
const int Globals::AlgaeStartTimer_Max;
const int Globals::AlgaeStartTimer_Min;
const float Globals::AlgaeStart_OxygenModifier;
const float Globals::AlgaeStart_Speed;
const float Globals::AlgaeStart_SpeedDoor;
const float Globals::Algae_MaxDamage;
const float Globals::AsteroidTimer_Speed;
const float Globals::Asteroid_MoveSpeed;
const float Globals::Asteroid_Size;
const float Globals::AutoHeal_Crew;
const float Globals::Beam_Cooldown;
const float Globals::Boost_TimeDecay;
const float Globals::Boost_Total;
const int Globals::DamagePerAsteroid;
const int Globals::Door_MaxDamage;
const float Globals::EnergyRect_Health;
const int Globals::Engine_MaxDamage;
const float Globals::Engines_BoostFactor;
const float Globals::FireDamage_Crew;
const float Globals::FireDamage_System;
const int Globals::FireDeathTimer_Max;
const int Globals::FireDeathTimer_Min;
const float Globals::FireDeathTimer_OxygenLevel;
const float Globals::FireDeathTimer_Speed;
const int Globals::FireStartTimer_Max;
const int Globals::FireStartTimer_Min;
const float Globals::FireStart_Speed;
const float Globals::FireStart_SpeedDoor;
const float Globals::Fire_MaxDamage;
const float Globals::GenericRepair_Speed;
const float Globals::GlobalGameSpeed;
const float Globals::GlobalZoomScale;
const int Globals::HullBreachValue;
const int Globals::ITEM_DRONES;
const int Globals::ITEM_FUEL;
const int Globals::ITEM_MISSILES;
const int Globals::ITEM_TOTAL;
const float Globals::JumpTrack_Boost;
const float Globals::JumpTrack_Total;
const float Globals::LaserBlast_Size;
const float Globals::LaserBlast_Speed;
const float Globals::LaserHeavy_Cooldown;
const float Globals::Laser_Cooldown;
const int Globals::LocalSpace_Size;
const float Globals::MaxSpeed_Crew;
const float Globals::MedBay_BoostFactor;
const int Globals::MedBay_MaxDamage;
const float Globals::MedbayHeal_Crew;
const float Globals::Missile_Cooldown;
const float Globals::Missile_Speed;
const float Globals::OneSecond;
const float Globals::OxyDamage_Crew;
const float Globals::OxygenLoss_DepthFactor;
const float Globals::Oxygen_AirlockLoss;
const float Globals::Oxygen_BoostFactor;
const float Globals::Oxygen_BreachLoss;
const float Globals::Oxygen_Gain;
const float Globals::Oxygen_GainPerColony;
const float Globals::Oxygen_LossPerFlame;
const int Globals::Oxygen_MaxDamage;
const float Globals::Oxygen_RebalanceSpeed;
const float Globals::Oxygen_Total;
const int Globals::Piloting_MaxDamage;
const int Globals::PowerManager_StartingFuel;
const int Globals::PowerManager_Total;
const float Globals::PowerMananger_FuelLoss;
const float Globals::SCRAP_VALUE;
const int Globals::SCREEN_HEIGHT;
const int Globals::SCREEN_WIDTH;
const float Globals::SHIP_IMPULSE_SPEED;
const float Globals::SHIP_ROTATION_SPEED;
const int Globals::Sensors_MaxDamage;
const float Globals::Shields_BoostFactor;
const float Globals::Shields_ChargeSpeed;
const float Globals::Shields_Health;
const int Globals::Shields_MaxDamage;
const int Globals::Starting_Fuel;
const float Globals::Travel_Speed;
const int Globals::Weapons_MaxDamage;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/ParticleEmitter.h:
const int ParticleEmitter::MAX_PARTICLES;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
const int ScoreKeeper::STAT_CREW;
const int ScoreKeeper::STAT_DEFEATED;
const int ScoreKeeper::STAT_EXPLORED;
const int ScoreKeeper::STAT_SCRAP;
const int ScoreKeeper::STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/ShipGraph.h:
const int ShipGraph::CONNECTED_BLAST;
const int ShipGraph::CONNECTED_CLOSED;
const int ShipGraph::CONNECTED_HACKED;
const int ShipGraph::CONNECTED_OPEN;
const int ShipGraph::CONNECTED_SUPER_BLAST;
const int ShipGraph::CONNECTED_WALL;
const int ShipGraph::GRID_HEIGHT;
const int ShipGraph::GRID_SIZE;
const int ShipGraph::GRID_WIDTH;
const int ShipGraph::NOT_CONNECTED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/SoundControl.h:
const int SoundControl::MAX_MUSIC_VOLUME;
const int SoundControl::MAX_SOUND_VOLUME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Targetable.h:
const int Targetable::TYPE_ASTEROID;
const int Targetable::TYPE_DRONE;
const int Targetable::TYPE_LASER;
const int Targetable::TYPE_MISSILE;
const int Targetable::TYPE_MISSILE_DRONE;
const int Targetable::TYPE_OTHER;
const int Targetable::TYPE_SHIP;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/ext/numeric_traits.h:
const int __gnu_cxx::__numeric_traits_floating<double>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<float>::__max_exponent10;
const int __gnu_cxx::__numeric_traits_floating<long double>::__max_exponent10;
const char __gnu_cxx::__numeric_traits_integer<char>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__max;
const int __gnu_cxx::__numeric_traits_integer<int>::__min;
const short __gnu_cxx::__numeric_traits_integer<short>::__max;
const short __gnu_cxx::__numeric_traits_integer<short>::__min;
const int __gnu_cxx::__numeric_traits_integer<unsigned long>::__digits;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/hashtable_policy.h:
const std::size_t std::__detail::_Prime_rehash_policy::_S_growth_factor;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/type_traits:
const bool std::integral_constant<bool, false>::value;
const bool std::integral_constant<bool, true>::value;
const unsigned int std::integral_constant<unsigned int, 4u>::value;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/random.h:
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;
const std::size_t std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::state_size;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int BOARDING_INVADE;
static const int BOARDING_NONE;
static const int BOARDING_SABOTAGE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int BUILD_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/UserInterface/ChoiceBox.h:
static const int CHOICE_INVALID;
static const int CHOICE_NORMAL;
static const int CHOICE_SPECIAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color COLOR_BLACK;
static const GL_Color COLOR_BLUE_ION;
static const GL_Color COLOR_BLUE_SHIELD;
static const GL_Color COLOR_BUTTON_OFF;
static const GL_Color COLOR_BUTTON_ON;
static const GL_Color COLOR_BUTTON_SELECT;
static const GL_Color COLOR_BUTTON_TEXT;
static const GL_Color COLOR_CB_BLUE;
static const GL_Color COLOR_CB_ORANGE;
static const GL_Color COLOR_CB_RED;
static const GL_Color COLOR_CB_WHITE;
static const GL_Color COLOR_GRAY;
static const GL_Color COLOR_GREEN;
static const GL_Color COLOR_ORANGE;
static const GL_Color COLOR_PURPLE;
static const GL_Color COLOR_PURPLE_HACKING;
static const GL_Color COLOR_RED;
static const GL_Color COLOR_RED_HACKING;
static const GL_Color COLOR_RED_PLAIN;
static const GL_Color COLOR_RED_WARNING;
static const GL_Color COLOR_WHITE;
static const GL_Color COLOR_YELLOW;
static const GL_Color COLOR_YELLOW_PLAIN;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int CONTINUE;
static const int CONTROLS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int CREW_STAT_DODGES;
static const int CREW_STAT_JUMPS;
static const int CREW_STAT_KILLS;
static const int CREW_STAT_MASTERIES;
static const int CREW_STAT_REPAIRS;
static const int CREW_STAT_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int DIFFICULTY_EASY;
static const int DIFFICULTY_HARD;
static const int DIFFICULTY_NONE;
static const int DIFFICULTY_NORMAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int DIR_DOWN;
static const int DIR_LEFT;
static const int DIR_NONE;
static const int DIR_RIGHT;
static const int DIR_UP;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int DRONE_BATTLE;
static const int DRONE_BOARDER;
static const int DRONE_COMBAT;
static const int DRONE_DEFENSE;
static const int DRONE_FIGHTER_TEST;
static const int DRONE_REPAIR;
static const int DRONE_SHIELD;
static const int DRONE_SHIP_REPAIR;
static const int DRONE_TOTAL;
static const int EQUIP_AUGMENT;
static const int EQUIP_CARGO;
static const int EQUIP_CREW;
static const int EQUIP_DRONE;
static const int EQUIP_NONE;
static const int EQUIP_WEAPON;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/EventSystem.h:
static const int EVENT_ENEMY_NODE_HACKED;
static const int EVENT_NO_MONEY;
static const int EVENT_NO_POWER_DRONE;
static const int EVENT_NO_POWER_REACTOR;
static const int EVENT_NO_POWER_WEAPON;
static const int EVENT_PLAYER_DODGED;
static const int EVENT_PLAYER_SHIELD_HIT;
static const int EVENT_PLAYER_SHOT_WEAPON;
static const int EVENT_STARTED_BATTERY;
static const int EVENT_TOTAL;
static const int EVENT_TRIGGER_AUTOSAVE;
static const int EVENT_USED_DRONE;
static const int EVENT_USED_FUEL;
static const int EVENT_USED_MISSILE;
static const int EVENT_USED_MISSILE_REPLICATOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/LocationEvent.h:
static const int FLEET_BATTLE;
static const int FLEET_FED;
static const int FLEET_NONE;
static const int FLEET_REBEL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const int FONT_HL1;
static const int FONT_HL1_2X;
static const int FONT_HL1_2X_SHORT;
static const int FONT_HL1_3X;
static const int FONT_HL2;
static const int FONT_HL2_2X;
static const int FONT_HL2_3X;
static const int FONT_HL2_4X;
static const int FONT_NUM;
static const int FONT_ZH_HANS;
static const int FONT_ZH_HANS_OUTLINE;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int FULLSCREEN_BORDERS;
static const int FULLSCREEN_NATIVE;
static const int FULLSCREEN_OFF;
static const int FULLSCREEN_STRETCH;
static const int FULLSCREEN_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int HANGAR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int HUMAN_SKILL_CAPS[6];

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int LOAD_GAME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/Door.h:
static const float LOCKDOWN_TIME;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAIN_MENU;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MAJOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int MAX_RARITY;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int MAX_SECTOR;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.cpp:
static const float METAL_MOVE_NO_O2;
static const float METAL_MOVE_O2;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Settings.h:
static const int MINOR_NUMBER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int NUM_SHIPS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int OPTIONS;
static const float PI;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/Projectile.h:
static const int PROJ_TYPE_ASTEROID;
static const int PROJ_TYPE_BEAM;
static const int PROJ_TYPE_BOMB;
static const int PROJ_TYPE_LASER;
static const int PROJ_TYPE_MISSILE;
static const int PROJ_TYPE_NONE;
static const int PROJ_TYPE_PDS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int QUIT;
static const int RESTART_EASY;
static const int RESTART_TUTORIAL;
static const int SAVE_QUIT;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/ScoreKeeper.h:
static const int SAVE_VERSION;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SENSORS_COOLDOWN;
static const int SENSORS_ENEMY;
static const int SENSORS_INTERIOR;
static const int SENSORS_NONE;
static const int SENSORS_POWER;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const string SHIP_BLUEPRINTS[10];
static const int SHIP_BLUEPRINT_ORDER[10];
static const int SHIP_CIRCLE;
static const int SHIP_CRYSTAL;
static const int SHIP_ENERGY;
static const int SHIP_FEDS;
static const int SHIP_JELLY;
static const int SHIP_KESTREL;
static const int SHIP_MANTIS;
static const int SHIP_METAL;
static const int SHIP_ROCK;
static const int SHIP_STEALTH;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SKILL_CAPS[6];
static const int SKILL_ENGINES;
static const int SKILL_FIGHTING;
static const int SKILL_PILOTING;
static const int SKILL_REPAIRING;
static const int SKILL_SHIELDS;
static const int SKILL_TOTAL;
static const int SKILL_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/CSurface.h:
static const GL_Color STARMAP_GRAY;
static const GL_Color STARMAP_GREEN;
static const GL_Color STARMAP_PURPLE;
static const GL_Color STARMAP_RED;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/Globals.h:
static const int STATS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/World/BlueprintManager.h:
static const int SYSTEM_ALL;
static const int SYSTEM_ARTILLERY;
static const int SYSTEM_BATTERY;
static const int SYSTEM_CLOAKING;
static const int SYSTEM_CLONEBAY;
static const int SYSTEM_DOORS;
static const int SYSTEM_DRONES;
static const int SYSTEM_ENGINE;
static const int SYSTEM_HACKING;
static const int SYSTEM_MEDBAY;
static const int SYSTEM_MIND;
static const int SYSTEM_OXYGEN;
static const int SYSTEM_PILOT;
static const int SYSTEM_RANDOM;
static const int SYSTEM_REACTOR;
static const int SYSTEM_ROOM;
static const int SYSTEM_SENSORS;
static const int SYSTEM_SHIELDS;
static const int SYSTEM_TELEPORTER;
static const int SYSTEM_TOTAL;
static const int SYSTEM_WEAPONS;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Ship/CrewMember.h:
static const int TASK_BOARDERS;
static const int TASK_BREACH;
static const int TASK_DEAD;
static const int TASK_FIRE;
static const int TASK_HEAL;
static const int TASK_KILLING;
static const int TASK_MANNING;
static const int TASK_NOTHING;
static const int TASK_REPAIRING;
static const int TASK_SABOTAGING;
static const int TASK_TELEPORTING;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Gameplay/AchievementTracker.h:
static const int UNLOCKABLE_TOTAL;

File /mnt/c/Users/Matthew-Work/Documents/Development/FTL/Project/src/Utilities/FreeType.h:
static const char * const freetype::SOFT_HYPHEN_STR;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/uses_allocator.h:
static const std::allocator_arg_t std::allocator_arg;
static const std::allocator_arg_t std::allocator_arg;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/tuple:
static const std::_Swallow_assign std::ignore;
static const std::_Swallow_assign std::ignore;

File /usr/lib/gcc/i686-w64-mingw32/5.3-win32/include/c++/bits/stl_pair.h:
static const std::piecewise_construct_t std::piecewise_construct;
static const std::piecewise_construct_t std::piecewise_construct;

Non-debugging symbols:
0x00828000  _data_start__
0x00828004  CommandGui::RenderPause()::dx
0x00828008  CEvent::mouseY
0x0082800c  CEvent::mouseX
0x00828010  FileHelper::bLittleEndian
0x00828014  Globals::GetNextSpaceId()::id
0x00828018  StarMap::NewGame(bool)::first_run
0x00828118  dummy_private.5261
0x00828398  p.65827
0x008283b8  fpi.3942
0x008283d0  fpi0.3942
0x00828410  fpi.5768
0x00828440  guard variable for std::moneypunct<char, false>::id
0x00828448  guard variable for std::moneypunct<char, true>::id
0x00828450  guard variable for std::moneypunct<wchar_t, false>::id
0x00828458  guard variable for std::moneypunct<wchar_t, true>::id
0x00828460  guard variable for std::__timepunct<char>::id
0x00828468  guard variable for std::__timepunct<wchar_t>::id
0x00828470  guard variable for std::__cxx11::moneypunct<char, false>::id
0x00828478  guard variable for std::__cxx11::moneypunct<char, true>::id
0x00828480  guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
0x00828488  guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
0x00828490  guard variable for std::__cxx11::collate<char>::id
0x00828498  guard variable for std::__cxx11::collate<wchar_t>::id
0x008284a0  guard variable for std::__cxx11::messages<char>::id
0x008284a8  guard variable for std::__cxx11::messages<wchar_t>::id
0x008284b0  guard variable for std::__cxx11::numpunct<char>::id
0x008284b8  guard variable for std::__cxx11::numpunct<wchar_t>::id
0x008284c0  guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008284c8  guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284d0  guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008284d8  guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284e0  guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x008284e8  guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008284f0  guard variable for std::collate<char>::id
0x008284f8  guard variable for std::collate<wchar_t>::id
0x00828500  guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828508  guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828510  guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828518  guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828520  guard variable for std::messages<char>::id
0x00828528  guard variable for std::messages<wchar_t>::id
0x00828530  guard variable for std::numpunct<char>::id
0x00828538  guard variable for std::numpunct<wchar_t>::id
0x00828540  guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828548  guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828550  guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828558  guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828560  guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00828568  guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828570  guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00828578  guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00828580  guard variable for DebugHelper::GetDebugHelper()::helper
0x008285b0  __cxxabiv1::__terminate_handler
0x008285b4  __cxxabiv1::__unexpected_handler
0x008292a0  __gnu_internal::buf_cin_sync
0x008292e0  __gnu_internal::buf_cerr_sync
0x00829320  __gnu_internal::buf_cout_sync
0x00829360  __gnu_internal::buf_wcin_sync
0x008293a0  __gnu_internal::buf_wcerr_sync
0x008293e0  __gnu_internal::buf_wcout_sync
0x00829420  __gnu_internal::buf_cin
0x008294a0  __gnu_internal::buf_cerr
0x00829520  __gnu_internal::buf_cout
0x008295a0  __gnu_internal::buf_wcin
0x00829620  __gnu_internal::buf_wcerr
0x008296a0  __gnu_internal::buf_wcout
0x00829720  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0x00829730  std::string::_Rep::_S_empty_rep_storage
0x00829740  std::__num_base::_S_atoms_in
0x00829744  std::__num_base::_S_atoms_out
0x00829748  std::money_base::_S_atoms
0x0082974c  std::moneypunct<char, false>::id
0x00829750  std::moneypunct<char, true>::id
0x00829754  std::moneypunct<wchar_t, false>::id
0x00829758  std::moneypunct<wchar_t, true>::id
0x0082975c  std::__timepunct<char>::id
0x00829760  std::__timepunct<wchar_t>::id
0x00829820  std::__timepunct_cache<char>::_S_timezones
0x00829860  std::__timepunct_cache<wchar_t>::_S_timezones
0x008298a0  std::ctype<char>::id
0x008298a4  std::ctype<wchar_t>::id
0x008298a8  std::locale::_S_classic
0x008298ac  std::locale::id::_S_refcount
0x008298b0  std::locale::facet::_S_c_locale
0x008298b4  std::locale::facet::_S_once
0x008298bc  std::locale::_S_once
0x008298c4  std::locale::_S_global
0x008298c8  std::__cxx11::moneypunct<char, false>::id
0x008298cc  std::__cxx11::moneypunct<char, true>::id
0x008298d0  std::__cxx11::moneypunct<wchar_t, false>::id
0x008298d4  std::__cxx11::moneypunct<wchar_t, true>::id
0x008298d8  std::__cxx11::collate<char>::id
0x008298dc  std::__cxx11::collate<wchar_t>::id
0x008298e0  std::__cxx11::messages<char>::id
0x008298e4  std::__cxx11::messages<wchar_t>::id
0x008298e8  std::__cxx11::numpunct<char>::id
0x008298ec  std::__cxx11::numpunct<wchar_t>::id
0x008298f0  std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008298f4  std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x008298f8  std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x008298fc  std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829900  std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829904  std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829908  std::codecvt<char32_t, char, int>::id
0x0082990c  std::codecvt<char16_t, char, int>::id
0x00829910  std::codecvt<char, char, int>::id
0x00829914  std::codecvt<wchar_t, char, int>::id
0x00829918  std::collate<char>::id
0x0082991c  std::collate<wchar_t>::id
0x00829920  std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x00829924  std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829928  std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x0082992c  std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829930  std::ios_base::Init::_S_refcount
0x00829934  std::ios_base::Init::_S_synced_with_stdio
0x00829938  std::messages<char>::id
0x0082993c  std::messages<wchar_t>::id
0x00829940  std::numpunct<char>::id
0x00829944  std::numpunct<wchar_t>::id
0x00829948  std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x0082994c  std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829950  std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829954  std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829958  std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0x0082995c  std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829960  std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0x00829964  std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0x00829980  std::cin
0x00829a20  std::cerr
0x00829ac0  std::clog
0x00829b60  std::cout
0x00829c00  std::wcin
0x00829ca0  std::wcerr
0x00829d40  std::wclog
0x00829de0  std::wcout
0x00829e80  DebugHelper::GetDebugHelper()::helper
0x00829efc  rapidxml::xml_base<char>::nullstr()::zero
0x00829f10  __JCR_END__
0x00829f10  __JCR_LIST__
0x00829f14  _data_end__
0x0082ac48  std::piecewise_construct
0x0082af78  SUPER_SHIELD_TIME
0x0082b5e4  FLAGS
0x0082b5f0  _ZStL19piecewise_construct
0x0082c31c  _ZStL19piecewise_construct
0x0082c35e  _ZStL19piecewise_construct
0x0082c3b0  DOOR_HEALTH_3
0x0082c3bc  DOOR_HEALTH_2
0x0082c3c8  DOOR_HEALTH_1
0x0082d764  SYSTEM_HACKING
0x0082d768  SYSTEM_ARTILLERY
0x0082d76c  SYSTEM_CLOAKING
0x0082d770  SYSTEM_TELEPORTER
0x0082d774  SYSTEM_DOORS
0x0082d778  SYSTEM_SENSORS
0x0082d77c  SYSTEM_PILOT
0x0082d780  SYSTEM_MEDBAY
0x0082d784  SYSTEM_DRONES
0x0082d788  SYSTEM_WEAPONS
0x0082d78c  SYSTEM_OXYGEN
0x0082d790  SYSTEM_ENGINE
0x0082d794  SYSTEM_SHIELDS
0x0082d798  _ZStL19piecewise_construct
0x0082dcd0  SystemControl::CreateSystemBoxes()::subsystem_order
0x0082dce0  _ZL14SYSTEM_HACKING
0x0082dce4  SYSTEM_MIND
0x0082dce8  SYSTEM_CLONEBAY
0x0082dcec  SYSTEM_BATTERY
0x0082dcf0  _ZL16SYSTEM_ARTILLERY
0x0082dcf4  _ZL15SYSTEM_CLOAKING
0x0082dcf8  _ZL17SYSTEM_TELEPORTER
0x0082dcfc  _ZL12SYSTEM_DOORS
0x0082dd00  _ZL14SYSTEM_SENSORS
0x0082dd04  _ZL12SYSTEM_PILOT
0x0082dd08  _ZL13SYSTEM_MEDBAY
0x0082dd0c  _ZL13SYSTEM_DRONES
0x0082dd10  _ZL14SYSTEM_WEAPONS
0x0082dd14  _ZL13SYSTEM_OXYGEN
0x0082dd18  _ZL13SYSTEM_ENGINE
0x0082dd1c  _ZL14SYSTEM_SHIELDS
0x0082e164  STATS
0x0082e168  HANGAR
0x0082e16c  MAIN_MENU
0x0082e170  QUIT
0x0082e174  RESTART_EASY
0x0082ee00  SHIP_BLUEPRINT_ORDER
0x0082f2a0  ._74
0x0082fdc0  MenuScreen::OnRender()::textList
0x0082ff9c  CONTROLS
0x0082ffa0  SAVE_QUIT
0x0082ffa4  _ZL6HANGAR
0x0082ffa8  _ZL9MAIN_MENU
0x0082ffac  CONTINUE
0x0082ffb0  OPTIONS
0x0082ffb4  _ZL12RESTART_EASY
0x00830620  _ZL20SHIP_BLUEPRINT_ORDER
0x00830cdc  _ZStL19piecewise_construct
0x00831118  _ZL14SYSTEM_HACKING
0x0083111c  _ZL11SYSTEM_MIND
0x00831120  _ZL15SYSTEM_CLONEBAY
0x00831124  _ZL14SYSTEM_BATTERY
0x00831128  _ZL16SYSTEM_ARTILLERY
0x0083112c  _ZL15SYSTEM_CLOAKING
0x00831130  _ZL17SYSTEM_TELEPORTER
0x00831134  _ZL12SYSTEM_DOORS
0x00831138  _ZL14SYSTEM_SENSORS
0x0083113c  _ZL12SYSTEM_PILOT
0x00831140  _ZL13SYSTEM_MEDBAY
0x00831144  _ZL13SYSTEM_DRONES
0x00831148  _ZL14SYSTEM_WEAPONS
0x0083114c  _ZL13SYSTEM_OXYGEN
0x00831150  _ZL13SYSTEM_ENGINE
0x00831154  _ZL14SYSTEM_SHIELDS
0x00831fbc  CSWTCH.234
0x008328c0  ._73
0x00832920  ._72
0x0083345b  _ZStL19piecewise_construct
0x00833808  CSurface::GL_CreateMultiImageColorPrimitive(GL_Texture*, std::vector<GL_ColorTexVertex, std::allocator<GL_ColorTexVertex> > const&)::vertexFormat
0x00833818  LowCreateImagePrimitive(GL_Texture*, std::vector<GL_TexVertex, std::allocator<GL_TexVertex> > const&, GL_Color)::vertexFormat
0x00833824  CreateBasicPrimitive(int, GL_Color, bool, int, float*, int, unsigned short*)::plainVertexFormat
0x0083382c  CSurface::GL_BlitFrameBuffer(int*, float, float, bool)::vertexFormat
0x00833838  CSurface::GL_BlitMultiColorImage(GL_Texture*, std::vector<GL_ColorTexVertex, std::allocator<GL_ColorTexVertex> > const&, bool)::vertexFormat
0x00833848  CSurface::GL_BlitMultiImage(GL_Texture*, std::vector<GL_TexVertex, std::allocator<GL_TexVertex> > const&, bool)::vertexFormat
0x00833854  GL_LowBlitImage(GL_Texture*, bool, float, float, float, float, float, float, float, float, GL_Color)::vertexFormat
0x00833860  RenderVertices(int, GL_Vert const*, int)::vertexFormat
0x00833f94  FONT_ZH_HANS_OUTLINE
0x00833f98  FONT_ZH_HANS
0x00833f9c  FONT_HL2_4X
0x00833fa0  FONT_HL2_3X
0x00833fa4  FONT_HL2_2X
0x00833fa8  FONT_HL2
0x00833fac  FONT_HL1_2X_SHORT
0x00833fb0  FONT_HL1_3X
0x00833fb4  FONT_HL1_2X
0x00833fb8  FONT_HL1
0x00833fbc  FONT_NUM
0x008344b8  _ZStL19piecewise_construct
0x00834983  _ZStL19piecewise_construct
0x00834d2c  missileValues
0x00834d44  droneValues
0x00834d5c  fuelValues
0x00834d74  scrapVariance
0x00836678  _ZStL19piecewise_construct
0x008372e0  RANDOM_SKILLS
0x00837320  SKILL_CAPS
0x00837338  _ZStL19piecewise_construct
0x008379a8  EVENT_EQUIP_FULL
0x008379ac  EVENT_CLONED
0x008379b0  EVENT_AUGMENT_FULL
0x008379b4  _ZStL19piecewise_construct
0x00837cb8  HACKING_EFFECT_TIMER
0x00837d50  DAMAGE_BOOST
0x00837d60  HEALTH_BOOST
0x00837d70  MIND_CONTROL_COUNT
0x00837d80  MIND_CONTROL_LOCK
0x00837d90  MIND_CONTROL_TIMER
0x008389e0  CSWTCH.585
0x00838a00  _ZStL19piecewise_construct
0x00838be8  CLONE_HEALTH
0x00838bf8  CLONE_TIME
0x00838c08  _ZStL19piecewise_construct
0x00838d38  CSWTCH.368
0x00838d44  CSWTCH.282
0x00838d80  vertex_format.5069
0x00838da0  popcount.4973
0x00838ed0  vertex_format.7219
0x00838f20  vertex_format.5652
0x00839738  C.0.3599
0x008397d0  days.5015
0x00839860  raw_formats.3461
0x00839980  map.4044
0x0083a100  utf8_bytes.4279
0x0083a240  stricmp_lower_table.3256
0x0083a340  ten_to_the_minus.4249
0x0083a3e0  ten_to_the.4248
0x0083a508  codelen_order.3419
0x0083af08  dispatcher_attr.5174
0x0083bf5c  attachments.116100
0x0083c140  gl_type.116197
0x0083c180  gl_norm.116198
0x0083c190  is_float.116196
0x0083c29c  no_inout_fragment_header.116061
0x0083c2dc  inout_fragment_header.116060
0x0083c304  separate_header.116048
0x0083c328  separate_pointsize_header.116049
0x0083c360  gl_PerVertex_header.116050
0x0083c3ac  gl_PerVertex_pointsize_header.116051
0x0083c3dc  no_inout_vertex_header.116047
0x0083c3f4  basic_version_130_header.116041
0x0083c430  separate_version_130_header.116042
0x0083c448  basic_version_150_header.116039
0x0083c44c  separate_version_150_header.116040
0x0083cd34  CSWTCH.111
0x0083cd60  CSWTCH.110
0x0083ce00  CSWTCH.163
0x0083ce0c  CSWTCH.157
0x0083ce40  CSWTCH.155
0x0083ce60  CSWTCH.153
0x0083e600  CSWTCH.88
0x0083e6ac  compiler_dlls.115815
0x0083ea64  initial_state.106622
0x0083ea80  bytecode_template.106528
0x0083f124  single_quad_indices.106598
0x0083fd04  IID_ID3D11ShaderReflection_47.106515
0x0083fd14  IID_ID3D11ShaderReflection_43.106516
0x008925b8  CSWTCH.122
0x008925c4  CSWTCH.117
0x008925e0  CSWTCH.115
0x00892600  vertex_format.106701
0x00892620  safe_clear_ps_bytecode.106688
0x008928a0  safe_clear_vs_bytecode.106687
0x008931c0  CSWTCH.195
0x008933a0  map.90874
0x0089392c  name.91988
0x00893980  __compound_literal.0
0x008a33a0  woff_header_fields.8153
0x008a33dc  ttc_header_fields.8186
0x008a3400  metrics_header_fields.6821
0x008a3460  maxp_fields_extra.6712
0x008a349c  maxp_fields.6711
0x008a34ac  os2_fields_extra5.6759
0x008a34bc  os2_fields_extra2.6758
0x008a34d8  os2_fields_extra1.6757
0x008a3500  os2_fields.6756
0x008a35c0  post_fields.6767
0x008a35ec  name_record_fields.6727
0x008a3608  name_table_fields.6726
0x008a3620  pclt_fields.6772
0x008a3680  header_fields.6695
0x008a36d4  table_dir_entry_fields.6647
0x008a36ec  offset_table_fields.6664
0x008a3f60  gvar_fields.9264
0x008a3fa0  fvaraxis_fields.9326
0x008a3fc0  fvar_fields.9325
0x008a4000  sfnt_id.7735
0x008a41c0  trick_names.7706
0x008a6888  log2_4.4191
0x008a68d8  capture_pattern.2716
0x008a68e0  range_bits_list.4405
0x008a68e4  range_list.4404
0x008a7640  CSWTCH.75
0x008a7660  CSWTCH.74
0x008a773c  digits.62989
0x008a8120  png_pass_start.63551
0x008a8120  png_pass_start.63560
0x008a8128  png_pass_inc.63552
0x008a8128  png_pass_inc.63561
0x008a8130  png_pass_ystart.63553
0x008a8138  png_pass_yinc.63554
0x008a8140  png_pass_inc.63368
0x008a8160  row_mask.63323
0x008a8200  display_mask.63324
0x008a8820  chunks_to_ignore.63217
0x008a9604  png_pass_inc.63306
0x008a9604  png_pass_inc.63317
0x008a960c  png_pass_start.63305
0x008a960c  png_pass_start.63316
0x008a9614  png_pass_ystart.63307
0x008a961c  png_pass_yinc.63308
0x008ab9c0  distfix.3673
0x008aba40  lenfix.3672
0x008ac240  order.3701
0x008ac280  dext.3580
0x008ac2c0  dbase.3579
0x008ac300  lext.3578
0x008ac340  lbase.3577
0x008b09a4  CSWTCH.5
0x008b1340  p05.25745
0x008b5940  rapidxml::internal::lookup_tables<0>::lookup_text
0x008b5a40  rapidxml::internal::lookup_tables<0>::lookup_digits
0x008b5b40  rapidxml::internal::lookup_tables<0>::lookup_upcase
0x008b5c40  rapidxml::internal::lookup_tables<0>::lookup_node_name
0x008b5d40  rapidxml::internal::lookup_tables<0>::lookup_whitespace
0x008b5e40  rapidxml::internal::lookup_tables<0>::lookup_attribute_name
0x008b5f40  rapidxml::internal::lookup_tables<0>::lookup_text_pure_no_ws
0x008b6040  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1
0x008b6140  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2
0x008b6240  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_1_pure
0x008b6340  rapidxml::internal::lookup_tables<0>::lookup_attribute_data_2_pure
0x008b6458  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_max_size
0x008b645c  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_terminal
0x008b6460  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::npos
0x008b6464  std::string::_Rep::_S_max_size
0x008b6468  std::string::_Rep::_S_terminal
0x008b646c  std::string::npos
0x008b6470  std::ctype_base::alnum
0x008b6474  std::ctype_base::alpha
0x008b6478  std::ctype_base::blank
0x008b647c  std::ctype_base::cntrl
0x008b6480  std::ctype_base::digit
0x008b6484  std::ctype_base::graph
0x008b6488  std::ctype_base::lower
0x008b648c  std::ctype_base::print
0x008b6490  std::ctype_base::punct
0x008b6494  std::ctype_base::space
0x008b6498  std::ctype_base::upper
0x008b649c  std::ctype_base::xdigit
0x008b64a0  std::money_base::_S_default_pattern
0x008b64a4  std::moneypunct<char, false>::intl
0x008b64a8  std::moneypunct<char, true>::intl
0x008b64ac  std::moneypunct<wchar_t, false>::intl
0x008b64b0  std::moneypunct<wchar_t, true>::intl
0x008b64c0  std::moneypunct_byname<char, false>::intl
0x008b64c4  std::moneypunct_byname<char, true>::intl
0x008b64c8  std::moneypunct_byname<wchar_t, false>::intl
0x008b64cc  std::moneypunct_byname<wchar_t, true>::intl
0x008b64d0  std::ctype<char>::table_size
0x008b64d4  std::locale::_S_categories
0x008b64e0  std::locale::_S_twinned_facets
0x008b6580  std::locale::all
0x008b6584  std::locale::none
0x008b6588  std::locale::time
0x008b658c  std::locale::_Impl::_S_id_time
0x008b65a8  std::locale::_Impl::_S_id_ctype
0x008b65c4  std::locale::_Impl::_S_id_collate
0x008b65d0  std::locale::_Impl::_S_id_numeric
0x008b65ec  std::locale::_Impl::_S_id_messages
0x008b6600  std::locale::_Impl::_S_id_monetary
0x008b6640  std::locale::_Impl::_S_facet_categories
0x008b665c  std::locale::ctype
0x008b6660  std::locale::facet::_S_c_name
0x008b6664  std::locale::collate
0x008b6668  std::locale::numeric
0x008b666c  std::locale::messages
0x008b6670  std::locale::monetary
0x008b6674  std::__cxx11::moneypunct<char, false>::intl
0x008b6678  std::__cxx11::moneypunct<char, true>::intl
0x008b667c  std::__cxx11::moneypunct<wchar_t, false>::intl
0x008b6680  std::__cxx11::moneypunct<wchar_t, true>::intl
0x008b6684  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::npos
0x008b6688  std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::npos
0x008b668c  std::__cxx11::moneypunct_byname<char, false>::intl
0x008b6690  std::__cxx11::moneypunct_byname<char, true>::intl
0x008b6694  std::__cxx11::moneypunct_byname<wchar_t, false>::intl
0x008b6698  std::__cxx11::moneypunct_byname<wchar_t, true>::intl
0x008b66a0  std::__detail::__prime_list
0x008b6ac0  std::ios_base::floatfield
0x008b6ac4  std::ios_base::scientific
0x008b6ac8  std::ios_base::adjustfield
0x008b6acc  std::ios_base::in
0x008b6ad0  std::ios_base::app
0x008b6ad4  std::ios_base::ate
0x008b6ad8  std::ios_base::beg
0x008b6adc  std::ios_base::cur
0x008b6ae0  std::ios_base::dec
0x008b6ae4  std::ios_base::end
0x008b6ae8  std::ios_base::hex
0x008b6aec  std::ios_base::oct
0x008b6af0  std::ios_base::out
0x008b6af4  std::ios_base::left
0x008b6af8  std::ios_base::fixed
0x008b6afc  std::ios_base::right
0x008b6b00  std::ios_base::trunc
0x008b6b04  std::ios_base::badbit
0x008b6b08  std::ios_base::binary
0x008b6b0c  std::ios_base::eofbit
0x008b6b10  std::ios_base::skipws
0x008b6b14  std::ios_base::failbit
0x008b6b18  std::ios_base::goodbit
0x008b6b1c  std::ios_base::showpos
0x008b6b20  std::ios_base::unitbuf
0x008b6b24  std::ios_base::internal
0x008b6b28  std::ios_base::showbase
0x008b6b2c  std::ios_base::basefield
0x008b6b30  std::ios_base::boolalpha
0x008b6b34  std::ios_base::showpoint
0x008b6b38  std::ios_base::uppercase
0x008b6b3c  std::nothrow
0x008b6b40  construction vtable for std::iostream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6b7c  construction vtable for std::istream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6ba4  construction vtable for std::ostream-in-std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6bcc  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6bf4  construction vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6c30  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6c58  construction vtable for std::istream-in-std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6c80  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6ca8  construction vtable for std::ostream-in-std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b6cd0  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b6cf8  construction vtable for std::istream-in-std::iostream
0x008b6d20  construction vtable for std::ostream-in-std::iostream
0x008b6d48  construction vtable for std::iostream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6d84  construction vtable for std::istream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6dac  construction vtable for std::ostream-in-std::basic_fstream<char, std::char_traits<char> >
0x008b6dd4  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6dfc  construction vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6e38  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b6e60  construction vtable for std::istream-in-std::basic_ifstream<char, std::char_traits<char> >
0x008b6e88  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008b6eb0  construction vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b6ed8  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b6f00  construction vtable for std::ostream-in-std::basic_ofstream<char, std::char_traits<char> >
0x008b6f28  construction vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >-in-std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008b6f50  typeinfo for BatteryBox
0x008b6f5c  typeinfo for BeamWeapon
0x008b6f68  typeinfo for CachedRect
0x008b6f74  typeinfo for CrewMember
0x008b6f80  typeinfo for CrewTarget
0x008b6f8c  typeinfo for LaserBlast
0x008b6f98  typeinfo for MenuScreen
0x008b6fa4  typeinfo for MindSystem
0x008b6fb0  typeinfo for Projectile
0x008b6fd0  typeinfo for Repairable
0x008b6ff0  typeinfo for Selectable
0x008b6ff8  typeinfo for ShipButton
0x008b7004  typeinfo for ShipObject
0x008b700c  typeinfo for ShipRepair
0x008b7018  typeinfo for ShipSystem
0x008b7024  typeinfo for SpaceDrone
0x008b704c  typeinfo for Spreadable
0x008b7058  typeinfo for Targetable
0x008b7060  typeinfo for TextButton
0x008b706c  typeinfo for ArmamentBox
0x008b7074  typeinfo for BattleDrone
0x008b7080  typeinfo for CachedImage
0x008b708c  typeinfo for CloakingBox
0x008b7098  typeinfo for CloneSystem
0x008b70a4  typeinfo for Collideable
0x008b70ac  typeinfo for CombatDrone
0x008b70b8  typeinfo for DroneSystem
0x008b70c4  typeinfo for EnergyAlien
0x008b70d0  typeinfo for FocusWindow
0x008b70d8  typeinfo for MantisAlien
0x008b70e4  typeinfo for RepairDrone
0x008b70f0  typeinfo for ShipManager
0x008b7118  typeinfo for TeleportBox
0x008b7124  typeinfo for ArtilleryBox
0x008b7130  typeinfo for BoarderDrone
0x008b713c  typeinfo for CompleteShip
0x008b7144  typeinfo for CrewEquipBox
0x008b7150  typeinfo for CrewManifest
0x008b715c  typeinfo for CrewStoreBox
0x008b7168  typeinfo for CrystalAlien
0x008b7174  typeinfo for DefenseDrone
0x008b7180  typeinfo for DroneControl
0x008b718c  typeinfo for EngineSystem
0x008b7198  typeinfo for EquipmentBox
0x008b71a0  typeinfo for HackingDrone
0x008b71ac  typeinfo for ItemStoreBox
0x008b71b8  typeinfo for MedbaySystem
0x008b71c4  typeinfo for OxygenSystem
0x008b71d0  typeinfo for TabbedWindow
0x008b71dc  typeinfo for ToggleButton
0x008b71e8  typeinfo for WeaponSystem
0x008b71f4  typeinfo for BatterySystem
0x008b7200  typeinfo for ConfirmWindow
0x008b720c  typeinfo for CrewAnimation
0x008b7218  typeinfo for CrewBlueprint
0x008b7224  typeinfo for DroneEquipBox
0x008b7230  typeinfo for DroneStoreBox
0x008b723c  typeinfo for EngiAnimation
0x008b7248  typeinfo for GenericButton
0x008b7250  typeinfo for HackingSystem
0x008b725c  typeinfo for ItemBlueprint
0x008b7268  typeinfo for OptionsScreen
0x008b7274  typeinfo for ReactorButton
0x008b7280  typeinfo for RockAnimation
0x008b728c  typeinfo for ShipBlueprint
0x008b7298  typeinfo for SlugAnimation
0x008b72a4  typeinfo for WeaponControl
0x008b72b0  typeinfo for AnaerobicAlien
0x008b72bc  typeinfo for BombProjectile
0x008b72c8  typeinfo for CloakingSystem
0x008b72d4  typeinfo for DistressButton
0x008b72e0  typeinfo for DroneBlueprint
0x008b72ec  typeinfo for RepairStoreBox
0x008b72f8  typeinfo for SystemStoreBox
0x008b7304  typeinfo for TeleportSystem
0x008b7310  typeinfo for WarningMessage
0x008b7318  typeinfo for WeaponEquipBox
0x008b7324  typeinfo for WeaponStoreBox
0x008b7330  typeinfo for ArmamentControl
0x008b7338  typeinfo for ArtillerySystem
0x008b7344  typeinfo for AugmentEquipBox
0x008b7350  typeinfo for AugmentStoreBox
0x008b735c  typeinfo for BoarderPodDrone
0x008b7368  typeinfo for CachedPrimitive
0x008b7370  typeinfo for EnergyAnimation
0x008b737c  typeinfo for LanguageChooser
0x008b7388  typeinfo for MantisAnimation
0x008b7394  typeinfo for RepairAnimation
0x008b73a0  typeinfo for ShipRepairDrone
0x008b73ac  typeinfo for SystemBlueprint
0x008b73b8  typeinfo for SystemCustomBox
0x008b73c4  typeinfo for WeaponBlueprint
0x008b73d0  typeinfo for WeaponSystemBox
0x008b73dc  typeinfo for AnimationTracker
0x008b73e4  typeinfo for AugmentBlueprint
0x008b73f0  typeinfo for CrewCustomizeBox
0x008b73fc  typeinfo for CrystalAnimation
0x008b7408  typeinfo for SuperShieldDrone
0x008b7414  typeinfo for WarningWithLines
0x008b7420  typeinfo for CachedRectOutline
0x008b742c  typeinfo for CooldownSystemBox
0x008b7438  typeinfo for IonDroneAnimation
0x008b7444  typeinfo for ProjectileFactory
0x008b7450  typeinfo for AnaerobicAnimation
0x008b745c  typeinfo for ExplosionAnimation
0x008b747c  typeinfo for CApp
0x008b7488  typeinfo for Door
0x008b74a8  typeinfo for Fire
0x008b74b4  typeinfo for Room
0x008b74d4  typeinfo for Ship
0x008b74e0  typeinfo for Algae
0x008b74ec  typeinfo for Drone
0x008b74f8  typeinfo for Ghost
0x008b7504  typeinfo for Store
0x008b7510  typeinfo for Button
0x008b751c  typeinfo for CEvent
0x008b7524  typeinfo for DoorBox
0x008b7530  typeinfo for HackBox
0x008b753c  typeinfo for MindBox
0x008b7548  typeinfo for Missile
0x008b7554  typeinfo for PDSFire
0x008b7560  typeinfo for Shields
0x008b756c  typeinfo for StarMap
0x008b7578  typeinfo for Asteroid
0x008b7584  typeinfo for BossShip
0x008b7590  typeinfo for CloneBox
0x008b759c  typeinfo for DroneBox
0x008b75a8  typeinfo for GameOver
0x008b75b4  typeinfo for InputBox
0x008b75c0  typeinfo for IonDrone
0x008b75cc  typeinfo for Moddable
0x008b75d4  typeinfo for Spreader<Fire>
0x008b75e0  typeinfo for StoreBox
0x008b75e8  typeinfo for Upgrades
0x008b75f4  typeinfo for Blueprint
0x008b75fc  typeinfo for ChoiceBox
0x008b7608  typeinfo for CrewDrone
0x008b7628  typeinfo for CrewLaser
0x008b7634  typeinfo for EngiAlien
0x008b7640  typeinfo for Equipment
0x008b764c  typeinfo for FTLButton
0x008b7658  typeinfo for OuterHull
0x008b7664  typeinfo for RockAlien
0x008b7670  typeinfo for SlugAlien
0x008b767c  typeinfo for SystemBox
0x008b7684  typeinfo for WeaponBox
0x008b7690  typeinfo for __cxxabiv1::__forced_unwind
0x008b7698  typeinfo for __cxxabiv1::__class_type_info
0x008b76a4  typeinfo for __cxxabiv1::__foreign_exception
0x008b76ac  typeinfo for __cxxabiv1::__si_class_type_info
0x008b76b8  typeinfo for __cxxabiv1::__vmi_class_type_info
0x008b76e8  typeinfo for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008b76f4  typeinfo for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7700  typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008b770c  typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7718  typeinfo for __gnu_cxx::recursive_init_error
0x008b7724  typeinfo for __gnu_cxx::__concurrence_lock_error
0x008b7730  typeinfo for __gnu_cxx::__concurrence_unlock_error
0x008b7b3c  typeinfo for std::_V2::error_category
0x008b7b44  typeinfo for std::locale::facet::__shim
0x008b7b4c  typeinfo for std::locale::facet
0x008b7b54  typeinfo for std::__cxx11::moneypunct<char, false>
0x008b7b74  typeinfo for std::__cxx11::moneypunct<char, true>
0x008b7b94  typeinfo for std::__cxx11::moneypunct<wchar_t, false>
0x008b7bb4  typeinfo for std::__cxx11::moneypunct<wchar_t, true>
0x008b7bd4  typeinfo for std::__cxx11::collate_byname<char>
0x008b7be0  typeinfo for std::__cxx11::collate_byname<wchar_t>
0x008b7bec  typeinfo for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008b7bf8  typeinfo for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7c04  typeinfo for std::__cxx11::messages_byname<char>
0x008b7c10  typeinfo for std::__cxx11::messages_byname<wchar_t>
0x008b7c1c  typeinfo for std::__cxx11::numpunct_byname<char>
0x008b7c28  typeinfo for std::__cxx11::numpunct_byname<wchar_t>
0x008b7c34  typeinfo for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7c40  typeinfo for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7c4c  typeinfo for std::__cxx11::moneypunct_byname<char, false>
0x008b7c58  typeinfo for std::__cxx11::moneypunct_byname<char, true>
0x008b7c64  typeinfo for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008b7c70  typeinfo for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008b7c7c  typeinfo for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7c88  typeinfo for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7c94  typeinfo for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7ca0  typeinfo for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7cac  typeinfo for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b7cb8  typeinfo for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b7cc4  typeinfo for std::__cxx11::collate<char>
0x008b7cd0  typeinfo for std::__cxx11::collate<wchar_t>
0x008b7cdc  typeinfo for std::__cxx11::messages<char>
0x008b7cfc  typeinfo for std::__cxx11::messages<wchar_t>
0x008b7d1c  typeinfo for std::__cxx11::numpunct<char>
0x008b7d28  typeinfo for std::__cxx11::numpunct<wchar_t>
0x008b7d34  typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7d54  typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7d74  typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b7d80  typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7d8c  typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b7d98  typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b7da4  typeinfo for std::ios_base::failure
0x008b7db0  typeinfo for std::iostream
0x008b7dd0  typeinfo for std::istream
0x008b7de8  typeinfo for std::ostream
0x008b7e00  typeinfo for std::bad_typeid
0x008b7e0c  typeinfo for std::ctype_base
0x008b7e14  typeinfo for std::money_base
0x008b7e1c  typeinfo for std::moneypunct<char, false>
0x008b7e3c  typeinfo for std::moneypunct<char, true>
0x008b7e5c  typeinfo for std::moneypunct<wchar_t, false>
0x008b7e7c  typeinfo for std::moneypunct<wchar_t, true>
0x008b7e9c  typeinfo for std::__timepunct<char>
0x008b7ea8  typeinfo for std::__timepunct<wchar_t>
0x008b7eb4  typeinfo for std::logic_error
0x008b7ec0  typeinfo for std::range_error
0x008b7ecc  typeinfo for std::regex_error
0x008b7ed8  typeinfo for std::codecvt_base
0x008b7ee0  typeinfo for std::ctype_byname<char>
0x008b7eec  typeinfo for std::ctype_byname<wchar_t>
0x008b7ef8  typeinfo for std::domain_error
0x008b7f04  typeinfo for std::future_error
0x008b7f10  typeinfo for std::length_error
0x008b7f1c  typeinfo for std::out_of_range
0x008b7f28  typeinfo for std::system_error
0x008b7f34  typeinfo for std::bad_exception
0x008b7f40  typeinfo for std::basic_filebuf<char, std::char_traits<char> >
0x008b7f4c  typeinfo for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b7f58  typeinfo for std::basic_fstream<char, std::char_traits<char> >
0x008b7f64  typeinfo for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008b7f70  typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008b7f88  typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008b7fa0  typeinfo for std::messages_base
0x008b7fa8  typeinfo for std::runtime_error
0x008b7fb4  typeinfo for std::basic_ifstream<char, std::char_traits<char> >
0x008b7fc0  typeinfo for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008b7fcc  typeinfo for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008b7fec  typeinfo for std::basic_ofstream<char, std::char_traits<char> >
0x008b7ff8  typeinfo for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008b8004  typeinfo for std::codecvt_byname<char, char, int>
0x008b8010  typeinfo for std::codecvt_byname<wchar_t, char, int>
0x008b801c  typeinfo for std::collate_byname<char>
0x008b8028  typeinfo for std::collate_byname<wchar_t>
0x008b8034  typeinfo for std::overflow_error
0x008b8040  typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0x008b8048  typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008b8050  typeinfo for std::messages_byname<char>
0x008b805c  typeinfo for std::messages_byname<wchar_t>
0x008b8068  typeinfo for std::numpunct_byname<char>
0x008b8074  typeinfo for std::numpunct_byname<wchar_t>
0x008b8080  typeinfo for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b808c  typeinfo for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8098  typeinfo for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b80a4  typeinfo for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b80b0  typeinfo for std::underflow_error
0x008b80bc  typeinfo for std::__numpunct_cache<char>
0x008b80c8  typeinfo for std::__numpunct_cache<wchar_t>
0x008b80d4  typeinfo for std::invalid_argument
0x008b80e0  typeinfo for std::__timepunct_cache<char>
0x008b80ec  typeinfo for std::__timepunct_cache<wchar_t>
0x008b80f8  typeinfo for std::bad_function_call
0x008b8104  typeinfo for std::moneypunct_byname<char, false>
0x008b8110  typeinfo for std::moneypunct_byname<char, true>
0x008b811c  typeinfo for std::moneypunct_byname<wchar_t, false>
0x008b8128  typeinfo for std::moneypunct_byname<wchar_t, true>
0x008b8134  typeinfo for std::__moneypunct_cache<char, false>
0x008b8140  typeinfo for std::__moneypunct_cache<char, true>
0x008b814c  typeinfo for std::__moneypunct_cache<wchar_t, false>
0x008b8158  typeinfo for std::__moneypunct_cache<wchar_t, true>
0x008b8164  typeinfo for std::__codecvt_utf8_base<char32_t>
0x008b8170  typeinfo for std::__codecvt_utf8_base<char16_t>
0x008b817c  typeinfo for std::__codecvt_utf8_base<wchar_t>
0x008b8188  typeinfo for std::__codecvt_utf16_base<char32_t>
0x008b8194  typeinfo for std::__codecvt_utf16_base<char16_t>
0x008b81a0  typeinfo for std::__codecvt_utf16_base<wchar_t>
0x008b81ac  typeinfo for std::bad_array_new_length
0x008b81b8  typeinfo for std::__ctype_abstract_base<char>
0x008b81d8  typeinfo for std::__ctype_abstract_base<wchar_t>
0x008b81f8  typeinfo for std::__codecvt_abstract_base<char32_t, char, int>
0x008b8218  typeinfo for std::__codecvt_abstract_base<char16_t, char, int>
0x008b8238  typeinfo for std::__codecvt_abstract_base<char, char, int>
0x008b8258  typeinfo for std::__codecvt_abstract_base<wchar_t, char, int>
0x008b8278  typeinfo for std::__codecvt_utf8_utf16_base<char32_t>
0x008b8284  typeinfo for std::__codecvt_utf8_utf16_base<char16_t>
0x008b8290  typeinfo for std::__codecvt_utf8_utf16_base<wchar_t>
0x008b829c  typeinfo for std::ctype<char>
0x008b82bc  typeinfo for std::ctype<wchar_t>
0x008b82c8  typeinfo for std::codecvt<char32_t, char, int>
0x008b82d4  typeinfo for std::codecvt<char16_t, char, int>
0x008b82e0  typeinfo for std::codecvt<char, char, int>
0x008b82ec  typeinfo for std::codecvt<wchar_t, char, int>
0x008b82f8  typeinfo for std::collate<char>
0x008b8304  typeinfo for std::collate<wchar_t>
0x008b8310  typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b831c  typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8328  typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b8334  typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8340  typeinfo for std::bad_cast
0x008b834c  typeinfo for std::ios_base
0x008b8354  typeinfo for std::messages<char>
0x008b8374  typeinfo for std::messages<wchar_t>
0x008b8394  typeinfo for std::numpunct<char>
0x008b83a0  typeinfo for std::numpunct<wchar_t>
0x008b83ac  typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b83cc  typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b83ec  typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b83f8  typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8404  typeinfo for std::bad_alloc
0x008b8410  typeinfo for std::basic_ios<char, std::char_traits<char> >
0x008b841c  typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008b8428  typeinfo for std::exception
0x008b8430  typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b843c  typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8448  typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008b8454  typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b8460  typeinfo for std::time_base
0x008b8468  typeinfo for std::type_info
0x008b8470  typeinfo name for BatteryBox
0x008b8480  typeinfo name for BeamWeapon
0x008b8490  typeinfo name for CachedRect
0x008b84a0  typeinfo name for CrewMember
0x008b84b0  typeinfo name for CrewTarget
0x008b84c0  typeinfo name for LaserBlast
0x008b84d0  typeinfo name for MenuScreen
0x008b84e0  typeinfo name for MindSystem
0x008b84f0  typeinfo name for Projectile
0x008b8500  typeinfo name for Repairable
0x008b8510  typeinfo name for Selectable
0x008b8520  typeinfo name for ShipButton
0x008b8530  typeinfo name for ShipObject
0x008b8540  typeinfo name for ShipRepair
0x008b8550  typeinfo name for ShipSystem
0x008b8560  typeinfo name for SpaceDrone
0x008b8570  typeinfo name for Spreadable
0x008b8580  typeinfo name for Targetable
0x008b8590  typeinfo name for TextButton
0x008b85a0  typeinfo name for ArmamentBox
0x008b85b0  typeinfo name for BattleDrone
0x008b85c0  typeinfo name for CachedImage
0x008b85d0  typeinfo name for CloakingBox
0x008b85e0  typeinfo name for CloneSystem
0x008b85f0  typeinfo name for Collideable
0x008b8600  typeinfo name for CombatDrone
0x008b8610  typeinfo name for DroneSystem
0x008b8620  typeinfo name for EnergyAlien
0x008b8630  typeinfo name for FocusWindow
0x008b8640  typeinfo name for MantisAlien
0x008b8650  typeinfo name for RepairDrone
0x008b8660  typeinfo name for ShipManager
0x008b8670  typeinfo name for TeleportBox
0x008b8680  typeinfo name for ArtilleryBox
0x008b8690  typeinfo name for BoarderDrone
0x008b86a0  typeinfo name for CompleteShip
0x008b86b0  typeinfo name for CrewEquipBox
0x008b86c0  typeinfo name for CrewManifest
0x008b86d0  typeinfo name for CrewStoreBox
0x008b86e0  typeinfo name for CrystalAlien
0x008b86f0  typeinfo name for DefenseDrone
0x008b8700  typeinfo name for DroneControl
0x008b8710  typeinfo name for EngineSystem
0x008b8720  typeinfo name for EquipmentBox
0x008b8730  typeinfo name for HackingDrone
0x008b8740  typeinfo name for ItemStoreBox
0x008b8750  typeinfo name for MedbaySystem
0x008b8760  typeinfo name for OxygenSystem
0x008b8770  typeinfo name for TabbedWindow
0x008b8780  typeinfo name for ToggleButton
0x008b8790  typeinfo name for WeaponSystem
0x008b87a0  typeinfo name for BatterySystem
0x008b87b0  typeinfo name for ConfirmWindow
0x008b87c0  typeinfo name for CrewAnimation
0x008b87d0  typeinfo name for CrewBlueprint
0x008b87e0  typeinfo name for DroneEquipBox
0x008b87f0  typeinfo name for DroneStoreBox
0x008b8800  typeinfo name for EngiAnimation
0x008b8810  typeinfo name for GenericButton
0x008b8820  typeinfo name for HackingSystem
0x008b8830  typeinfo name for ItemBlueprint
0x008b8840  typeinfo name for OptionsScreen
0x008b8850  typeinfo name for ReactorButton
0x008b8860  typeinfo name for RockAnimation
0x008b8870  typeinfo name for ShipBlueprint
0x008b8880  typeinfo name for SlugAnimation
0x008b8890  typeinfo name for WeaponControl
0x008b88a0  typeinfo name for AnaerobicAlien
0x008b88b4  typeinfo name for BombProjectile
0x008b88c8  typeinfo name for CloakingSystem
0x008b88dc  typeinfo name for DistressButton
0x008b88f0  typeinfo name for DroneBlueprint
0x008b8904  typeinfo name for RepairStoreBox
0x008b8918  typeinfo name for SystemStoreBox
0x008b892c  typeinfo name for TeleportSystem
0x008b8940  typeinfo name for WarningMessage
0x008b8954  typeinfo name for WeaponEquipBox
0x008b8968  typeinfo name for WeaponStoreBox
0x008b897c  typeinfo name for ArmamentControl
0x008b8990  typeinfo name for ArtillerySystem
0x008b89a4  typeinfo name for AugmentEquipBox
0x008b89b8  typeinfo name for AugmentStoreBox
0x008b89cc  typeinfo name for BoarderPodDrone
0x008b89e0  typeinfo name for CachedPrimitive
0x008b89f4  typeinfo name for EnergyAnimation
0x008b8a08  typeinfo name for LanguageChooser
0x008b8a1c  typeinfo name for MantisAnimation
0x008b8a30  typeinfo name for RepairAnimation
0x008b8a44  typeinfo name for ShipRepairDrone
0x008b8a58  typeinfo name for SystemBlueprint
0x008b8a6c  typeinfo name for SystemCustomBox
0x008b8a80  typeinfo name for WeaponBlueprint
0x008b8a94  typeinfo name for WeaponSystemBox
0x008b8aa8  typeinfo name for AnimationTracker
0x008b8abc  typeinfo name for AugmentBlueprint
0x008b8ad0  typeinfo name for CrewCustomizeBox
0x008b8ae4  typeinfo name for CrystalAnimation
0x008b8af8  typeinfo name for SuperShieldDrone
0x008b8b0c  typeinfo name for WarningWithLines
0x008b8b20  typeinfo name for CachedRectOutline
0x008b8b34  typeinfo name for CooldownSystemBox
0x008b8b48  typeinfo name for IonDroneAnimation
0x008b8b5c  typeinfo name for ProjectileFactory
0x008b8b70  typeinfo name for AnaerobicAnimation
0x008b8b88  typeinfo name for ExplosionAnimation
0x008b8ba0  typeinfo name for CApp
0x008b8ba8  typeinfo name for Door
0x008b8bb0  typeinfo name for Fire
0x008b8bb8  typeinfo name for Room
0x008b8bc0  typeinfo name for Ship
0x008b8bc8  typeinfo name for Algae
0x008b8bd0  typeinfo name for Drone
0x008b8bd8  typeinfo name for Ghost
0x008b8be0  typeinfo name for Store
0x008b8be8  typeinfo name for Button
0x008b8bf0  typeinfo name for CEvent
0x008b8bf8  typeinfo name for DoorBox
0x008b8c04  typeinfo name for HackBox
0x008b8c10  typeinfo name for MindBox
0x008b8c1c  typeinfo name for Missile
0x008b8c28  typeinfo name for PDSFire
0x008b8c34  typeinfo name for Shields
0x008b8c40  typeinfo name for StarMap
0x008b8c4c  typeinfo name for Asteroid
0x008b8c58  typeinfo name for BossShip
0x008b8c64  typeinfo name for CloneBox
0x008b8c70  typeinfo name for DroneBox
0x008b8c7c  typeinfo name for GameOver
0x008b8c88  typeinfo name for InputBox
0x008b8c94  typeinfo name for IonDrone
0x008b8ca0  typeinfo name for Moddable
0x008b8cac  typeinfo name for Spreader<Fire>
0x008b8cc0  typeinfo name for StoreBox
0x008b8ccc  typeinfo name for Upgrades
0x008b8cd8  typeinfo name for Blueprint
0x008b8ce4  typeinfo name for ChoiceBox
0x008b8cf0  typeinfo name for CrewDrone
0x008b8cfc  typeinfo name for CrewLaser
0x008b8d08  typeinfo name for EngiAlien
0x008b8d14  typeinfo name for Equipment
0x008b8d20  typeinfo name for FTLButton
0x008b8d2c  typeinfo name for OuterHull
0x008b8d38  typeinfo name for RockAlien
0x008b8d44  typeinfo name for SlugAlien
0x008b8d50  typeinfo name for SystemBox
0x008b8d5c  typeinfo name for WeaponBox
0x008b8d80  typeinfo name for __cxxabiv1::__forced_unwind
0x008b8da0  typeinfo name for __cxxabiv1::__class_type_info
0x008b8de0  typeinfo name for __cxxabiv1::__foreign_exception
0x008b8e20  typeinfo name for __cxxabiv1::__si_class_type_info
0x008b8e60  typeinfo name for __cxxabiv1::__vmi_class_type_info
0x008b8f60  typeinfo name for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008b8fa0  typeinfo name for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b8fe0  typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008b9020  typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008b9060  typeinfo name for __gnu_cxx::recursive_init_error
0x008b90a0  typeinfo name for __gnu_cxx::__concurrence_lock_error
0x008b90e0  typeinfo name for __gnu_cxx::__concurrence_unlock_error
0x008b9920  typeinfo name for std::_V2::error_category
0x008b993c  typeinfo name for std::locale::facet::__shim
0x008b9958  typeinfo name for std::locale::facet
0x008b9980  typeinfo name for std::__cxx11::moneypunct<char, false>
0x008b99a0  typeinfo name for std::__cxx11::moneypunct<char, true>
0x008b99c0  typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
0x008b99e0  typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
0x008b9a00  typeinfo name for std::__cxx11::collate_byname<char>
0x008b9a20  typeinfo name for std::__cxx11::collate_byname<wchar_t>
0x008b9a40  typeinfo name for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008b9a80  typeinfo name for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9ac0  typeinfo name for std::__cxx11::messages_byname<char>
0x008b9b00  typeinfo name for std::__cxx11::messages_byname<wchar_t>
0x008b9b40  typeinfo name for std::__cxx11::numpunct_byname<char>
0x008b9b80  typeinfo name for std::__cxx11::numpunct_byname<wchar_t>
0x008b9bc0  typeinfo name for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008b9c20  typeinfo name for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008b9c80  typeinfo name for std::__cxx11::moneypunct_byname<char, false>
0x008b9cc0  typeinfo name for std::__cxx11::moneypunct_byname<char, true>
0x008b9d00  typeinfo name for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008b9d40  typeinfo name for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008b9d80  typeinfo name for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9dc0  typeinfo name for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9e00  typeinfo name for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9e40  typeinfo name for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9e80  typeinfo name for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008b9ec0  typeinfo name for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008b9f00  typeinfo name for std::__cxx11::collate<char>
0x008b9f18  typeinfo name for std::__cxx11::collate<wchar_t>
0x008b9f30  typeinfo name for std::__cxx11::messages<char>
0x008b9f4c  typeinfo name for std::__cxx11::messages<wchar_t>
0x008b9f68  typeinfo name for std::__cxx11::numpunct<char>
0x008b9f84  typeinfo name for std::__cxx11::numpunct<wchar_t>
0x008b9fa0  typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba000  typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba060  typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba0c0  typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba120  typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008ba180  typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba1e0  typeinfo name for std::ios_base::failure
0x008ba1f8  typeinfo name for std::iostream
0x008ba1fc  typeinfo name for std::istream
0x008ba200  typeinfo name for std::ostream
0x008ba204  typeinfo name for std::bad_typeid
0x008ba214  typeinfo name for std::ctype_base
0x008ba224  typeinfo name for std::money_base
0x008ba234  typeinfo name for std::moneypunct<char, false>
0x008ba24c  typeinfo name for std::moneypunct<char, true>
0x008ba264  typeinfo name for std::moneypunct<wchar_t, false>
0x008ba27c  typeinfo name for std::moneypunct<wchar_t, true>
0x008ba294  typeinfo name for std::__timepunct<char>
0x008ba2a8  typeinfo name for std::__timepunct<wchar_t>
0x008ba2bc  typeinfo name for std::logic_error
0x008ba2cc  typeinfo name for std::range_error
0x008ba2dc  typeinfo name for std::regex_error
0x008ba2ec  typeinfo name for std::codecvt_base
0x008ba300  typeinfo name for std::ctype_byname<char>
0x008ba314  typeinfo name for std::ctype_byname<wchar_t>
0x008ba328  typeinfo name for std::domain_error
0x008ba33c  typeinfo name for std::future_error
0x008ba350  typeinfo name for std::length_error
0x008ba364  typeinfo name for std::out_of_range
0x008ba378  typeinfo name for std::system_error
0x008ba38c  typeinfo name for std::bad_exception
0x008ba3a0  typeinfo name for std::basic_filebuf<char, std::char_traits<char> >
0x008ba3e0  typeinfo name for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008ba420  typeinfo name for std::basic_fstream<char, std::char_traits<char> >
0x008ba460  typeinfo name for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008ba4a0  typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008ba4e0  typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008ba520  typeinfo name for std::messages_base
0x008ba534  typeinfo name for std::runtime_error
0x008ba560  typeinfo name for std::basic_ifstream<char, std::char_traits<char> >
0x008ba5a0  typeinfo name for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008ba5e0  typeinfo name for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008ba620  typeinfo name for std::basic_ofstream<char, std::char_traits<char> >
0x008ba660  typeinfo name for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008ba6a0  typeinfo name for std::codecvt_byname<char, char, int>
0x008ba6b8  typeinfo name for std::codecvt_byname<wchar_t, char, int>
0x008ba6d0  typeinfo name for std::collate_byname<char>
0x008ba6e8  typeinfo name for std::collate_byname<wchar_t>
0x008ba700  typeinfo name for std::overflow_error
0x008ba720  typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
0x008ba760  typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008ba7a0  typeinfo name for std::messages_byname<char>
0x008ba7b8  typeinfo name for std::messages_byname<wchar_t>
0x008ba7d0  typeinfo name for std::numpunct_byname<char>
0x008ba7e8  typeinfo name for std::numpunct_byname<wchar_t>
0x008ba800  typeinfo name for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008ba860  typeinfo name for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba8c0  typeinfo name for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008ba920  typeinfo name for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008ba980  typeinfo name for std::underflow_error
0x008ba994  typeinfo name for std::__numpunct_cache<char>
0x008ba9ac  typeinfo name for std::__numpunct_cache<wchar_t>
0x008ba9c4  typeinfo name for std::invalid_argument
0x008ba9dc  typeinfo name for std::__timepunct_cache<char>
0x008ba9f8  typeinfo name for std::__timepunct_cache<wchar_t>
0x008baa14  typeinfo name for std::bad_function_call
0x008baa2c  typeinfo name for std::moneypunct_byname<char, false>
0x008baa4c  typeinfo name for std::moneypunct_byname<char, true>
0x008baa6c  typeinfo name for std::moneypunct_byname<wchar_t, false>
0x008baa8c  typeinfo name for std::moneypunct_byname<wchar_t, true>
0x008baaac  typeinfo name for std::__moneypunct_cache<char, false>
0x008baacc  typeinfo name for std::__moneypunct_cache<char, true>
0x008baaec  typeinfo name for std::__moneypunct_cache<wchar_t, false>
0x008bab0c  typeinfo name for std::__moneypunct_cache<wchar_t, true>
0x008bab2c  typeinfo name for std::__codecvt_utf8_base<char32_t>
0x008bab48  typeinfo name for std::__codecvt_utf8_base<char16_t>
0x008bab64  typeinfo name for std::__codecvt_utf8_base<wchar_t>
0x008bab80  typeinfo name for std::__codecvt_utf16_base<char32_t>
0x008baba0  typeinfo name for std::__codecvt_utf16_base<char16_t>
0x008babc0  typeinfo name for std::__codecvt_utf16_base<wchar_t>
0x008babdc  typeinfo name for std::bad_array_new_length
0x008babf8  typeinfo name for std::__ctype_abstract_base<char>
0x008bac18  typeinfo name for std::__ctype_abstract_base<wchar_t>
0x008bac40  typeinfo name for std::__codecvt_abstract_base<char32_t, char, int>
0x008bac80  typeinfo name for std::__codecvt_abstract_base<char16_t, char, int>
0x008bacc0  typeinfo name for std::__codecvt_abstract_base<char, char, int>
0x008bad00  typeinfo name for std::__codecvt_abstract_base<wchar_t, char, int>
0x008bad40  typeinfo name for std::__codecvt_utf8_utf16_base<char32_t>
0x008bad80  typeinfo name for std::__codecvt_utf8_utf16_base<char16_t>
0x008badc0  typeinfo name for std::__codecvt_utf8_utf16_base<wchar_t>
0x008bae00  typeinfo name for std::ctype<char>
0x008bae0c  typeinfo name for std::ctype<wchar_t>
0x008bae18  typeinfo name for std::codecvt<char32_t, char, int>
0x008bae2c  typeinfo name for std::codecvt<char16_t, char, int>
0x008bae40  typeinfo name for std::codecvt<char, char, int>
0x008bae50  typeinfo name for std::codecvt<wchar_t, char, int>
0x008bae60  typeinfo name for std::collate<char>
0x008bae70  typeinfo name for std::collate<wchar_t>
0x008bae80  typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008baec0  typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008baf00  typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008baf40  typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008baf80  typeinfo name for std::bad_cast
0x008baf8c  typeinfo name for std::ios_base
0x008baf98  typeinfo name for std::messages<char>
0x008bafa8  typeinfo name for std::messages<wchar_t>
0x008bafb8  typeinfo name for std::numpunct<char>
0x008bafc8  typeinfo name for std::numpunct<wchar_t>
0x008bafe0  typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008bb020  typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb060  typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008bb0a0  typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb0e0  typeinfo name for std::bad_alloc
0x008bb100  typeinfo name for std::basic_ios<char, std::char_traits<char> >
0x008bb140  typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008bb180  typeinfo name for std::exception
0x008bb1a0  typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008bb1e0  typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb220  typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008bb260  typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008bb2a0  typeinfo name for std::time_base
0x008bb2b0  typeinfo name for std::type_info
0x008bb2c0  VTT for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb2e8  VTT for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb310  VTT for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb320  VTT for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb330  VTT for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008bb340  VTT for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008bb350  VTT for std::iostream
0x008bb36c  VTT for std::istream
0x008bb374  VTT for std::ostream
0x008bb37c  VTT for std::basic_fstream<char, std::char_traits<char> >
0x008bb3a4  VTT for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008bb3cc  VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008bb3d4  VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008bb3dc  VTT for std::basic_ifstream<char, std::char_traits<char> >
0x008bb3ec  VTT for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008bb3fc  VTT for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008bb418  VTT for std::basic_ofstream<char, std::char_traits<char> >
0x008bb428  VTT for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008bb438  vtable for BatteryBox
0x008bb498  vtable for BeamWeapon
0x008bb570  vtable for CachedRect
0x008bb584  vtable for CrewMember
0x008bb674  vtable for LaserBlast
0x008bb74c  vtable for MenuScreen
0x008bb798  vtable for MindSystem
0x008bb864  vtable for Projectile
0x008bb93c  vtable for Repairable
0x008bb9b8  vtable for ShipButton
0x008bb9f8  vtable for ShipRepair
0x008bba38  vtable for ShipSystem
0x008bbb04  vtable for SpaceDrone
0x008bbc78  vtable for Spreadable
0x008bbd10  vtable for TextButton
0x008bbd50  vtable for ArmamentBox
0x008bbda0  vtable for BattleDrone
0x008bbf40  vtable for CachedImage
0x008bbf54  vtable for CloakingBox
0x008bbfb4  vtable for CloneSystem
0x008bc080  vtable for CombatDrone
0x008bc1f4  vtable for DroneSystem
0x008bc2c0  vtable for EnergyAlien
0x008bc3b0  vtable for FocusWindow
0x008bc3fc  vtable for MantisAlien
0x008bc4ec  vtable for RepairDrone
0x008bc68c  vtable for ShipManager
0x008bc770  vtable for TeleportBox
0x008bc7c4  vtable for ArtilleryBox
0x008bc824  vtable for BoarderDrone
0x008bc9c4  vtable for CompleteShip
0x008bc9e8  vtable for CrewEquipBox
0x008bca44  vtable for CrewManifest
0x008bca90  vtable for CrewStoreBox
0x008bcad8  vtable for CrystalAlien
0x008bcbc8  vtable for DefenseDrone
0x008bcd3c  vtable for DroneControl
0x008bcdb8  vtable for EngineSystem
0x008bce84  vtable for EquipmentBox
0x008bcee0  vtable for HackingDrone
0x008bd054  vtable for ItemStoreBox
0x008bd09c  vtable for MedbaySystem
0x008bd168  vtable for OxygenSystem
0x008bd234  vtable for TabbedWindow
0x008bd280  vtable for ToggleButton
0x008bd2c0  vtable for WeaponSystem
0x008bd38c  vtable for BatterySystem
0x008bd458  vtable for ConfirmWindow
0x008bd4a4  vtable for CrewAnimation
0x008bd4e0  vtable for CrewBlueprint
0x008bd500  vtable for DroneEquipBox
0x008bd55c  vtable for DroneStoreBox
0x008bd5a4  vtable for EngiAnimation
0x008bd5e0  vtable for GenericButton
0x008bd61c  vtable for HackingSystem
0x008bd6e8  vtable for ItemBlueprint
0x008bd708  vtable for OptionsScreen
0x008bd754  vtable for ReactorButton
0x008bd794  vtable for RockAnimation
0x008bd7d0  vtable for ShipBlueprint
0x008bd7f0  vtable for SlugAnimation
0x008bd82c  vtable for WeaponControl
0x008bd8a8  vtable for AnaerobicAlien
0x008bd998  vtable for BombProjectile
0x008bda70  vtable for CloakingSystem
0x008bdb3c  vtable for DistressButton
0x008bdb7c  vtable for DroneBlueprint
0x008bdb9c  vtable for RepairStoreBox
0x008bdbe4  vtable for SystemStoreBox
0x008bdc2c  vtable for TeleportSystem
0x008bdcf8  vtable for WarningMessage
0x008bdd0c  vtable for WeaponEquipBox
0x008bdd68  vtable for WeaponStoreBox
0x008bddb0  vtable for ArmamentControl
0x008bde2c  vtable for ArtillerySystem
0x008bdef8  vtable for AugmentEquipBox
0x008bdf54  vtable for AugmentStoreBox
0x008bdf9c  vtable for BoarderPodDrone
0x008be110  vtable for CachedPrimitive
0x008be124  vtable for EnergyAnimation
0x008be160  vtable for LanguageChooser
0x008be1ac  vtable for MantisAnimation
0x008be1e8  vtable for RepairAnimation
0x008be224  vtable for ShipRepairDrone
0x008be398  vtable for SystemBlueprint
0x008be3b8  vtable for SystemCustomBox
0x008be40c  vtable for WeaponBlueprint
0x008be42c  vtable for WeaponSystemBox
0x008be480  vtable for AnimationTracker
0x008be494  vtable for AugmentBlueprint
0x008be4b4  vtable for CrewCustomizeBox
0x008be510  vtable for CrystalAnimation
0x008be54c  vtable for SuperShieldDrone
0x008be6c0  vtable for WarningWithLines
0x008be6d4  vtable for CachedRectOutline
0x008be6e8  vtable for CooldownSystemBox
0x008be748  vtable for IonDroneAnimation
0x008be784  vtable for ProjectileFactory
0x008be794  vtable for AnaerobicAnimation
0x008be7d0  vtable for ExplosionAnimation
0x008be7f4  vtable for CApp
0x008be860  vtable for Door
0x008be8b4  vtable for Fire
0x008be94c  vtable for Room
0x008be974  vtable for Ship
0x008be984  vtable for Algae
0x008bea1c  vtable for Drone
0x008bea9c  vtable for Ghost
0x008beb8c  vtable for Store
0x008bebd8  vtable for Button
0x008bec18  vtable for CEvent
0x008bec84  vtable for DoorBox
0x008becd8  vtable for HackBox
0x008bed38  vtable for MindBox
0x008bed98  vtable for Missile
0x008bee70  vtable for PDSFire
0x008bef48  vtable for Shields
0x008bf014  vtable for StarMap
0x008bf060  vtable for Asteroid
0x008bf138  vtable for BossShip
0x008bf15c  vtable for CloneBox
0x008bf1bc  vtable for DroneBox
0x008bf20c  vtable for GameOver
0x008bf258  vtable for InputBox
0x008bf2a4  vtable for IonDrone
0x008bf444  vtable for Moddable
0x008bf464  vtable for Spreader<Fire>
0x008bf474  vtable for StoreBox
0x008bf4bc  vtable for Upgrades
0x008bf508  vtable for Blueprint
0x008bf528  vtable for ChoiceBox
0x008bf574  vtable for CrewDrone
0x008bf714  vtable for CrewLaser
0x008bf7ec  vtable for EngiAlien
0x008bf8dc  vtable for Equipment
0x008bf928  vtable for FTLButton
0x008bf968  vtable for OuterHull
0x008bf9e4  vtable for RockAlien
0x008bfad4  vtable for SlugAlien
0x008bfbc4  vtable for SystemBox
0x008bfc18  vtable for WeaponBox
0x008bfc68  vtable for __cxxabiv1::__forced_unwind
0x008bfc7c  vtable for __cxxabiv1::__class_type_info
0x008bfca8  vtable for __cxxabiv1::__foreign_exception
0x008bfcbc  vtable for __cxxabiv1::__si_class_type_info
0x008bfce8  vtable for __cxxabiv1::__vmi_class_type_info
0x008bfd8c  vtable for __gnu_cxx::stdio_filebuf<char, std::char_traits<char> >
0x008bfdcc  vtable for __gnu_cxx::stdio_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008bfe0c  vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0x008bfe4c  vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008bfe8c  vtable for __gnu_cxx::recursive_init_error
0x008bfea0  vtable for __gnu_cxx::__concurrence_lock_error
0x008bfeb4  vtable for __gnu_cxx::__concurrence_unlock_error
0x008c0340  vtable for std::_V2::error_category
0x008c0368  vtable for std::locale::facet
0x008c0378  vtable for std::__cxx11::moneypunct<char, false>
0x008c03ac  vtable for std::__cxx11::moneypunct<char, true>
0x008c03e0  vtable for std::__cxx11::moneypunct<wchar_t, false>
0x008c0414  vtable for std::__cxx11::moneypunct<wchar_t, true>
0x008c0448  vtable for std::__cxx11::collate_byname<char>
0x008c0464  vtable for std::__cxx11::collate_byname<wchar_t>
0x008c0480  vtable for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
0x008c04c0  vtable for std::__cxx11::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0500  vtable for std::__cxx11::messages_byname<char>
0x008c051c  vtable for std::__cxx11::messages_byname<wchar_t>
0x008c0538  vtable for std::__cxx11::numpunct_byname<char>
0x008c055c  vtable for std::__cxx11::numpunct_byname<wchar_t>
0x008c0580  vtable for std::__cxx11::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c05ac  vtable for std::__cxx11::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c05d8  vtable for std::__cxx11::moneypunct_byname<char, false>
0x008c060c  vtable for std::__cxx11::moneypunct_byname<char, true>
0x008c0640  vtable for std::__cxx11::moneypunct_byname<wchar_t, false>
0x008c0674  vtable for std::__cxx11::moneypunct_byname<wchar_t, true>
0x008c06a8  vtable for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c06e4  vtable for std::__cxx11::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0720  vtable for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c0748  vtable for std::__cxx11::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c0770  vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
0x008c0798  vtable for std::__cxx11::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >
0x008c07c0  vtable for std::__cxx11::collate<char>
0x008c07dc  vtable for std::__cxx11::collate<wchar_t>
0x008c07f8  vtable for std::__cxx11::messages<char>
0x008c0814  vtable for std::__cxx11::messages<wchar_t>
0x008c0830  vtable for std::__cxx11::numpunct<char>
0x008c0854  vtable for std::__cxx11::numpunct<wchar_t>
0x008c0878  vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c08a4  vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c08d0  vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c08e8  vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c0900  vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c0918  vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c0930  vtable for std::ios_base::failure
0x008c0944  vtable for std::iostream
0x008c0980  vtable for std::istream
0x008c09a8  vtable for std::ostream
0x008c09d0  vtable for std::bad_typeid
0x008c09e4  vtable for std::moneypunct<char, false>
0x008c0a18  vtable for std::moneypunct<char, true>
0x008c0a4c  vtable for std::moneypunct<wchar_t, false>
0x008c0a80  vtable for std::moneypunct<wchar_t, true>
0x008c0ab4  vtable for std::__timepunct<char>
0x008c0ac4  vtable for std::__timepunct<wchar_t>
0x008c0ad4  vtable for std::logic_error
0x008c0ae8  vtable for std::range_error
0x008c0afc  vtable for std::regex_error
0x008c0b10  vtable for std::ctype_byname<char>
0x008c0b40  vtable for std::ctype_byname<wchar_t>
0x008c0b80  vtable for std::domain_error
0x008c0b94  vtable for std::future_error
0x008c0ba8  vtable for std::length_error
0x008c0bbc  vtable for std::out_of_range
0x008c0bd0  vtable for std::system_error
0x008c0be4  vtable for std::bad_exception
0x008c0bf8  vtable for std::basic_filebuf<char, std::char_traits<char> >
0x008c0c38  vtable for std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >
0x008c0c78  vtable for std::basic_fstream<char, std::char_traits<char> >
0x008c0cb4  vtable for std::basic_fstream<wchar_t, std::char_traits<wchar_t> >
0x008c0cf0  vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0x008c0d18  vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0x008c0d40  vtable for std::runtime_error
0x008c0d54  vtable for std::basic_ifstream<char, std::char_traits<char> >
0x008c0d7c  vtable for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
0x008c0da4  vtable for std::basic_iostream<wchar_t, std::char_traits<wchar_t> >
0x008c0de0  vtable for std::basic_ofstream<char, std::char_traits<char> >
0x008c0e08  vtable for std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >
0x008c0e30  vtable for std::codecvt_byname<char, char, int>
0x008c0e5c  vtable for std::codecvt_byname<wchar_t, char, int>
0x008c0e88  vtable for std::collate_byname<char>
0x008c0ea4  vtable for std::collate_byname<wchar_t>
0x008c0ec0  vtable for std::overflow_error
0x008c0ed4  vtable for std::basic_streambuf<char, std::char_traits<char> >
0x008c0f14  vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0x008c0f54  vtable for std::messages_byname<char>
0x008c0f70  vtable for std::messages_byname<wchar_t>
0x008c0f8c  vtable for std::numpunct_byname<char>
0x008c0fb0  vtable for std::numpunct_byname<wchar_t>
0x008c0fd4  vtable for std::time_get_byname<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c0ffc  vtable for std::time_get_byname<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c1024  vtable for std::time_put_byname<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c1038  vtable for std::time_put_byname<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c104c  vtable for std::underflow_error
0x008c1060  vtable for std::__numpunct_cache<char>
0x008c1070  vtable for std::__numpunct_cache<wchar_t>
0x008c1080  vtable for std::invalid_argument
0x008c1094  vtable for std::__timepunct_cache<char>
0x008c10a4  vtable for std::__timepunct_cache<wchar_t>
0x008c10b4  vtable for std::bad_function_call
0x008c10c8  vtable for std::moneypunct_byname<char, false>
0x008c10fc  vtable for std::moneypunct_byname<char, true>
0x008c1130  vtable for std::moneypunct_byname<wchar_t, false>
0x008c1164  vtable for std::moneypunct_byname<wchar_t, true>
0x008c1198  vtable for std::__moneypunct_cache<char, false>
0x008c11a8  vtable for std::__moneypunct_cache<char, true>
0x008c11b8  vtable for std::__moneypunct_cache<wchar_t, false>
0x008c11c8  vtable for std::__moneypunct_cache<wchar_t, true>
0x008c11d8  vtable for std::__codecvt_utf8_base<char32_t>
0x008c1204  vtable for std::__codecvt_utf8_base<char16_t>
0x008c1230  vtable for std::__codecvt_utf8_base<wchar_t>
0x008c125c  vtable for std::__codecvt_utf16_base<char32_t>
0x008c1288  vtable for std::__codecvt_utf16_base<char16_t>
0x008c12b4  vtable for std::__codecvt_utf16_base<wchar_t>
0x008c12e0  vtable for std::bad_array_new_length
0x008c12f4  vtable for std::__ctype_abstract_base<char>
0x008c1334  vtable for std::__ctype_abstract_base<wchar_t>
0x008c1374  vtable for std::__codecvt_abstract_base<char32_t, char, int>
0x008c13a0  vtable for std::__codecvt_abstract_base<char16_t, char, int>
0x008c13cc  vtable for std::__codecvt_abstract_base<char, char, int>
0x008c13f8  vtable for std::__codecvt_abstract_base<wchar_t, char, int>
0x008c1424  vtable for std::__codecvt_utf8_utf16_base<char32_t>
0x008c1450  vtable for std::__codecvt_utf8_utf16_base<char16_t>
0x008c147c  vtable for std::__codecvt_utf8_utf16_base<wchar_t>
0x008c14a8  vtable for std::ctype<char>
0x008c14d8  vtable for std::ctype<wchar_t>
0x008c1518  vtable for std::codecvt<char32_t, char, int>
0x008c1544  vtable for std::codecvt<char16_t, char, int>
0x008c1570  vtable for std::codecvt<char, char, int>
0x008c159c  vtable for std::codecvt<wchar_t, char, int>
0x008c15c8  vtable for std::collate<char>
0x008c15e4  vtable for std::collate<wchar_t>
0x008c1600  vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c163c  vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c1678  vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c16a8  vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c16d8  vtable for std::bad_cast
0x008c16ec  vtable for std::ios_base
0x008c16fc  vtable for std::messages<char>
0x008c1718  vtable for std::messages<wchar_t>
0x008c1734  vtable for std::numpunct<char>
0x008c1758  vtable for std::numpunct<wchar_t>
0x008c177c  vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c17a4  vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c17cc  vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c17e0  vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c17f4  vtable for std::bad_alloc
0x008c1808  vtable for std::basic_ios<char, std::char_traits<char> >
0x008c1818  vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0x008c1828  vtable for std::exception
0x008c183c  vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0x008c1854  vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c186c  vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0x008c1884  vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0x008c189c  vtable for std::type_info
0x008c4ba8  _RUNTIME_PSEUDO_RELOC_LIST_END__
0x008c4ba8  _RUNTIME_PSEUDO_RELOC_LIST__
0x008c4ba8  _rt_psrelocs_end
0x008c4ba8  _rt_psrelocs_start
0x008c5000  _bss_start__
0x008c5020  p_theApp
0x008c5040  SHIP_BLUEPRINTS
0x008c5140  _ZL15SHIP_BLUEPRINTS
0x008c5240  _ZL15SHIP_BLUEPRINTS
0x008c5340  TutorialManager::Tutorial
0x008c5520  _ZL15SHIP_BLUEPRINTS
0x008c5620  NebulaCloud::OnRender(GL_Color)::lightning
0x008c5624  NebulaCloud::OnRender(GL_Color)::bright_image
0x008c5628  NebulaCloud::OnRender(GL_Color)::storm_image
0x008c562c  NebulaCloud::OnRender(GL_Color)::image
0x008c5630  guard variable for NebulaCloud::OnRender(GL_Color)::lightning
0x008c5638  guard variable for NebulaCloud::OnRender(GL_Color)::bright_image
0x008c5640  guard variable for NebulaCloud::OnRender(GL_Color)::storm_image
0x008c5648  guard variable for NebulaCloud::OnRender(GL_Color)::image
0x008c5660  _ZL15SHIP_BLUEPRINTS
0x008c5760  COLOR_GREEN
0x008c5770  COLOR_RED
0x008c5780  AchievementTracker::Tracker
0x008c5820  _ZL15SHIP_BLUEPRINTS
0x008c5910  COLOR_BUTTON_SELECT
0x008c5920  COLOR_YELLOW
0x008c5930  COLOR_WHITE
0x008c5940  _ZZN10BeamWeaponC4E6PointfiiS0_S0_iP10TargetablefE4side
0x008c5950  COLOR_BLUE_ION
0x008c5960  _ZL11COLOR_GREEN
0x008c5970  _ZL9COLOR_RED
0x008c5980  ScoreKeeper::Keeper
0x008c6ce0  _ZL15SHIP_BLUEPRINTS
0x008c6dd0  COLOR_BUTTON_TEXT
0x008c6de0  _ZL12COLOR_YELLOW
0x008c6df0  _ZL11COLOR_WHITE
0x008c6e00  _ZL9COLOR_RED
0x008c6e10  COLOR_PURPLE_HACKING
0x008c6e20  _ZL12COLOR_YELLOW
0x008c6e30  ShipGraph::ship_graphs
0x008c6e40  CrewMemberFactory::Factory
0x008c6e80  _ZL15SHIP_BLUEPRINTS
0x008c6f80  ShipObject::shipInfoList
0x008c6fa0  CrewMember::iDeathCount
0x008c6fc0  _ZL15SHIP_BLUEPRINTS
0x008c70b0  _ZL11COLOR_GREEN
0x008c70c0  _ZL9COLOR_RED
0x008c70d0  COLOR_CB_BLUE
0x008c70e0  _ZL12COLOR_YELLOW
0x008c70f0  COLOR_GRAY
0x008c7100  _ZL11COLOR_WHITE
0x008c7120  Ship::doorSheetLarge
0x008c7124  Ship::doorSheet
0x008c7140  ShipManager::OnRender(bool, bool)::tracker
0x008c7160  guard variable for ShipManager::OnRender(bool, bool)::tracker
0x008c7180  _ZL15SHIP_BLUEPRINTS
0x008c7280  DebugHelper::CrashCatcher(_EXCEPTION_POINTERS*)::buffer
0x008c72a0  DebugHelper::CrashCatcher(_EXCEPTION_POINTERS*)::symbolBuffer
0x008c73b7  DebugHelper::DebugInit()::didInit
0x008c73b8  std::__ioinit
0x008c73c0  COLOR_BUTTON_ON
0x008c73d0  _ZL11COLOR_WHITE
0x008c73e0  _ZL17COLOR_BUTTON_TEXT
0x008c73f0  _ZL15COLOR_BUTTON_ON
0x008c7400  SystemControl::drone_position
0x008c7408  SystemControl::weapon_position
0x008c7410  powerBarCache
0x008c7430  _ZL17COLOR_BUTTON_TEXT
0x008c7440  _ZL15COLOR_BUTTON_ON
0x008c7450  _ZL11COLOR_GREEN
0x008c7460  COLOR_CB_WHITE
0x008c7470  _ZL11COLOR_WHITE
0x008c7480  _ZL15SHIP_BLUEPRINTS
0x008c7580  _ZL15SHIP_BLUEPRINTS
0x008c7670  _ZL17COLOR_BUTTON_TEXT
0x008c7680  _ZL15COLOR_BUTTON_ON
0x008c7690  _ZL20COLOR_PURPLE_HACKING
0x008c76a0  _ZL11COLOR_WHITE
0x008c76c0  MouseControl::Mouse
0x008c7830  _ZL11COLOR_WHITE
0x008c7840  _ZL19COLOR_BUTTON_SELECT
0x008c7850  _ZL15COLOR_BUTTON_ON
0x008c7860  _ZL11COLOR_WHITE
0x008c7880  enableAdvancedLoc
0x008c7888  infoBoxLoc
0x008c7890  advancedOffButtonLoc
0x008c7898  advancedOnButtonLoc
0x008c78a0  showButtonLoc
0x008c78a8  randomLoc
0x008c78b0  listButtonLoc
0x008c78b8  selectBoxLoc
0x008c78c0  nameButtonLoc
0x008c78c8  hardButtonLoc
0x008c78d0  normalButtonLoc
0x008c78d8  easyButtonLoc
0x008c78e0  startButtonLoc
0x008c78e8  repairingLoc2
0x008c78f0  repairingLoc1
0x008c78f8  typingLoc
0x008c7900  walkingManLoc
0x008c7908  noDronesLoc
0x008c7910  noWeaponsLoc
0x008c7918  shipNameLoc
0x008c7920  advancedTitleLoc
0x008c7928  achievementsTitleLoc
0x008c7930  augmentsTitleLoc
0x008c7938  dronesTitleLoc
0x008c7940  weaponsTitleLoc
0x008c7948  crewTitleLoc
0x008c7950  layoutTitleLoc
0x008c7958  shipTitleLoc
0x008c7960  _ZL15SHIP_BLUEPRINTS
0x008c7a50  _ZL17COLOR_BUTTON_TEXT
0x008c7a60  _ZL19COLOR_BUTTON_SELECT
0x008c7a70  _ZL15COLOR_BUTTON_ON
0x008c7a80  _ZL17COLOR_BUTTON_TEXT
0x008c7a90  _ZL11COLOR_GREEN
0x008c7aa0  _ZL9COLOR_RED
0x008c7ab0  _ZL13COLOR_CB_BLUE
0x008c7ac0  _ZL11COLOR_WHITE
0x008c7ad0  isCharAllowed(int, TextInput::AllowedCharType)::supported_chars
0x008c7af0  guard variable for isCharAllowed(int, TextInput::AllowedCharType)::supported_chars
0x008c7b00  _ZL12COLOR_YELLOW
0x008c7b10  COLOR_RED_WARNING
0x008c7b20  _ZL11COLOR_WHITE
0x008c7b30  WeaponBox::charge_on
0x008c7b34  WeaponBox::charge_off
0x008c7b38  WeaponBox::charge_use
0x008c7b3c  WeaponBox::clock_on
0x008c7b40  WeaponBox::clock_off
0x008c7b44  WeaponBox::arrow_on
0x008c7b48  WeaponBox::arrow_off
0x008c7b4c  WeaponBox::missileIcon
0x008c7b50  _ZL20COLOR_PURPLE_HACKING
0x008c7b60  COLOR_BLACK
0x008c7b70  _ZL12COLOR_YELLOW
0x008c7b80  ArmamentBox::RenderBox(bool, bool)::tracker
0x008c7ba0  guard variable for ArmamentBox::RenderBox(bool, bool)::tracker
0x008c7bb0  _ZL11COLOR_WHITE
0x008c7bc0  _ZL15SHIP_BLUEPRINTS
0x008c7cb0  _ZL17COLOR_BUTTON_TEXT
0x008c7cc0  _ZL15COLOR_BUTTON_ON
0x008c7ce0  _ZL14COLOR_BLUE_ION
0x008c7cf0  _ZL11COLOR_WHITE
0x008c7d00  _ZL15SHIP_BLUEPRINTS
0x008c7df0  _ZL19COLOR_BUTTON_SELECT
0x008c7e00  _ZL15COLOR_BUTTON_ON
0x008c7e10  COLOR_BUTTON_OFF
0x008c7e20  UnlockArrow::arrowImagesLoaded
0x008c7e24  UnlockArrow::arrows
0x008c7e40  ShipButton::achievementImages
0x008c7e68  ShipButton::achievementBoxSelected
0x008c7e6c  ShipButton::achievementBox
0x008c7e70  ShipButton::OnRender()::lit_lock
0x008c7e74  ShipButton::OnRender()::unlit_lock
0x008c7e78  guard variable for ShipButton::OnRender()::lit_lock
0x008c7e80  guard variable for ShipButton::OnRender()::unlit_lock
0x008c7ea0  _ZL15SHIP_BLUEPRINTS
0x008c7f90  _ZL17COLOR_BUTTON_TEXT
0x008c7fa0  _ZL19COLOR_BUTTON_SELECT
0x008c7fb0  _ZL11COLOR_BLACK
0x008c7fc0  _ZL11COLOR_WHITE
0x008c7fe0  CommandGui::RenderStatic()::full_focus
0x008c7fe4  CommandGui::UpdateShake()::change
0x008c7fec  CommandGui::UpdateShake()::current
0x008c7ff4  CommandGui::UpdateShake()::desired
0x008c7ffc  CommandGui::NewLocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<ChoiceText, std::allocator<ChoiceText> >, ResourceEvent, bool)::longest_choice
0x008c8000  guard variable for CommandGui::UpdateShake()::change
0x008c8008  guard variable for CommandGui::UpdateShake()::current
0x008c8010  guard variable for CommandGui::UpdateShake()::desired
0x008c8020  _ZL15SHIP_BLUEPRINTS
0x008c8110  _ZL17COLOR_RED_WARNING
0x008c8120  _ZL14COLOR_BLUE_ION
0x008c8130  _ZL11COLOR_WHITE
0x008c8140  _ZL17COLOR_BUTTON_TEXT
0x008c8150  _ZL15COLOR_BUTTON_ON
0x008c8160  _ZL11COLOR_GREEN
0x008c8170  _ZL9COLOR_RED
0x008c8180  _ZL11COLOR_WHITE
0x008c8190  _ZL15COLOR_BUTTON_ON
0x008c81a0  _ZL12COLOR_YELLOW
0x008c81b0  _ZL11COLOR_WHITE
0x008c81c0  _ZL15SHIP_BLUEPRINTS
0x008c82b0  _ZL17COLOR_BUTTON_TEXT
0x008c82c0  _ZL15COLOR_BUTTON_ON
0x008c82d0  _ZL11COLOR_GREEN
0x008c82e0  _ZL14COLOR_CB_WHITE
0x008c8300  _ZL15COLOR_BUTTON_ON
0x008c8310  _ZL17COLOR_RED_WARNING
0x008c8320  _ZL11COLOR_WHITE
0x008c8330  _ZL17COLOR_BUTTON_TEXT
0x008c8340  _ZL15COLOR_BUTTON_ON
0x008c8350  _ZL17COLOR_RED_WARNING
0x008c8360  _ZL20COLOR_PURPLE_HACKING
0x008c8370  _ZL17COLOR_BUTTON_TEXT
0x008c8380  _ZL15COLOR_BUTTON_ON
0x008c8390  _ZL16COLOR_BUTTON_OFF
0x008c83a0  _ZL17COLOR_RED_WARNING
0x008c83b0  _ZL11COLOR_WHITE
0x008c83c0  _ZL15COLOR_BUTTON_ON
0x008c83d0  _ZL11COLOR_WHITE
0x008c83e0  _ZL15SHIP_BLUEPRINTS
0x008c84d0  _ZL15COLOR_BUTTON_ON
0x008c84e0  InfoBox::detailsBarOn
0x008c84f0  InfoBox::detailsBarOff
0x008c8500  InfoBox::scrapIcon
0x008c8504  InfoBox::detailsBoxRight
0x008c8508  InfoBox::detailsBoxCenter
0x008c850c  InfoBox::detailsBoxLeft
0x008c8510  _ZL15COLOR_BUTTON_ON
0x008c8520  _ZL11COLOR_GREEN
0x008c8530  _ZL11COLOR_WHITE
0x008c8540  WeaponControl::beam_piece_red
0x008c8544  WeaponControl::beam_piece_yellow
0x008c8550  _ZL19COLOR_BUTTON_SELECT
0x008c8560  _ZL15COLOR_BUTTON_ON
0x008c8570  _ZL16COLOR_BUTTON_OFF
0x008c8580  _ZL17COLOR_RED_WARNING
0x008c8590  DroneBox::droneIcon
0x008c85a0  _ZL20COLOR_PURPLE_HACKING
0x008c85c0  _ZL15SHIP_BLUEPRINTS
0x008c86b0  _ZL17COLOR_BUTTON_TEXT
0x008c86c0  _ZL11COLOR_WHITE
0x008c86e0  _ZL15SHIP_BLUEPRINTS
0x008c87d0  _ZL17COLOR_RED_WARNING
0x008c87e0  _ZL20COLOR_PURPLE_HACKING
0x008c87f0  COLOR_BLUE_SHIELD
0x008c8800  _ZL11COLOR_GREEN
0x008c8810  _ZL11COLOR_WHITE
0x008c8820  languageList
0x008c8840  _ZL15SHIP_BLUEPRINTS
0x008c8930  _ZL17COLOR_BUTTON_TEXT
0x008c8940  COLOR_YELLOW_PLAIN
0x008c8950  _ZL12COLOR_YELLOW
0x008c8960  _ZL10COLOR_GRAY
0x008c8970  _ZL11COLOR_WHITE
0x008c8980  _ZL17COLOR_BUTTON_TEXT
0x008c8990  _ZL19COLOR_BUTTON_SELECT
0x008c89a0  _ZL15COLOR_BUTTON_ON
0x008c89b0  _ZL16COLOR_BUTTON_OFF
0x008c89c0  CEvent::lastEventTime
0x008c89e0  TranslateSILKey(int)::keymap
0x008c8c28  TranslateSILKey(int)::initted
0x008c8c40  freetype::canBreakLine(int, int)::no_end
0x008c8c58  freetype::canBreakLine(int, int)::no_begin
0x008c8c70  guard variable for freetype::canBreakLine(int, int)::no_end
0x008c8c78  guard variable for freetype::canBreakLine(int, int)::no_begin
0x008c8c80  freetype::textCache
0x008c8ca0  Settings::settings
0x008c8d38  Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::initted
0x008c8d40  Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::key_names
0x008cb098  guard variable for Settings::GetHotkeyName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::key_names
0x008cb0a0  AnimationControl::Animations
0x008cb100  FileHelper::currentFile
0x008cb104  statsFileReadPos
0x008cb108  saveFileReadPos
0x008cb10c  statsFileData
0x008cb118  saveFileData
0x008cb140  forceAntialias
0x008cb144  colorTints
0x008cb150  currentColor
0x008cb160  matrix_stack_top
0x008cb180  matrix_stack
0x008cb580  modelview_matrix
0x008cb5c0  stencilStack
0x008cb5cc  stencilState
0x008cb5d8  scissorStack
0x008cb5e4  primTypeForRender
0x008cb5e8  verticesForRender
0x008cb600  CFPS::FPSControl
0x008cb640  EventSystem::EventManager
0x008cb658  ftl_log(char const*, ...)::logfile
0x008cb65c  primitiveCache
0x008cb680  ResourceControl::GlobalResources
0x008cb77c  ResourceControl::GetChineseFont(int)::font
0x008cb7a0  Globals::RNG
0x008cb7c0  Globals::Library
0x008cb820  SoundControl::Sounds
0x008cb900  _ZL17COLOR_RED_WARNING
0x008cb920  EventGenerator::Generator
0x008cbaa0  itemStrings[abi:cxx11]
0x008cbb00  resourceStrings[abi:cxx11]
0x008cbb60  EventsParser::Parser
0x008cbba4  EventsParser::GetEventName[abi:cxx11]()::i
0x008cbba8  text_data
0x008cbbc0  _ZL15SHIP_BLUEPRINTS
0x008cbcb0  _ZL17COLOR_BUTTON_TEXT
0x008cbcc0  _ZL15COLOR_BUTTON_ON
0x008cbcd0  _ZL17COLOR_RED_WARNING
0x008cbce0  STARMAP_GRAY
0x008cbcf0  STARMAP_PURPLE
0x008cbd00  STARMAP_RED
0x008cbd10  STARMAP_GREEN
0x008cbd20  _ZL11COLOR_GREEN
0x008cbd30  _ZL12COLOR_YELLOW
0x008cbd40  _ZL10COLOR_GRAY
0x008cbd50  _ZL11COLOR_WHITE
0x008cbd60  BlueprintManager::Blueprints
0x008cbe80  BlueprintManager::skillIcons
0x008cbec0  BlueprintManager::GetSystemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cbfa0  BlueprintManager::GetItemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc060  BlueprintManager::GetAugmentBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc140  BlueprintManager::GetWeaponBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc360  BlueprintManager::GetDroneBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc498  guard variable for BlueprintManager::GetSystemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4a0  guard variable for BlueprintManager::GetItemBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4a8  guard variable for BlueprintManager::GetAugmentBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4b0  guard variable for BlueprintManager::GetWeaponBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4b8  guard variable for BlueprintManager::GetDroneBlueprint(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::dummy
0x008cc4c0  _ZL9text_data
0x008cc4e0  _ZL11COLOR_GREEN
0x008cc4f0  _ZL14COLOR_CB_WHITE
0x008cc500  _ZL13COLOR_CB_BLUE
0x008cc510  _ZL12COLOR_YELLOW
0x008cc520  StatusEffect::GetStormEffect()::storm
0x008cc530  StatusEffect::GetNebulaEffect()::nebula
0x008cc540  guard variable for StatusEffect::GetStormEffect()::storm
0x008cc548  guard variable for StatusEffect::GetNebulaEffect()::nebula
0x008cc560  _ZL15SHIP_BLUEPRINTS
0x008cc660  Shields::shieldsDownPrimitive
0x008cc670  _ZL11COLOR_GREEN
0x008cc680  _ZL11COLOR_WHITE
0x008cc6a0  _ZL15SHIP_BLUEPRINTS
0x008cc7a0  _ZL15SHIP_BLUEPRINTS
0x008cc8a0  ShipSystem::glowInfo[abi:cxx11]
0x008cc8b8  ShipSystem::fireImage
0x008cc8bc  ShipSystem::sabotageImage
0x008cc8c0  ShipSystem::lockHack
0x008cc8c4  ShipSystem::lockBlue
0x008cc8c8  ShipSystem::lockWhite
0x008cc8cc  ShipSystem::manningBarLargeIon
0x008cc8d0  ShipSystem::manningBarLargeOn
0x008cc8d4  ShipSystem::manningBarLargeOff
0x008cc8d8  ShipSystem::manningBarIon
0x008cc8dc  ShipSystem::manningBarOn
0x008cc8e0  ShipSystem::manningBarOff
0x008cc8e4  ShipSystem::manningYellow
0x008cc8e8  ShipSystem::manningGreen
0x008cc8ec  ShipSystem::manningWhite
0x008cc8f0  ShipSystem::manningOutline
0x008cc8f4  ShipSystem::glowBlue
0x008cc8f8  ShipSystem::glowRed
0x008cc8fc  ShipSystem::glowWhite
0x008cc900  _ZZN10ShipSystemC4EiiiiE10colorNames
0x008cc978  _ZGVZN10ShipSystemC4EiiiiE10colorNames
0x008cc980  _ZL20COLOR_PURPLE_HACKING
0x008cc990  COLOR_ORANGE
0x008cc9a0  COLOR_RED_PLAIN
0x008cc9b0  _ZL14COLOR_BLUE_ION
0x008cc9c0  COLOR_PURPLE
0x008cc9d0  _ZL11COLOR_GREEN
0x008cc9e0  _ZL9COLOR_RED
0x008cc9f0  _ZL14COLOR_CB_WHITE
0x008cca00  COLOR_CB_ORANGE
0x008cca10  COLOR_CB_RED
0x008cca20  _ZL12COLOR_YELLOW
0x008cca30  _ZL10COLOR_GRAY
0x008cca40  PowerManager::powerManagers
0x008cca60  TeleportSystem::OnRenderFloor()::selected
0x008cca64  TeleportSystem::OnRenderFloor()::on
0x008cca68  TeleportSystem::OnRenderFloor()::off
0x008cca70  guard variable for TeleportSystem::OnRenderFloor()::selected
0x008cca78  guard variable for TeleportSystem::OnRenderFloor()::on
0x008cca80  guard variable for TeleportSystem::OnRenderFloor()::off
0x008ccaa0  _ZL15SHIP_BLUEPRINTS
0x008cd020  warned.4607
0x008d87e0  buffer.5190
0x008d97e0  dummy_resinfo.5260
0x008d9840  accum_buffer.4570
0x008db898  dialect.4037
0x008db89b  language.4036
0x008dbb60  buf.116245
0x008dc740  warned.91122
0x008dc748  attr.91121
0x008dc778  checked.91862
0x008dc780  buf.116040
0x008dc7a8  buf.115880
0x00ef5540  jdt_attr.92947
0x00ef678c  create_mutex.90962
0x00ef6790  sys_thread_key_created.90961
0x00ef6798  warned.91880
0x00ef67c0  buf.91898
0x00ef6f3c  was_init.67161
0x00ef6f7c  s_mbstate.25797
0x00ef6f80  internal_mbstate.25781
0x00ef6f84  internal_mbstate.25770
0x00ef7f00  _bss_end__
0x00ef9000  _head_lib32_libdbghelp_a
0x00ef9014  _head_lib32_libgdi32_a
0x00ef9028  _head_lib32_libkernel32_a
0x00ef903c  _head_lib32_libmsvcrt_a
0x00ef9050  _head_lib32_libole32_a
0x00ef9064  _head_lib32_libpsapi_a
0x00ef9078  _head_lib32_libshell32_a
0x00ef908c  _head_lib32_libuser32_a
0x00ef90a0  _head_lib32_libwinmm_a
0x00ef90b4  _head_BASS_dll
0x00ef90c8  _head_BASSMIX_dll
0x00ef90f0  hname
0x00ef910c  hname
0x00ef9120  hname
0x00ef92a0  hname
0x00ef9460  hname
0x00ef9478  hname
0x00ef9484  hname
0x00ef9494  hname
0x00ef9538  hname
0x00ef95c8  _IAT_start__
0x00ef95c8  _imp__StackWalk@36
0x00ef95c8  fthunk
0x00ef95cc  _imp__SymCleanup@4
0x00ef95d0  _imp__SymFunctionTableAccess@8
0x00ef95d4  _imp__SymGetModuleBase@8
0x00ef95d8  _imp__SymGetSymFromAddr@16
0x00ef95dc  _imp__SymInitialize@12
0x00ef95e4  _imp__ChoosePixelFormat@8
0x00ef95e4  fthunk
0x00ef95e8  _imp__DescribePixelFormat@16
0x00ef95ec  _imp__SetPixelFormat@12
0x00ef95f0  _imp__SwapBuffers@4
0x00ef95f8  _imp__CloseHandle@4
0x00ef95f8  fthunk
0x00ef95fc  _imp__CreateDirectoryA@8
0x00ef9600  _imp__CreateDirectoryW@8
0x00ef9604  _imp__CreateEventA@16
0x00ef9608  _imp__CreateFileW@28
0x00ef960c  _imp__CreateSemaphoreA@16
0x00ef9610  _imp__CreateSemaphoreW@16
0x00ef9614  _imp__CreateThread@24
0x00ef9618  _imp__DeleteCriticalSection@4
0x00ef961c  _imp__DeleteFileW@4
0x00ef9620  _imp__DuplicateHandle@28
0x00ef9624  _imp__EnterCriticalSection@4
0x00ef9628  _imp__ExitProcess@4
0x00ef962c  _imp__ExitThread@4
0x00ef9630  _imp__FindClose@4
0x00ef9634  _imp__FindFirstFileW@8
0x00ef9638  _imp__FindNextFileW@8
0x00ef963c  _imp__FlushFileBuffers@4
0x00ef9640  _imp__FormatMessageA@28
0x00ef9644  _imp__FormatMessageW@28
0x00ef9648  _imp__FreeEnvironmentStringsW@4
0x00ef964c  _imp__FreeLibrary@4
0x00ef9650  _imp__GetCommandLineW@0
0x00ef9654  _imp__GetCurrentDirectoryW@8
0x00ef9658  _imp__GetCurrentProcess@0
0x00ef965c  _imp__GetCurrentProcessId@0
0x00ef9660  _imp__GetCurrentThread@0
0x00ef9664  _imp__GetCurrentThreadId@0
0x00ef9668  _imp__GetEnvironmentStringsW@0
0x00ef966c  _imp__GetEnvironmentVariableW@12
0x00ef9670  _imp__GetExitCodeThread@8
0x00ef9674  _imp__GetFileAttributesW@4
0x00ef9678  _imp__GetFileSize@8
0x00ef967c  _imp__GetLastError@0
0x00ef9680  _imp__GetModuleFileNameA@12
0x00ef9684  _imp__GetModuleFileNameW@12
0x00ef9688  _imp__GetModuleHandleA@4
0x00ef968c  _imp__GetModuleHandleW@4
0x00ef9690  _imp__GetProcAddress@8
0x00ef9694  _imp__GetProcessAffinityMask@12
0x00ef9698  _imp__GetProcessHeap@0
0x00ef969c  _imp__GetStartupInfoA@4
0x00ef96a0  _imp__GetStdHandle@4
0x00ef96a4  _imp__GetSystemDefaultUILanguage@0
0x00ef96a8  _imp__GetSystemTime@4
0x00ef96ac  _imp__GetSystemTimeAsFileTime@4
0x00ef96b0  _imp__GetTempPathW@8
0x00ef96b4  _imp__GetThreadPriority@4
0x00ef96b8  _imp__GetTickCount@0
0x00ef96bc  _imp__GetTimeZoneInformation@4
0x00ef96c0  _imp__GetUserDefaultUILanguage@0
0x00ef96c4  _imp__HeapAlloc@12
0x00ef96c8  _imp__HeapFree@12
0x00ef96cc  _imp__InitializeCriticalSection@4
0x00ef96d0  _imp__IsDBCSLeadByteEx@8
0x00ef96d4  _imp__LeaveCriticalSection@4
0x00ef96d8  _imp__LoadLibraryW@4
0x00ef96dc  _imp__MoveFileExW@12
0x00ef96e0  _imp__MultiByteToWideChar@24
0x00ef96e4  _imp__QueryPerformanceCounter@4
0x00ef96e8  _imp__QueryPerformanceFrequency@4
0x00ef96ec  _imp__RaiseException@16
0x00ef96f0  _imp__ReadFile@20
0x00ef96f4  _imp__ReleaseSemaphore@12
0x00ef96f8  _imp__RemoveDirectoryW@4
0x00ef96fc  _imp__ResetEvent@4
0x00ef9700  _imp__ResumeThread@4
0x00ef9704  _imp__SetCurrentDirectoryW@4
0x00ef9708  _imp__SetEnvironmentVariableW@8
0x00ef970c  _imp__SetErrorMode@4
0x00ef9710  _imp__SetEvent@4
0x00ef9714  _imp__SetFileAttributesW@8
0x00ef9718  _imp__SetFilePointer@16
0x00ef971c  _imp__SetLastError@4
0x00ef9720  _imp__SetThreadAffinityMask@8
0x00ef9724  _imp__SetThreadExecutionState@4
0x00ef9728  _imp__SetThreadPriority@8
0x00ef972c  _imp__SetUnhandledExceptionFilter@4
0x00ef9730  _imp__Sleep@4
0x00ef9734  _imp__SwitchToThread@0
0x00ef9738  _imp__SystemTimeToFileTime@8
0x00ef973c  _imp__TerminateProcess@8
0x00ef9740  _imp__TlsAlloc@0
0x00ef9744  _imp__TlsFree@4
0x00ef9748  _imp__TlsGetValue@4
0x00ef974c  _imp__TlsSetValue@8
0x00ef9750  _imp__TryEnterCriticalSection@4
0x00ef9754  _imp__UnhandledExceptionFilter@4
0x00ef9758  _imp__VerSetConditionMask@16
0x00ef975c  _imp__VerifyVersionInfoW@16
0x00ef9760  _imp__VirtualProtect@16
0x00ef9764  _imp__VirtualQuery@12
0x00ef9768  _imp__WaitForSingleObject@8
0x00ef976c  _imp__WideCharToMultiByte@32
0x00ef9770  _imp__WriteFile@20
0x00ef9778  _imp____dllonexit
0x00ef9778  fthunk
0x00ef977c  _imp____doserrno
0x00ef9780  _imp____getmainargs
0x00ef9788  _imp____lconv_init
0x00ef978c  _imp____mb_cur_max
0x00ef9794  _imp____set_app_type
0x00ef9798  _imp____setusermatherr
0x00ef97a0  _imp___amsg_exit
0x00ef97a4  _imp___cexit
0x00ef97a8  _imp___errno
0x00ef97ac  _imp___exit
0x00ef97b0  _imp___filelengthi64
0x00ef97b4  _imp___fileno
0x00ef97bc  _imp___fstat64
0x00ef97c0  _imp___initterm
0x00ef97c8  _imp___lock
0x00ef97cc  _imp___lseeki64
0x00ef97d4  _imp___setjmp3
0x00ef97d8  _imp___snprintf
0x00ef97dc  _imp___snwprintf
0x00ef97e0  _imp___time32
0x00ef97e4  _imp___localtime32
0x00ef97e8  _imp___strnicmp
0x00ef97ec  _imp__calloc
0x00ef97f0  _imp__exit
0x00ef97f4  _imp__fclose
0x00ef97f8  _imp__fflush
0x00ef97fc  _imp__fgetpos
0x00ef9800  _imp__fopen
0x00ef9804  _imp__fprintf
0x00ef9808  _imp__fputc
0x00ef980c  _imp__fputs
0x00ef9810  _imp__fread
0x00ef9814  _imp__free
0x00ef9818  _imp__freopen
0x00ef981c  _imp__frexp
0x00ef9820  _imp__fseek
0x00ef9824  _imp__fsetpos
0x00ef9828  _imp__ftell
0x00ef982c  _imp__fwprintf
0x00ef9830  _imp__fwrite
0x00ef9834  _imp__getc
0x00ef9838  _imp__getenv
0x00ef983c  _imp__getwc
0x00ef9840  _imp__isspace
0x00ef9844  _imp__iswctype
0x00ef9848  _imp__localeconv
0x00ef984c  _imp__log10
0x00ef9850  _imp__malloc
0x00ef9854  _imp__memchr
0x00ef9858  _imp__memcmp
0x00ef985c  _imp__memcpy
0x00ef9860  _imp__memmove
0x00ef9864  _imp__memset
0x00ef9868  _imp__putc
0x00ef986c  _imp__putwc
0x00ef9870  _imp__qsort
0x00ef9874  _imp__raise
0x00ef9878  _imp__rand
0x00ef987c  _imp__realloc
0x00ef9880  _imp__setlocale
0x00ef9884  _imp__setvbuf
0x00ef9888  _imp__signal
0x00ef988c  _imp__sprintf
0x00ef9890  _imp__srand
0x00ef9894  _imp__strchr
0x00ef9898  _imp__strcmp
0x00ef989c  _imp__strcoll
0x00ef98a0  _imp__strcpy
0x00ef98a4  _imp__strcspn
0x00ef98a8  _imp__strerror
0x00ef98ac  _imp__strftime
0x00ef98b0  _imp__strlen
0x00ef98b4  _imp__strncmp
0x00ef98b8  _imp__strncpy
0x00ef98bc  _imp__strrchr
0x00ef98c0  _imp__strspn
0x00ef98c4  _imp__strstr
0x00ef98c8  _imp__strtol
0x00ef98cc  _imp__strtoul
0x00ef98d0  _imp__strxfrm
0x00ef98d4  _imp___unlock
0x00ef98d8  _imp___write
0x00ef98dc  _imp__abort
0x00ef98e0  _imp__atof
0x00ef98e4  _imp__atoi
0x00ef98e8  _imp__tan
0x00ef98ec  _imp__tolower
0x00ef98f0  _imp__toupper
0x00ef98f4  _imp__towlower
0x00ef98f8  _imp__towupper
0x00ef98fc  _imp__ungetc
0x00ef9900  _imp__ungetwc
0x00ef9904  _imp__vfprintf
0x00ef9908  _imp__wcscoll
0x00ef990c  _imp__wcscpy
0x00ef9910  _imp__wcsftime
0x00ef9914  _imp__wcslen
0x00ef9918  _imp__wcsxfrm
0x00ef991c  _imp__longjmp
0x00ef9920  _imp__write
0x00ef9924  _imp__read
0x00ef9928  _imp__itoa
0x00ef992c  _imp__fileno
0x00ef9930  _imp__fdopen
0x00ef9938  _imp__CoCreateInstance@20
0x00ef9938  fthunk
0x00ef993c  _imp__CoInitializeEx@8
0x00ef9940  _imp__CoTaskMemFree@4
0x00ef9944  _imp__CoUninitialize@0
0x00ef9948  _imp__PropVariantClear@4
0x00ef9950  _imp__EnumProcessModules@16
0x00ef9950  fthunk
0x00ef9954  _imp__GetModuleInformation@16
0x00ef995c  _imp__CommandLineToArgvW@8
0x00ef995c  fthunk
0x00ef9960  _imp__SHGetFolderPathW@20
0x00ef9964  _imp__ShellExecuteA@24
0x00ef996c  _imp__AdjustWindowRectEx@16
0x00ef996c  fthunk
0x00ef9970  _imp__ChangeDisplaySettingsExA@20
0x00ef9974  _imp__ClientToScreen@8
0x00ef9978  _imp__ClipCursor@4
0x00ef997c  _imp__CreateIconFromResourceEx@28
0x00ef9980  _imp__CreateWindowExW@48
0x00ef9984  _imp__DefWindowProcW@16
0x00ef9988  _imp__DestroyWindow@4
0x00ef998c  _imp__DispatchMessageW@4
0x00ef9990  _imp__EnumDisplayDevicesA@16
0x00ef9994  _imp__EnumDisplaySettingsA@12
0x00ef9998  _imp__GetClientRect@8
0x00ef999c  _imp__GetDC@4
0x00ef99a0  _imp__GetMessageW@16
0x00ef99a4  _imp__GetRawInputData@20
0x00ef99a8  _imp__GetRawInputDeviceInfoW@16
0x00ef99ac  _imp__GetRawInputDeviceList@12
0x00ef99b0  _imp__GetSystemMetrics@4
0x00ef99b4  _imp__GetWindowLongW@8
0x00ef99b8  _imp__GetWindowRect@8
0x00ef99bc  _imp__LoadCursorA@8
0x00ef99c0  _imp__LoadImageA@24
0x00ef99c4  _imp__MapVirtualKeyA@8
0x00ef99c8  _imp__MessageBoxA@16
0x00ef99cc  _imp__MessageBoxW@16
0x00ef99d0  _imp__PeekMessageW@20
0x00ef99d4  _imp__PostMessageW@16
0x00ef99d8  _imp__RegisterClassExW@4
0x00ef99dc  _imp__RegisterRawInputDevices@12
0x00ef99e0  _imp__ReleaseDC@8
0x00ef99e4  _imp__ScreenToClient@8
0x00ef99e8  _imp__SendMessageW@16
0x00ef99ec  _imp__SetCursorPos@8
0x00ef99f0  _imp__SetWindowLongW@12
0x00ef99f4  _imp__SetWindowPos@28
0x00ef99f8  _imp__SetWindowTextW@8
0x00ef99fc  _imp__ShowCursor@4
0x00ef9a00  _imp__ShowWindow@8
0x00ef9a04  _imp__TranslateMessage@4
0x00ef9a08  _imp__UnregisterClassA@8
0x00ef9a10  _imp__timeBeginPeriod@4
0x00ef9a10  fthunk
0x00ef9a14  _imp__timeGetDevCaps@8
0x00ef9a18  _imp__timeGetTime@0
0x00ef9a1c  _imp__waveOutClose@4
0x00ef9a20  _imp__waveOutGetDevCapsA@12
0x00ef9a24  _imp__waveOutGetNumDevs@0
0x00ef9a28  _imp__waveOutOpen@24
0x00ef9a2c  _imp__waveOutPrepareHeader@12
0x00ef9a30  _imp__waveOutReset@4
0x00ef9a34  _imp__waveOutUnprepareHeader@12
0x00ef9a38  _imp__waveOutWrite@12
0x00ef9a40  _imp__BASS_ChannelFlags
0x00ef9a44  _imp__BASS_ChannelIsActive
0x00ef9a48  _imp__BASS_ChannelPause
0x00ef9a4c  _imp__BASS_ChannelPlay
0x00ef9a50  _imp__BASS_ChannelRemoveSync
0x00ef9a54  _imp__BASS_ChannelSetAttribute
0x00ef9a58  _imp__BASS_ChannelSetPosition
0x00ef9a5c  _imp__BASS_ChannelSetSync
0x00ef9a60  _imp__BASS_ChannelSlideAttribute
0x00ef9a64  _imp__BASS_ChannelStop
0x00ef9a68  _imp__BASS_ErrorGetCode
0x00ef9a6c  _imp__BASS_Free
0x00ef9a70  _imp__BASS_Init
0x00ef9a74  _imp__BASS_SampleGetChannel
0x00ef9a78  _imp__BASS_SampleGetInfo
0x00ef9a7c  _imp__BASS_SampleLoad
0x00ef9a80  _imp__BASS_SampleSetInfo
0x00ef9a84  _imp__BASS_SetConfig
0x00ef9a88  _imp__BASS_StreamCreateFile
0x00ef9a90  _imp__BASS_Mixer_ChannelRemove
0x00ef9a94  _imp__BASS_Mixer_StreamAddChannel
0x00ef9a98  _imp__BASS_Mixer_StreamCreate
0x00ef9aa0  _IAT_end__
0x00efad84  _lib32_libdbghelp_a_iname
0x00efada0  _lib32_libgdi32_a_iname
0x00efaf28  _lib32_libkernel32_a_iname
0x00efb0f4  _lib32_libmsvcrt_a_iname
0x00efb114  _lib32_libole32_a_iname
0x00efb128  _lib32_libpsapi_a_iname
0x00efb140  _lib32_libshell32_a_iname
0x00efb1ec  _lib32_libuser32_a_iname
0x00efb224  _lib32_libwinmm_a_iname
0x00efb27c  BASS_dll_iname
0x00efb294  BASSMIX_dll_iname
0x00efc000  __crt_xc_start__
0x00efc00c  __crt_xc_end__
0x00efc00c  __crt_xi_start__
0x00efc01c  __crt_xi_end__
0x00efc01c  __crt_xl_start__
0x00efc02c  __crt_xp_end__
0x00efc02c  __crt_xp_start__
0x00efc02c  __crt_xt_end__
0x00efc02c  __crt_xt_start__
0x00efd000  __tls_start__
0x00efd020  __tls_end__
