#include "Global.h"
#include "Projectile_Extend.h"
#include "CustomWeapons.h"

CustomDamage* CustomDamageManager::currentWeaponDmg = nullptr;


HOOK_METHOD(ShipManager, DamageArea, (Pointf location, DamageParameter dmgParam, bool forceHit) -> bool)
{
    Damage* dmg = (Damage*)&dmgParam;

    auto custom = CustomDamageManager::currentWeaponDmg;

    if (custom)
    {
        if (custom->timeDilation != 0)
        {
            int roomId = ship.GetSelectedRoomId(location.x, location.y, true);

            if (roomId != -1)
            {
                RM_EX(ship.vRoomList[roomId])->timeDilation = custom->timeDilation;
            }
        }
    }

    return super(location, dmgParam, forceHit);
}


HOOK_METHOD(ShipManager, GetDodged, () -> bool)

HOOK_METHOD(ProjectileFactory, Update, () -> void)
{
    CustomDamageManager::currentWeaponDmg = CustomWeaponManager::GetWeaponDefinition().customDamage;

    super();

    CustomDamageManager::currentWeaponDmg = nullptr;
}

HOOK_METHOD(Projectile, Initialize, (WeaponBlueprint& bp) -> void)
{
    super(bp);

    auto customDmg = CustomDamageManager::currentWeaponDmg;

    if (customDmg != nullptr)
    {
        PR_EX(this)->customDamage = *customDmg;
    }
}

HOOK_METHOD(Projectile, CollisionCheck, (Collideable *other) -> void)
{
    CustomDamageManager::currentWeaponDmg = &PR_EX(this)->customDamage;

    super(other);

    CustomDamageManager::currentWeaponDmg = nullptr;
}
